import{_ as a,p as s,q as n,a1 as e}from"./framework-d81ad7e5.js";const p={},t=e(`<h2 id="mysql中的数据备份" tabindex="-1"><a class="header-anchor" href="#mysql中的数据备份" aria-hidden="true">#</a> Mysql中的数据备份</h2><ul><li>备份的语句mysqldump的基本语法: <code>mysqldump -u username -p dbname table1 table2 &gt; BackupName.sql</code></li></ul><ul><li><p><strong>dbname</strong>：要备份数据库的名称；</p></li><li><p>table1和table2参数表示的是需要备份的数据库表的名称，假如为空则表示需要备份整个数据库；</p></li><li><p>BackupName.sql表示的是将数据库备份到指定的这个以后 .sql的文件中</p></li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysqldump <span class="token operator">-</span>h <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> <span class="token operator">-</span>uroot <span class="token operator">-</span>p0 ssm <span class="token operator">&gt;</span> d:<span class="token operator">/</span>app<span class="token operator">/</span>ssm<span class="token punctuation">.</span><span class="token keyword">sql</span>
mysqldump <span class="token operator">-</span>h <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> <span class="token operator">-</span>uroot <span class="token operator">-</span>p0 ssm <span class="token operator">&gt;</span> d:<span class="token operator">/</span>app<span class="token operator">/</span>ssm<span class="token punctuation">.</span><span class="token keyword">sql</span>

mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p1qaz2wsx0 <span class="token operator">-</span>P3306 <span class="token operator">-</span>h10<span class="token punctuation">.</span><span class="token number">4.97</span><span class="token number">.2</span> dbname <span class="token operator">&gt;</span> <span class="token operator">/</span>usr<span class="token operator">/</span><span class="token keyword">local</span><span class="token operator">/</span><span class="token keyword">temp</span><span class="token operator">/</span>$RANDOM<span class="token operator">-</span><span class="token keyword">sql</span><span class="token punctuation">.</span><span class="token keyword">sql</span> 

</code></pre></div><h2 id="mysqldump常用操作示例" tabindex="-1"><a class="header-anchor" href="#mysqldump常用操作示例" aria-hidden="true">#</a> <strong>mysqldump常用操作示例</strong></h2><ol><li>备份全部数据库的数据和结构</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 <span class="token operator">-</span>A <span class="token operator">&gt;</span> <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysqlDump<span class="token operator">/</span>mydb<span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre></div><ol start="2"><li>备份全部数据库的结构（加 -d 参数）</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 <span class="token operator">-</span>A <span class="token operator">-</span>d <span class="token operator">&gt;</span> <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysqlDump<span class="token operator">/</span>mydb<span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre></div><ol start="3"><li>备份全部数据库的数据(加 -t 参数)</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 <span class="token operator">-</span>A <span class="token operator">-</span>t <span class="token operator">&gt;</span> <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysqlDump<span class="token operator">/</span>mydb<span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre></div><ol start="4"><li>备份单个数据库的数据和结构(,数据库名mydb)</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysqldump <span class="token operator">-</span>uroot<span class="token operator">-</span>p123456 mydb <span class="token operator">&gt;</span> <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysqlDump<span class="token operator">/</span>mydb<span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre></div><ol start="5"><li>备份单个数据库的结构</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 mydb <span class="token operator">-</span>d <span class="token operator">&gt;</span> <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysqlDump<span class="token operator">/</span>mydb<span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre></div><ol start="6"><li>备份单个数据库的数据</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 mydb <span class="token operator">-</span>t <span class="token operator">&gt;</span> <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysqlDump<span class="token operator">/</span>mydb<span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre></div><ol start="7"><li>备份多个表的数据和结构（数据，结构的单独备份方法与上同）</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 mydb t1 t2 <span class="token operator">&gt;</span> <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysqlDump<span class="token operator">/</span>mydb<span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre></div><ol start="8"><li>一次备份多个数据库</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>mysqldump <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 <span class="token comment">--databases db1 db2 &gt; /data/mysqlDump/mydb.sql</span>
</code></pre></div><h3 id="还原mysql备份内容" tabindex="-1"><a class="header-anchor" href="#还原mysql备份内容" aria-hidden="true">#</a> 还原mysql备份内容</h3><p>有两种方式还原，第一种是在MySQL命令行中，第二种是使用SHELL行完成还原</p><ol><li>在系统命令行中，输入如下实现还原：</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 不登录 use</span>
mysql <span class="token operator">-</span>uroot <span class="token operator">-</span>p123456 <span class="token operator">&lt;</span> <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysqlDump<span class="token operator">/</span>mydb<span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre></div><ol><li>在登录进入mysql系统中,通过source指令找到对应系统中的文件进行还原：</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 登录mysql</span>

mysql <span class="token operator">-</span>u root <span class="token operator">-</span>p123456 <span class="token operator">-</span>h <span class="token number">123.123</span><span class="token number">.123</span><span class="token number">.231</span> <span class="token operator">-</span>P3306 
<span class="token comment">-- cat all dbs;</span>
<span class="token keyword">show</span> <span class="token keyword">databases</span><span class="token punctuation">;</span>
<span class="token comment">-- use ssm db </span>
<span class="token keyword">use</span> ssm<span class="token punctuation">;</span>
<span class="token comment">-- 还原</span>
source <span class="token operator">/</span>app<span class="token operator">/</span>bak<span class="token punctuation">.</span><span class="token keyword">sql</span>


mysql<span class="token operator">&gt;</span> source <span class="token operator">/</span><span class="token keyword">data</span><span class="token operator">/</span>mysqlDump<span class="token operator">/</span>mydb<span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre></div><h5 id="针对mysql进行备份-配合crontab-实现备份的内容为近一个月-31天-内的每天的mysql数据库记录。" tabindex="-1"><a class="header-anchor" href="#针对mysql进行备份-配合crontab-实现备份的内容为近一个月-31天-内的每天的mysql数据库记录。" aria-hidden="true">#</a> 针对mysql进行备份，配合crontab，实现备份的内容为近一个月（31天）内的每天的mysql数据库记录。</h5><p><strong>编写BASH维护固定数量备份文件</strong></p><ul><li>在Linux中，使用vi或者vim编写脚本内容并命名为：mysql_dump_script.sh</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment">#保存备份个数，备份31天数据</span>
<span class="token assign-left variable">number</span><span class="token operator">=</span><span class="token number">31</span>
<span class="token comment">#备份保存路径</span>
<span class="token assign-left variable">backup_dir</span><span class="token operator">=</span>/root/mysqlbackup
<span class="token comment">#日期</span>
<span class="token assign-left variable">dd</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">date</span> +%Y-%m-%d-%H-%M-%S<span class="token variable">\`</span></span>
<span class="token comment">#备份工具</span>
<span class="token assign-left variable">tool</span><span class="token operator">=</span>mysqldump
<span class="token comment">#用户名</span>
<span class="token assign-left variable">username</span><span class="token operator">=</span>root
<span class="token comment">#密码</span>
<span class="token assign-left variable">password</span><span class="token operator">=</span>TankB214
<span class="token comment">#将要备份的数据库</span>
<span class="token assign-left variable">database_name</span><span class="token operator">=</span>edoctor

<span class="token comment">#如果文件夹不存在则创建</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token variable">$backup_dir</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> 
<span class="token keyword">then</span>     
    <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token variable">$backup_dir</span><span class="token punctuation">;</span> 
<span class="token keyword">fi</span>

<span class="token comment">#简单写法 mysqldump -u root -p123456 users &gt; /root/mysqlbackup/users-$filename.sql</span>
<span class="token variable">$tool</span> <span class="token parameter variable">-u</span> <span class="token variable">$username</span> -p<span class="token variable">$password</span> <span class="token variable">$database_name</span> <span class="token operator">&gt;</span> <span class="token variable">$backup_dir</span>/<span class="token variable">$database_name</span>-<span class="token variable">$dd</span>.sql

<span class="token comment">#写创建备份日志</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;create <span class="token variable">$backup_dir</span>/<span class="token variable">$database_name</span>-<span class="token variable">$dd</span>.dupm&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$backup_dir</span>/log.txt

<span class="token comment">#找出需要删除的备份</span>
<span class="token assign-left variable">delfile</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token parameter variable">-crt</span> $backup_dir/*.sql <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $9 }&#39;</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-1</span><span class="token variable">\`</span></span>

<span class="token comment">#判断现在的备份数量是否大于$number</span>
<span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">ls</span> <span class="token parameter variable">-l</span> <span class="token parameter variable">-crt</span> $backup_dir/*.sql <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $9 }&#39;</span> <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">\`</span></span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$count</span> <span class="token parameter variable">-gt</span> <span class="token variable">$number</span> <span class="token punctuation">]</span>
<span class="token keyword">then</span>
  <span class="token comment">#删除最早生成的备份，只保留number数量的备份</span>
  <span class="token function">rm</span> <span class="token variable">$delfile</span>
  <span class="token comment">#写删除文件日志</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;delete <span class="token variable">$delfile</span>&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$backup_dir</span>/log.txt
<span class="token keyword">fi</span>
</code></pre></div><p>如上代码主要含义如下：</p><ol><li><p>首先设置各项参数，例如number最多需要备份的数目，备份路径，用户名，密码等。</p></li><li><p>执行mysqldump命令保存备份文件，并将操作打印至同目录下的log.txt中标记操作日志。</p></li><li><p>定义需要删除的文件：通过ls命令获取第九列，即文件名列，再通过实现定义操作时间最晚的那个需要删除的文件。</p></li><li><p>定义备份数量：通过ls命令加上 统计以sql结尾的文件的行数。</p></li><li><p>如果文件超出限制大小，就删除最早创建的sql文件</p></li></ol><h2 id="使用crontab定期执行备份脚本" tabindex="-1"><a class="header-anchor" href="#使用crontab定期执行备份脚本" aria-hidden="true">#</a> <strong>使用crontab定期执行备份脚本</strong></h2><p>在 Linux 中，周期执行的任务一般由cron这个守护进程来处理<code>[ps -ef|grep cron]</code>。cron读取一个或多个配置文件，这些配置文件中包含了命令行及其调用时间。 cron的配置文件称为“crontab”，是“<strong>cron table</strong>”的简写。</p><h3 id="crontab-的使用示例" tabindex="-1"><a class="header-anchor" href="#crontab-的使用示例" aria-hidden="true">#</a> crontab 的使用示例：</h3><ol><li>每天早上6点</li></ol><div class="language-text" data-ext="text"><pre class="language-text"><code>0 6 * * * echo &quot;Good morning.&quot; &gt;&gt; /tmp/test.txt //注意单纯echo，从屏幕上看不到任何输出，因为cron把任何输出都email到root的信箱了。
</code></pre></div><ol start="2"><li>每两个小时</li></ol><div class="language-text" data-ext="text"><pre class="language-text"><code>0 */2 * * * echo &quot;Have a break now.&quot; &gt;&gt; /tmp/test.txt
</code></pre></div><ol start="3"><li>晚上11点到早上8点之间每两个小时和早上八点</li></ol><div class="language-text" data-ext="text"><pre class="language-text"><code>0 23-7/2，8 * * * echo &quot;Have a good dream&quot; &gt;&gt; /tmp/test.txt
</code></pre></div><ol start="4"><li>每个月的4号和每个礼拜的礼拜一到礼拜三的早上11点</li></ol><div class="language-text" data-ext="text"><pre class="language-text"><code>0 11 4 * 1-3 command line
</code></pre></div><ol start="5"><li>1 月 1 日早上 4 点</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token number">0</span> <span class="token number">4</span> <span class="token number">1</span> <span class="token number">1</span> * <span class="token builtin class-name">command</span> line <span class="token assign-left variable"><span class="token environment constant">SHELL</span></span><span class="token operator">=</span>/bin/bash <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span>/sbin:/bin:/usr/sbin:/usr/bin <span class="token assign-left variable">MAILTO</span><span class="token operator">=</span>root //如果出现错误，或者有数据输出，数据作为邮件发给这个帐号 <span class="token assign-left variable"><span class="token environment constant">HOME</span></span><span class="token operator">=</span>/
</code></pre></div><ol start="6"><li>每小时执行/etc/cron.hourly内的脚本</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>01 * * * * root run-parts /etc/cron.hourly
</code></pre></div><ol start="7"><li>每天执行/etc/cron.daily内的脚本</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>02 <span class="token number">4</span> * * * root run-parts /etc/cron.daily
</code></pre></div><ol start="8"><li>每星期执行/etc/cron.weekly内的脚本</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token number">22</span> <span class="token number">4</span> * * <span class="token number">0</span> root run-parts /etc/cron.weekly
</code></pre></div><ol start="9"><li>每月去执行/etc/cron.monthly内的脚本</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token number">42</span> <span class="token number">4</span> <span class="token number">1</span> * * root run-parts /etc/cron.monthly
</code></pre></div><p>注意: &quot;run-parts&quot; 这个参数了，如果去掉这个参数的话，后面就可以写要运行的某个脚本名，而不是文件夹名。</p><ol start="10"><li>每天的下午4点、5点、6点的5 min、15 min、25 min、35 min、45 min、55 min时执行命令。</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token number">5</span>，15，25，35，45，55 <span class="token number">16</span>，17，18 * * * <span class="token builtin class-name">command</span>
</code></pre></div><ol start="11"><li>每周一，三，五的下午3：00系统进入维护状态，重新启动系统。</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>00 <span class="token number">15</span> * * <span class="token number">1</span>，3，5 <span class="token function">shutdown</span> <span class="token parameter variable">-r</span> +5
</code></pre></div><ol start="12"><li>每小时的10分，40分执行用户目录下的innd/bbslin这个指令：</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token number">10</span>，40 * * * * innd/bbslink
</code></pre></div><h2 id="mysqldump命令导出指定表的数据" tabindex="-1"><a class="header-anchor" href="#mysqldump命令导出指定表的数据" aria-hidden="true">#</a> mysqldump命令导出指定表的数据</h2><h5 id="_1-1-导出指定表的数据" tabindex="-1"><a class="header-anchor" href="#_1-1-导出指定表的数据" aria-hidden="true">#</a> 1.1 导出指定表的数据</h5><div class="language-mysql" data-ext="mysql"><pre class="language-mysql"><code>mysqldump -t database -u username -p password --tables table_name1 table_name2 &gt;D:\\db_script.sql
例如：
mysqldump -t gormDB -uroot -proot --tables auth_rule &gt;D:\\auth_rule.sql
</code></pre></div><h5 id="_1-2-导出数据不导出表的结构" tabindex="-1"><a class="header-anchor" href="#_1-2-导出数据不导出表的结构" aria-hidden="true">#</a> 1.2 导出数据不导出表的结构</h5><div class="language-mysql" data-ext="mysql"><pre class="language-mysql"><code>mysqldump -t 【数据库名】-u username -p password &gt; D:\\xxx.sql
</code></pre></div><h5 id="_1-3-导出指定表的结构" tabindex="-1"><a class="header-anchor" href="#_1-3-导出指定表的结构" aria-hidden="true">#</a> 1.3 导出指定表的结构</h5><div class="language-mysql" data-ext="mysql"><pre class="language-mysql"><code>mysqldump -d database -u username -p password --tables table_name1 table_name2 table_name3 &gt;D:\\db_script.sql
</code></pre></div><h5 id="_1-4-导出表的数据及结构" tabindex="-1"><a class="header-anchor" href="#_1-4-导出表的数据及结构" aria-hidden="true">#</a> 1.4 导出表的数据及结构</h5><div class="language-mysql" data-ext="mysql"><pre class="language-mysql"><code>mysqldump database -u username -p password --tables table_name1 table_name2 table_name3 &gt;D:\\db_script.sql
</code></pre></div><h5 id="_1-5-若-数据库中-某些表除外-其余表都需要导出" tabindex="-1"><a class="header-anchor" href="#_1-5-若-数据库中-某些表除外-其余表都需要导出" aria-hidden="true">#</a> 1.5 若 数据库中，某些表除外，其余表都需要导出</h5><div class="language-mysql" data-ext="mysql"><pre class="language-mysql"><code>mysqldump -h IP -u username -p password --default-character-set=utf8 --database database_name --ignore-table=database_name.table_name1  --ignore-table=database_name.table_name2 --ignore-table=database_name.table_name3 &gt;D:\\db_script.sql
</code></pre></div><h4 id="二、mysql-导入sql命令-导入-sql-文件及常用的命令" tabindex="-1"><a class="header-anchor" href="#二、mysql-导入sql命令-导入-sql-文件及常用的命令" aria-hidden="true">#</a> 二、mysql 导入sql命令 导入.sql 文件及常用的命令</h4><h5 id="_2-1-连接数据库-mysql" tabindex="-1"><a class="header-anchor" href="#_2-1-连接数据库-mysql" aria-hidden="true">#</a> 2.1 连接数据库 mysql</h5><div class="language-mysql" data-ext="mysql"><pre class="language-mysql"><code>mysql -h 主机地址 -u 用户名 -p 用户密码
</code></pre></div><h5 id="_2-2-进入到要导入-的数据库" tabindex="-1"><a class="header-anchor" href="#_2-2-进入到要导入-的数据库" aria-hidden="true">#</a> 2.2 进入到要导入 的数据库</h5><div class="language-mysql" data-ext="mysql"><pre class="language-mysql"><code>use 数据库名
</code></pre></div><h5 id="_2-3-使用如下命令倒数-sql脚本" tabindex="-1"><a class="header-anchor" href="#_2-3-使用如下命令倒数-sql脚本" aria-hidden="true">#</a> 2.3 使用如下命令倒数.sql脚本</h5><div class="language-mysql" data-ext="mysql"><pre class="language-mysql"><code>mysql&gt; source d:/path/../db.sql
</code></pre></div>`,79),o=[t];function l(r,c){return s(),n("div",null,o)}const i=a(p,[["render",l],["__file","mysqldump.html.vue"]]);export{i as default};
