import{_ as o,p as e,q as s,a1 as t}from"./framework-d81ad7e5.js";const a={},l=t(`<h3 id="不是永久" tabindex="-1"><a class="header-anchor" href="#不是永久" aria-hidden="true">#</a> 不是永久</h3><p>通过hostname命令直接更改主机名（不是永久）</p><ol><li>显示当前的主机名命令：hostname</li><li>更改主机名 <ol><li>修改之前的主机名显示如下： root@iZdfsfsEdFFkkmosdfWFWLKsfssfafERGDdfgsbyjOJF</li><li>修改主机的命令 <code>sudo hostname newhostname eg:sudo hostname lusifer</code></li><li>注意： 输入root密码进行授权，修改完后，关掉终端，重新打开，可以看见已经成功了。但是如果重启后，又变为原来的名称了，没有彻底改掉，如果彻底改的话用第二种。</li><li>修改之后的主机名显示如下： <code>root@lusifer</code></li></ol></li></ol><h3 id="永久" tabindex="-1"><a class="header-anchor" href="#永久" aria-hidden="true">#</a> 永久</h3><p>通过修改配置文件（永久改）</p><ol><li>hostname 和 hosts文件的作用 <ol><li><p>关于/etc/hostname文件 这个文件存储了hostname的名称，系统每次启动时都会通过读取这个文件获得系统的名称。</p></li><li><p>关于/etc/hosts 网络主机名称，可以通过修改hosts文件来重定向域名指向的ip。 同windows。</p></li></ol></li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>      root@lusifer$ <span class="token function">sudo</span> <span class="token function">vim</span> /etc/hosts  
      <span class="token number">127.0</span>.0.1  localhost VM-1560-ubuntu  <span class="token comment">#  127.0.0.1即本机的IP。       </span>
</code></pre></div><ol start="2"><li><p>修改配置文件中的主机名称</p></li><li><p>修改/etc/hostname文件</p></li><li><p>将lusifer改为newhostname <code>root@lusifer$ sudo vim /etc/hostname</code></p></li></ol><p>修改/etc/hosts文件</p><p>root@lusifer$ sudo vim /etc/hosts 修改前 <code>127.0.0.1 localhost lusifer</code> 修改后 <code>127.0.0.1 localhost newhostname </code> 最后:打开新的终端，终端窗口的系统名称已经修改好了<code>root@newhostname$</code></p>`,10),n=[l];function i(c,d){return e(),s("div",null,n)}const r=o(a,[["render",i],["__file","hostname.html.vue"]]);export{r as default};
