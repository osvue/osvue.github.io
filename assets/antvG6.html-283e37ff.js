import{_ as o,M as e,p as c,q as l,R as n,t as s,N as t,a1 as p}from"./framework-d81ad7e5.js";const u={},r=n("h2",{id:"常用配置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#常用配置","aria-hidden":"true"},"#"),s(" 常用配置")],-1),k=n("p",null,"本文使用到的配置以及后续 Tutorial 将会使用到到常用配置如下：",-1),i=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"配置项"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"选项 / 示例"),n("th",{style:{"text-align":"left"}},"默认"),n("th",{style:{"text-align":"left"}},"说明")])],-1),d=n("tr",null,[n("td",{style:{"text-align":"left"}},"fitView"),n("td",{style:{"text-align":"left"}},"Boolean"),n("td",{style:{"text-align":"left"}},"true / false"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"是否将图适配到画布大小，可以防止超出画布或留白太多。")],-1),g=n("tr",null,[n("td",{style:{"text-align":"left"}},"fitViewPadding"),n("td",{style:{"text-align":"left"}},"Number / Array"),n("td",{style:{"text-align":"left"}},"20 / [ 20, 40, 50, 20 ]"),n("td",{style:{"text-align":"left"}},"0"),n("td",{style:{"text-align":"left"}},"画布上的四周留白宽度。")],-1),m=n("tr",null,[n("td",{style:{"text-align":"left"}},"animate"),n("td",{style:{"text-align":"left"}},"Boolean"),n("td",{style:{"text-align":"left"}},"true / false"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"是否启用图的动画。")],-1),y=n("td",{style:{"text-align":"left"}},"modes",-1),q=n("td",{style:{"text-align":"left"}},"Object",-1),h=n("td",{style:{"text-align":"left"}},"{ default: [ 'drag-node', 'drag-canvas' ] }",-1),b=n("td",{style:{"text-align":"left"}},"null",-1),f={style:{"text-align":"left"}},_={href:"https://g6.antv.antgroup.com/zh/docs/manual/middle/states/mode",target:"_blank",rel:"noopener noreferrer"},w=n("tr",null,[n("td",{style:{"text-align":"left"}},"defaultNode"),n("td",{style:{"text-align":"left"}},"Object"),n("td",{style:{"text-align":"left"}},"{ type: 'circle', color: '#000', style: { ...... } }"),n("td",{style:{"text-align":"left"}},"null"),n("td",{style:{"text-align":"left"}},"节点默认的属性，包括节点的一般属性和样式属性（style）。")],-1),v=n("tr",null,[n("td",{style:{"text-align":"left"}},"defaultEdge"),n("td",{style:{"text-align":"left"}},"Object"),n("td",{style:{"text-align":"left"}},"{ type: 'polyline', color: '#000', style: { ...... } }"),n("td",{style:{"text-align":"left"}},"null"),n("td",{style:{"text-align":"left"}},"边默认的属性，包括边的一般属性和样式属性（style）。")],-1),x=n("tr",null,[n("td",{style:{"text-align":"left"}},"nodeStateStyles"),n("td",{style:{"text-align":"left"}},"Object"),n("td",{style:{"text-align":"left"}},"{ hover: { ...... }, select: { ...... } }"),n("td",{style:{"text-align":"left"}},"null"),n("td",{style:{"text-align":"left"}},"节点在除默认状态外，其他状态下的样式属性（style）。例如鼠标放置（hover）、选中（select）等状态。")],-1),j=n("tr",null,[n("td",{style:{"text-align":"left"}},"edgeStateStyles"),n("td",{style:{"text-align":"left"}},"Object"),n("td",{style:{"text-align":"left"}},"{ hover: { ...... }, select: { ...... } }"),n("td",{style:{"text-align":"left"}},"null"),n("td",{style:{"text-align":"left"}},"边在除默认状态外，其他状态下的样式属性（style）。例如鼠标放置（hover）、选中（select）等状态。")],-1),G=p(`<div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Tutorial Demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mountNode<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://gw.alipayobjects.com/os/antv/pkg/_antv.g6-3.7.1/dist/g6.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 4.x and later versions --&gt;</span>
    <span class="token comment">&lt;!-- &lt;script src=&quot;https://gw.alipayobjects.com/os/lib/antv/g6/4.3.11/dist/g6.min.js&quot;&gt;&lt;/script&gt; --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
      <span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">&#39;mountNode&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
        <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
        <span class="token literal-property property">fitView</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">fitViewPadding</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">const</span> <span class="token function-variable function">main</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>
          <span class="token string">&#39;https://gw.alipayobjects.com/os/basement_prod/6cae02ab-4c29-44b2-b1fd-4005688febcb.json&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> remoteData <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        graph<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>remoteData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        graph<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h1 id="元素及其配置" tabindex="-1"><a class="header-anchor" href="#元素及其配置" aria-hidden="true">#</a> 元素及其配置</h1><p>图的元素特指图上的<strong>节点</strong> <code>Node</code> 和<strong>边</strong> <code>Edge</code> 。在上节中，我们已经将 <strong>Tutorial 案例</strong>的图绘制了出来，但是各个元素及其 <code>label</code> 在视觉上很简陋。本文通过将上一章节中简陋的元素美化成如下效果，介绍元素的属性、配置方法。</p><h3 id="图的元素" tabindex="-1"><a class="header-anchor" href="#图的元素" aria-hidden="true">#</a> 图的元素</h3>`,4),S=n("strong",null,"节点",-1),z=n("code",null,"Node",-1),I=n("strong",null,"边",-1),A=n("code",null,"Edge",-1),D={href:"https://g6.antv.antgroup.com/zh/docs/manual/middle/elements/nodes/default-node",target:"_blank",rel:"noopener noreferrer"},E={href:"https://g6.antv.antgroup.com/zh/docs/manual/middle/elements/edges/defaultEdge",target:"_blank",rel:"noopener noreferrer"},T={href:"https://g6.antv.antgroup.com/zh/docs/manual/middle/elements/shape/shape-keyshape",target:"_blank",rel:"noopener noreferrer"},C=n("h2",{id:"元素的属性",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#元素的属性","aria-hidden":"true"},"#"),s(" 元素的属性")],-1),M=n("p",null,"不论是节点还是边，它们的属性分为两种：",-1),N=n("strong",null,[s("样式属性 "),n("code",null,"style")],-1),L={href:"https://g6.antv.antgroup.com/zh/docs/manual/middle/states/state",target:"_blank",rel:"noopener noreferrer"},R=n("strong",null,"其他属性",-1),V=n("code",null,"type",-1),B=n("code",null,"id",-1),P={href:"https://g6.antv.antgroup.com/zh/docs/manual/middle/states/state",target:"_blank",rel:"noopener noreferrer"},O=n("strong",null,"样式属性",-1),W=n("code",null,"fill",-1),F=n("code",null,"stroke",-1),Q=n("strong",null,"其他属性",-1),U=n("code",null,"type",-1),Y={href:"https://g6.antv.antgroup.com/zh/docs/api/graph-func/item#graphupdateitemitem-model-stack",target:"_blank",rel:"noopener noreferrer"},H=n("strong",null,"样式属性",-1),K=n("code",null,"style",-1),J=n("code",null,"style",-1),X=p(`<h3 id="数据结构" tabindex="-1"><a class="header-anchor" href="#数据结构" aria-hidden="true">#</a> 数据结构</h3><p>以节点元素为例，其属性的数据结构如下：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>

	<span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;node0&#39;</span><span class="token punctuation">,</span>          <span class="token comment">// 元素的 id</span>

  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;circle&#39;</span><span class="token punctuation">,</span>       <span class="token comment">// 元素的图形</span>

  <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span>             <span class="token comment">// 元素的大小</span>

  <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;node0&#39;</span>        <span class="token comment">// 标签文字</span>

  <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">// 控制初次渲染显示与隐藏，若为 false，代表隐藏。默认不隐藏</span>

  <span class="token literal-property property">labelCfg</span><span class="token operator">:</span> <span class="token punctuation">{</span>           <span class="token comment">// 标签配置属性</span>

    <span class="token literal-property property">positions</span><span class="token operator">:</span> <span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span><span class="token comment">// 标签的属性，标签在元素中的位置</span>

    <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token comment">// 包裹标签样式属性的字段 style 与标签其他属性在数据结构上并行</span>

      <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">12</span>      <span class="token comment">// 标签的样式属性，文字字体大小</span>

      <span class="token comment">// ...            // 标签的其他样式属性</span>

    <span class="token punctuation">}</span>

  <span class="token punctuation">}</span>

  <span class="token comment">// ...,               // 其他属性</span>

  <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>              <span class="token comment">// 包裹样式属性的字段 style 与其他属性在数据结构上并行</span>

    <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;#000&#39;</span><span class="token punctuation">,</span>       <span class="token comment">// 样式属性，元素的填充色</span>

    <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;#888&#39;</span><span class="token punctuation">,</span>     <span class="token comment">// 样式属性，元素的描边色</span>

    <span class="token comment">// ...              // 其他样式属性</span>

  <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre></div><p>边元素的属性数据结构与节点元素相似，只是其他属性中多了 <code>source</code> 和 <code>target</code> 字段，代表起始和终止节点的 <code>id</code>。 细化在图 1 中 <strong>Tutorial 案例</strong> 的视觉需求，我们需要完成：</p><ul><li>视觉效果： <ul><li>R1: 节点的描边和填充色，对应节点样式属性：<code>fill</code>，<code>stroke</code>；</li><li>R2: 节点上标签文本的颜色，对应节点其他属性：<code>labelCfg</code>；</li><li>R3: 边的透明度和颜色，对应边样式属性：<code>opacity</code>，<code>stroke</code>；</li><li>R4: 边上标签文本的方向和颜色，对应边其他属性：<code>labelCfg</code>；</li></ul></li><li>数据与视觉映射： <ul><li>R5: 根据数据中节点的 <code>class</code> 属性映射节点的形状，对应节点其他属性：<code>type</code>；</li><li>R6: 根据数据中边的 <code>weight</code> 属性映射边的粗细，对应边样式属性：<code>lineWidth</code>。</li></ul></li></ul><h3 id="数据格式" tabindex="-1"><a class="header-anchor" href="#数据格式" aria-hidden="true">#</a> 数据格式</h3><div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;nodes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">-100</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n1&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">-10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n2&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n3&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">320</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">-100</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n4&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">900</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n5&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c0&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">213</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;6&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n6&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c1&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">543</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">12</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;7&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n7&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c1&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">543</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">-100</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n8&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c1&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;9&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n9&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c1&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">-222</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n10&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c1&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">435</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">69</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n11&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c1&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;12&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n12&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c1&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">-129</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">39</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;13&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n13&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c2&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">234</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">843</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;14&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n14&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c2&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">-301</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">129</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;15&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n15&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c2&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">-20</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">-76</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;16&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n16&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c2&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">1220</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">-34</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;17&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n17&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c2&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">-10</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">954</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;18&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n18&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c2&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">492</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;19&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;n19&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c2&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;x&quot;</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token property">&quot;y&quot;</span><span class="token operator">:</span> <span class="token number">-241</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;edges&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e0-1&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e0-2&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e0-3&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e0-4&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">1.4</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e0-5&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;7&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e0-7&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e0-8&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;9&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e0-9&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">1.3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e0-10&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">1.5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e0-11&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;13&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e0-13&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">10</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;14&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e0-14&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;15&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e0-15&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">0.5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;16&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e0-16&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">0.8</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e2-3&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e4-5&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">1.4</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;6&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e4-6&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">2.1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;6&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e5-6&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">1.9</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;7&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;13&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e7-13&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">0.5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;14&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e8-14&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">0.8</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;9&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e9-10&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">0.2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;14&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e10-14&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;12&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e10-12&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">1.2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;11&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;14&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e11-14&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">1.2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;12&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;13&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e12-13&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">2.1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;16&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;17&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e16-17&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">2.5</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;16&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;18&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e16-18&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;17&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;18&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e17-18&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">2.6</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token property">&quot;source&quot;</span><span class="token operator">:</span> <span class="token string">&quot;18&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;target&quot;</span><span class="token operator">:</span> <span class="token string">&quot;19&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;label&quot;</span><span class="token operator">:</span> <span class="token string">&quot;e18-19&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;weight&quot;</span><span class="token operator">:</span> <span class="token number">1.6</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="配置属性" tabindex="-1"><a class="header-anchor" href="#配置属性" aria-hidden="true">#</a> 配置属性</h2><p>在 G6 中，根据不同的场景需求，有 7 种配置元素属性的方式。这里，我们简单介绍其中的两种：</p><ol><li>实例化图时配置元素的全局属性；</li><li>在数据中配置。</li></ol><h3 id="_1-实例化图时全局配置" tabindex="-1"><a class="header-anchor" href="#_1-实例化图时全局配置" aria-hidden="true">#</a> 1. 实例化图时全局配置</h3><p>**适用场景：**所有节点统一的属性配置，所有边统一的属性配置。 **使用方式：**使用图的两个配置项：</p><ul><li><code>defaultNode</code>：节点在默认状态下的<strong>样式属性</strong>（<code>style</code>）和<strong>其他属性</strong>；</li><li><code>defaultEdge</code>：边在默认状态下的<strong>样式属性</strong>（<code>style</code>）和<strong>其他属性</strong>。</li></ul><p><strong>注意:</strong> 由于是统一的配置，不能根据数据中的属性（如 <code>class</code>、<code>weight</code>）等值的不同进行个性化设置，因此只能满足 R1、R2、R3、R4 需求。</p><p>通过如下方式在实例化图时 <code>defaultNode</code> 和 <code>defaultEdge</code> ，可以完成上图效果：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>

  <span class="token comment">// ...                   // 图的其他配置</span>

  <span class="token comment">// 节点在默认状态下的样式配置（style）和其他配置</span>

  <span class="token literal-property property">defaultNode</span><span class="token operator">:</span> <span class="token punctuation">{</span>

    <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token comment">// 节点大小</span>

    <span class="token comment">// ...                 // 节点的其他配置</span>

    <span class="token comment">// 节点样式配置</span>

    <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>

      <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;steelblue&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 节点填充色</span>

      <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;#666&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 节点描边色</span>

      <span class="token literal-property property">lineWidth</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 节点描边粗细</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 节点上的标签文本配置</span>

    <span class="token literal-property property">labelCfg</span><span class="token operator">:</span> <span class="token punctuation">{</span>

      <span class="token comment">// 节点上的标签文本样式配置</span>

      <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>

        <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;#fff&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 节点标签文字颜色</span>

      <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 边在默认状态下的样式配置（style）和其他配置</span>

  <span class="token literal-property property">defaultEdge</span><span class="token operator">:</span> <span class="token punctuation">{</span>

    <span class="token comment">// ...                 // 边的其他配置</span>

    <span class="token comment">// 边样式配置</span>

    <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>

      <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token comment">// 边透明度</span>

      <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;grey&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 边描边颜色</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 边上的标签文本配置</span>

    <span class="token literal-property property">labelCfg</span><span class="token operator">:</span> <span class="token punctuation">{</span>

      <span class="token literal-property property">autoRotate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 边上的标签文本根据边的方向旋转</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token punctuation">}</span><span class="token punctuation">,</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="_2-在数据中配置" tabindex="-1"><a class="header-anchor" href="#_2-在数据中配置" aria-hidden="true">#</a> 2. 在数据中配置</h3><p>**适用场景：**不同节点/边可以有不同的个性化配置。 因此，这种配置方式可以满足 R5、R6 需求。 **使用方式：**可以直接将配置写入数据文件；也可以在读入数据后，通过遍历的方式写入配置。这里展示读入数据后，通过遍历的方式写入配置。下面代码展示了如何遍历数据进行属性的配置：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> nodes <span class="token operator">=</span> remoteData<span class="token punctuation">.</span>nodes<span class="token punctuation">;</span>
nodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    node<span class="token punctuation">.</span>style <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>
    node<span class="token punctuation">.</span>class <span class="token comment">// 根据节点数据中的 class 属性配置图形</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;c0&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;circle&#39;</span><span class="token punctuation">;</span> <span class="token comment">// class = &#39;c0&#39; 时节点图形为 circle</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">case</span> <span class="token string">&#39;c1&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;rect&#39;</span><span class="token punctuation">;</span> <span class="token comment">// class = &#39;c1&#39; 时节点图形为 rect</span>
      node<span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// class = &#39;c1&#39; 时节点大小</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">case</span> <span class="token string">&#39;c2&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      node<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;ellipse&#39;</span><span class="token punctuation">;</span> <span class="token comment">// class = &#39;c2&#39; 时节点图形为 ellipse</span>
      node<span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// class = &#39;c2&#39; 时节点大小</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

graph<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>remoteData<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>可以看到，图中有一些节点被渲染成了矩形，还有一些被渲染成了椭圆形。除了设置 <code>type</code> 属性之外，我们还覆盖了上文全局配置的节点的 <code>size</code> 属性，在矩形和椭圆的情况下，<code>size</code> 是一个数组；而在默认圆形的情况下，G6 将仍然读取全局配置的 <code>size</code> 属性为数字 <code>30</code>。</li><li>也就是说，动态配置属性让我们既可以根据数据的不同配置不同的属性值，也可以有能力覆盖全局静态的属性值。</li></ul><p>进一步地，我们尝试根据数据的比重不同，配置不一样边的粗细：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 遍历边数据</span>
<span class="token keyword">const</span> edges <span class="token operator">=</span> remoteData<span class="token punctuation">.</span>edges<span class="token punctuation">;</span>
edges<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">edge</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>edge<span class="token punctuation">.</span>style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    edge<span class="token punctuation">.</span>style <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  edge<span class="token punctuation">.</span>style<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> edge<span class="token punctuation">.</span>weight<span class="token punctuation">;</span> <span class="token comment">// 边的粗细映射边数据中的 weight 属性数值</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

graph<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>remoteData<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>边的粗细已经按照数据的比重成功渲染了出来，但是边原有的样式（透明度、颜色）却丢失了。这是因为 <strong>动态配置属性会覆盖全局配置属性</strong>，这里配置了 <code>style.lineWidth</code>，导致覆盖了全局的 <code>style</code> 对象。解决办法是<strong>将被覆盖的边的样式都移到动态配置里面</strong>来：</p><ul><li>完整代码</li></ul><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Tutorial Demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mountNode<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://gw.alipayobjects.com/os/antv/pkg/_antv.g6-3.7.1/dist/g6.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 4.x and later versions --&gt;</span>
    <span class="token comment">&lt;!-- &lt;script src=&quot;https://gw.alipayobjects.com/os/lib/antv/g6/4.3.11/dist/g6.min.js&quot;&gt;&lt;/script&gt; --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
      <span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">&#39;mountNode&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>
        <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
        <span class="token literal-property property">fitView</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">fitViewPadding</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">defaultNode</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
          <span class="token literal-property property">labelCfg</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;#fff&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">defaultEdge</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">labelCfg</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">autoRotate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> <span class="token function-variable function">main</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>
          <span class="token string">&#39;https://gw.alipayobjects.com/os/basement_prod/6cae02ab-4c29-44b2-b1fd-4005688febcb.json&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> remoteData <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> nodes <span class="token operator">=</span> remoteData<span class="token punctuation">.</span>nodes<span class="token punctuation">;</span>
        <span class="token keyword">const</span> edges <span class="token operator">=</span> remoteData<span class="token punctuation">.</span>edges<span class="token punctuation">;</span>
        nodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            node<span class="token punctuation">.</span>style <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          node<span class="token punctuation">.</span>style<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
          node<span class="token punctuation">.</span>style<span class="token punctuation">.</span>stroke <span class="token operator">=</span> <span class="token string">&#39;#666&#39;</span><span class="token punctuation">;</span>
          node<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fill <span class="token operator">=</span> <span class="token string">&#39;steelblue&#39;</span><span class="token punctuation">;</span>
          <span class="token keyword">switch</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>class<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token string">&#39;c0&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              node<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;circle&#39;</span><span class="token punctuation">;</span>
              <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">case</span> <span class="token string">&#39;c1&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              node<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;rect&#39;</span><span class="token punctuation">;</span>
              node<span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
              <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">case</span> <span class="token string">&#39;c2&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              node<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;ellipse&#39;</span><span class="token punctuation">;</span>
              node<span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
              <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        edges<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">edge</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>edge<span class="token punctuation">.</span>style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            edge<span class="token punctuation">.</span>style <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          edge<span class="token punctuation">.</span>style<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> edge<span class="token punctuation">.</span>weight<span class="token punctuation">;</span>
          edge<span class="token punctuation">.</span>style<span class="token punctuation">.</span>opacity <span class="token operator">=</span> <span class="token number">0.6</span><span class="token punctuation">;</span>
          edge<span class="token punctuation">.</span>style<span class="token punctuation">.</span>stroke <span class="token operator">=</span> <span class="token string">&#39;grey&#39;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        graph<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>remoteData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        graph<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h1 id="图布局-layout" tabindex="-1"><a class="header-anchor" href="#图布局-layout" aria-hidden="true">#</a> 图布局 Layout</h1><ul><li>当数据中没有节点位置信息，或者数据中的位置信息不满足需求时，需要借助一些布局算法对图进行布局。</li></ul><p><strong>般图：</strong></p><ul><li><p>Random Layout：随机布局；</p></li><li><p><strong>Force Layout：经典力导向布局：</strong></p><blockquote><p>力导向布局：一个布局网络中，粒子与粒子之间具有引力和斥力，从初始的随机无序的布局不断演变，逐渐趋于平衡稳定的布局方式称之为力导向布局。适用于描述事物间关系，比如人物关系、计算机网络关系等。</p></blockquote></li><li><p>Circular Layout：环形布局；</p></li><li><p>Radial Layout：辐射状布局；</p></li><li><p>MDS Layout：高维数据降维算法布局；</p></li><li><p>Fruchterman Layout：Fruchterman 布局，一种力导布局；</p></li><li><p>Dagre Layout：层次布局；</p></li><li><p>Concentric Layout：同心圆布局，将重要（默认以度数为度量）的节点放置在布局中心；</p></li><li><p>Grid Layout：格子布局，将节点有序（默认是数据顺序）排列在格子上。</p></li></ul><p><strong>树图布局：</strong></p><ul><li>Dendrogram Layout：树状布局（叶子节点布局对齐到同一层）；</li><li>CompactBox Layout：紧凑树布局；</li><li>Mindmap Layout：脑图布局；</li><li>Indented Layout：缩进布局。</li></ul>`,31),Z={href:"https://g6.antv.antgroup.com/zh/docs/api/graph-layout/guide",target:"_blank",rel:"noopener noreferrer"},$={href:"https://g6.antv.antgroup.com/zh/docs/api/tree-graph-layout/guide",target:"_blank",rel:"noopener noreferrer"},nn=p(`<h2 id="取消自动适配画布" tabindex="-1"><a class="header-anchor" href="#取消自动适配画布" aria-hidden="true">#</a> 取消自动适配画布</h2><p>我们在之前的教程里面，为了能够将超出画布的图适配到视野中，在实例化图时使用了 <code>fitView</code> 配置项。这节开始我们将会去掉这个特性。因为复杂的布局系统会打破适配的规则，反而会造成更多的困扰。让我们将相关的适配代码变为注释：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>

  <span class="token comment">// ...</span>

  <span class="token comment">// fitView: true,</span>

  <span class="token comment">// fitViewPadding: [ 20, 40, 50, 20 ]</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="默认布局" tabindex="-1"><a class="header-anchor" href="#默认布局" aria-hidden="true">#</a> 默认布局</h2><p>当实例化图时没有配置布局时：</p><ul><li>若数据中节点有位置信息（<code>x</code> 和 <code>y</code>），则按照数据的位置信息进行绘制；</li><li>若数据中节点没有位置信息，则默认使用 <strong>Random Layout</strong> 进行布局。</li></ul><h2 id="配置布局" tabindex="-1"><a class="header-anchor" href="#配置布局" aria-hidden="true">#</a> 配置布局</h2>`,7),sn=n("code",null,"type: 'force'",-1),an=n("code",null,"preventOverlap: true",-1),tn={href:"https://g6.antv.antgroup.com/zh/docs/api/graph-layout/force",target:"_blank",rel:"noopener noreferrer"},pn=p(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>

  <span class="token comment">// ...                      // 其他配置项</span>

  <span class="token literal-property property">layout</span><span class="token operator">:</span> <span class="token punctuation">{</span>

    <span class="token comment">// Object，可选，布局的方法及其配置项，默认为 random 布局。</span>

    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;force&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定为力导向布局</span>

    <span class="token literal-property property">preventOverlap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 防止节点重叠</span>

    <span class="token comment">// nodeSize: 30        // 节点大小，用于算法中防止节点重叠时的碰撞检测。由于已经在上一节的元素配置中设置了每个节点的 size 属性，则不需要在此设置 nodeSize。</span>

  <span class="token punctuation">}</span><span class="token punctuation">,</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h1 id="图的交互-behavior" tabindex="-1"><a class="header-anchor" href="#图的交互-behavior" aria-hidden="true">#</a> 图的交互 Behavior</h1><p>G6 封装了一系列交互方法，方便用户直接使用。本文将为 <strong>Tutorial 案例</strong> 增加简单的交互：hover 节点、点击节点、点击边、放缩画布、拖拽画布。</p><h3 id="交互行为-behavior" tabindex="-1"><a class="header-anchor" href="#交互行为-behavior" aria-hidden="true">#</a> 交互行为 Behavior</h3><p>G6 中的交互行为。G6 <strong>内置</strong>了一系列交互行为，用户可以直接使用。简单地理解，就是可以一键开启这些交互行为：</p><ul><li><code>drag-canvas</code>：拖拽画布；</li><li><code>zoom-canvas</code>：缩放画布。</li></ul>`,6),on={href:"https://g6.antv.antgroup.com/zh/docs/manual/middle/states/default-behavior",target:"_blank",rel:"noopener noreferrer"},en=n("h3",{id:"交互管理-mode",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#交互管理-mode","aria-hidden":"true"},"#"),s(" 交互管理 Mode")],-1),cn={href:"https://g6.antv.antgroup.com/zh/docs/manual/middle/states/mode",target:"_blank",rel:"noopener noreferrer"},ln=n("h3",{id:"交互状态-state",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#交互状态-state","aria-hidden":"true"},"#"),s(" 交互状态 State")],-1),un={href:"https://g6.antv.antgroup.com/zh/docs/manual/middle/states/state",target:"_blank",rel:"noopener noreferrer"},rn=n("code",null,"'click'",-1),kn=n("code",null,"true",-1),dn=n("code",null,"false",-1),gn=n("code",null,"'click'",-1),mn=n("code",null,"'click'",-1),yn=n("code",null,"true",-1),qn=n("code",null,"'click'",-1),hn=n("code",null,"false",-1),bn=p(`<h2 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h2><h3 id="拖拽、缩放——内置的交互行为" tabindex="-1"><a class="header-anchor" href="#拖拽、缩放——内置的交互行为" aria-hidden="true">#</a> 拖拽、缩放——内置的交互行为</h3><ul><li>在 G6 中使用内置 Behavior 的方式非常简单，只需要在图实例化时配置 <code>modes</code>。拖拽和缩放属于 G6 内置交互行为，修改代码如下：</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// ...                                          // 其他配置项</span>
  <span class="token literal-property property">modes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;drag-canvas&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zoom-canvas&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;drag-node&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 允许拖拽画布、放缩画布、拖拽节点</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,4),fn={href:"https://g6.antv.antgroup.com/zh/docs/manual/middle/states/default-behavior",target:"_blank",rel:"noopener noreferrer"},_n=n("p",null,[s("上面代码中的 "),n("code",null,"modes"),s(" 定义了 G6 的模式，"),n("code",null,"default"),s(" 是默认的模式，还可以允许有其他的模式，比如：编辑模式 "),n("code",null,"edit"),s(" 等。不同的模式，用户能进行的行为可以不同，比如默认模式能拖拽画布，编辑模式不允许拖拽画布：")],-1),wn=n("h3",{id:"hover、click-改变样式——状态式交互",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hover、click-改变样式——状态式交互","aria-hidden":"true"},"#"),s(" Hover、Click 改变样式——状态式交互")],-1),vn={href:"https://g6.antv.antgroup.com/zh/docs/manual/middle/states/state",target:"_blank",rel:"noopener noreferrer"},xn=n("code",null,"hover",-1),jn=n("code",null,"click",-1),Gn=p(`<ul><li>Step 1: 设置各状态下的元素样式；</li><li>Step 2: 监听事件并切换元素状态。</li></ul><h4 id="设置各状态下的元素样式" tabindex="-1"><a class="header-anchor" href="#设置各状态下的元素样式" aria-hidden="true">#</a> 设置各状态下的元素样式</h4><p>在实例化图时，通过 <code>nodeStateStyles</code> 和 <code>edgeStateStyles</code> 两个配置项可以配置元素在不同状态下的样式。 为达到 <strong>Tutorial 案例</strong> 中的效果：</p><ul><li>鼠标 hover 节点时，该节点颜色变浅；</li><li>点击节点时，该节点边框加粗变黑；</li><li>点击边时，该边变成蓝色。</li></ul><p>下面代码设置了节点分别在 <code>hover</code> 和 <code>click</code> 状态为 <code>true</code> 时的样式，边在 <code>click</code> 状态为 <code>true</code> 时的样式：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>

  <span class="token comment">// ...                           // 其他配置项</span>

  <span class="token comment">// 节点不同状态下的样式集合</span>

  <span class="token literal-property property">nodeStateStyles</span><span class="token operator">:</span> <span class="token punctuation">{</span>

    <span class="token comment">// 鼠标 hover 上节点，即 hover 状态为 true 时的样式</span>

    <span class="token literal-property property">hover</span><span class="token operator">:</span> <span class="token punctuation">{</span>

      <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;lightsteelblue&#39;</span><span class="token punctuation">,</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// 鼠标点击节点，即 click 状态为 true 时的样式</span>

    <span class="token literal-property property">click</span><span class="token operator">:</span> <span class="token punctuation">{</span>

      <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;#000&#39;</span><span class="token punctuation">,</span>

      <span class="token literal-property property">lineWidth</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token comment">// 边不同状态下的样式集合</span>

  <span class="token literal-property property">edgeStateStyles</span><span class="token operator">:</span> <span class="token punctuation">{</span>

    <span class="token comment">// 鼠标点击边，即 click 状态为 true 时的样式</span>

    <span class="token literal-property property">click</span><span class="token operator">:</span> <span class="token punctuation">{</span>

      <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;steelblue&#39;</span><span class="token punctuation">,</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token punctuation">}</span><span class="token punctuation">,</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="监听事件并切换元素状态" tabindex="-1"><a class="header-anchor" href="#监听事件并切换元素状态" aria-hidden="true">#</a> 监听事件并切换元素状态</h4>`,7),Sn=n("code",null,"graph",-1),zn=n("code",null,"graph.on()",-1),In=n("code",null,"node",-1),An=n("code",null,"edge",-1),Dn=n("code",null,"click",-1),En=n("code",null,"mouseenter",-1),Tn=n("code",null,"mouseleave",-1),Cn={href:"https://g6.antv.antgroup.com/zh/docs/api/Event",target:"_blank",rel:"noopener noreferrer"},Mn=p(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 在图实例 graph 上监听</span>

graph<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;元素类型:事件名&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token comment">// do something</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>现在，我们通过下面代码，为 <strong>Tutorial 案例</strong> 增加点和边上的监听事件，并在监听函数里使用 <code>graph.setItemState()</code> 改变元素的状态：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 鼠标进入节点</span>
graph<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;node:mouseenter&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> nodeItem <span class="token operator">=</span> e<span class="token punctuation">.</span>item<span class="token punctuation">;</span> <span class="token comment">// 获取鼠标进入的节点元素对象</span>
  graph<span class="token punctuation">.</span><span class="token function">setItemState</span><span class="token punctuation">(</span>nodeItem<span class="token punctuation">,</span> <span class="token string">&#39;hover&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置当前节点的 hover 状态为 true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 鼠标离开节点</span>
graph<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;node:mouseleave&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> nodeItem <span class="token operator">=</span> e<span class="token punctuation">.</span>item<span class="token punctuation">;</span> <span class="token comment">// 获取鼠标离开的节点元素对象</span>
  graph<span class="token punctuation">.</span><span class="token function">setItemState</span><span class="token punctuation">(</span>nodeItem<span class="token punctuation">,</span> <span class="token string">&#39;hover&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置当前节点的 hover 状态为 false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 点击节点</span>
graph<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;node:click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 先将所有当前是 click 状态的节点置为非 click 状态</span>
  <span class="token keyword">const</span> clickNodes <span class="token operator">=</span> graph<span class="token punctuation">.</span><span class="token function">findAllByState</span><span class="token punctuation">(</span><span class="token string">&#39;node&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  clickNodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    graph<span class="token punctuation">.</span><span class="token function">setItemState</span><span class="token punctuation">(</span>cn<span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> nodeItem <span class="token operator">=</span> e<span class="token punctuation">.</span>item<span class="token punctuation">;</span> <span class="token comment">// 获取被点击的节点元素对象</span>
  graph<span class="token punctuation">.</span><span class="token function">setItemState</span><span class="token punctuation">(</span>nodeItem<span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置当前节点的 click 状态为 true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 点击边</span>
graph<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;edge:click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 先将所有当前是 click 状态的边置为非 click 状态</span>
  <span class="token keyword">const</span> clickEdges <span class="token operator">=</span> graph<span class="token punctuation">.</span><span class="token function">findAllByState</span><span class="token punctuation">(</span><span class="token string">&#39;edge&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  clickEdges<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">ce</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    graph<span class="token punctuation">.</span><span class="token function">setItemState</span><span class="token punctuation">(</span>ce<span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> edgeItem <span class="token operator">=</span> e<span class="token punctuation">.</span>item<span class="token punctuation">;</span> <span class="token comment">// 获取被点击的边元素对象</span>
  graph<span class="token punctuation">.</span><span class="token function">setItemState</span><span class="token punctuation">(</span>edgeItem<span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置当前边的 click 状态为 true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h1 id="插件与工具" tabindex="-1"><a class="header-anchor" href="#插件与工具" aria-hidden="true">#</a> 插件与工具</h1><h2 id="插件" tabindex="-1"><a class="header-anchor" href="#插件" aria-hidden="true">#</a> 插件</h2><p>使用插件时，有三个步骤： Step 1: 引入插件； Step 2: 实例化插件； Step 3: 在实例化图时将插件的实例配置到图上。</p><p>Minimap 是 G6 的插件之一，引入 G6 后可以直接使用。实例化 Minimap 对象，并将其配置到图实例的插件列表里即可：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 实例化 minimap 插件</span>
<span class="token keyword">const</span> minimap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Minimap</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">&#39;minimap&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;delegate&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 实例化图</span>
<span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// ...                           // 其他配置项</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>minimap<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 将 minimap 实例配置到图上</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="image-minimap" tabindex="-1"><a class="header-anchor" href="#image-minimap" aria-hidden="true">#</a> Image Minimap</h3>`,9),Nn={href:"https://g6.antv.antgroup.com/manual/tutorial/plugins#minimap",target:"_blank",rel:"noopener noreferrer"},Ln=p("<li>为缓解该问题，Image Minimap 采用另一种机制，根据提供的图片地址或 base64 字符串 <code>graphImg</code> 绘制 <code>&lt;img /&gt;</code> 代替 minimap 上的 canvas。</li><li>该方法可以大大减轻两倍 canvas 绘制的压力。</li><li>但 <code>graphImg</code> 完全交由 G6 的用户控制，需要注意主画布更新时需要使用 <code>updateGraphImg</code> 方法替换 <code>graphImg</code>。</li>",3),Rn=p(`<p><strong>使用方法</strong></p><p>实例化 Image Minimap 插件时，<code>graphImg</code> 是必要参数。建议在主画布更新时使用 <code>updateGraphImg(img)</code> 同步更新 minimap 图片，其中参数 <code>img</code> 是图片地址或 base64 文本。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 实例化 Image Minimap 插件</span>
<span class="token keyword">const</span> imageMinimap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>ImageMinimap</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
  <span class="token literal-property property">graphImg</span><span class="token operator">:</span> <span class="token string">&#39;https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*eD7nT6tmYgAAAAAAAAAAAABkARQnAQ&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">//... 其他配置项</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>imageMinimap<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 配置 imageMinimap 插件</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

graph<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
graph<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token operator">...</span> <span class="token comment">// 一些主画布更新操作</span>
imageMinimap<span class="token punctuation">.</span><span class="token function">updateGraphImg</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用新的图片（用户自己生成）替换 minimap 图片</span>

</code></pre></div><h3 id="grid-网格" tabindex="-1"><a class="header-anchor" href="#grid-网格" aria-hidden="true">#</a> Grid 网格</h3><p>网格可用于辅助用户在拖拽节点时对齐到网格。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// const minimap = ...</span>

<span class="token comment">// 实例化 grid 插件</span>
<span class="token keyword">const</span> grid <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Grid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 实例化图</span>
<span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// ...                        // 其他配置项</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>minimap<span class="token punctuation">,</span> grid<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 将 grid 实例配置到图上</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="交互工具" tabindex="-1"><a class="header-anchor" href="#交互工具" aria-hidden="true">#</a> 交互工具</h2><p>交互工具是指配置到图上交互模式中的工具。使用交互工具时，有两个步骤： Step 1: 在实例化图时配置 <code>modes</code>； Step 2: 为交互工具定义样式。</p><h3 id="tooltip-节点提示框" tabindex="-1"><a class="header-anchor" href="#tooltip-节点提示框" aria-hidden="true">#</a> tooltip 节点提示框</h3>`,9),Vn={href:"https://g6.antv.antgroup.com/zh/docs/manual/middle/states/default-behavior#tooltip",target:"_blank",rel:"noopener noreferrer"},Bn=p(`<ul><li>实例化图时配置 <code>&#39;tooltip&#39;</code> 到 <code>modes</code> 中：</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">modes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token comment">// ...</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;tooltip&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 提示框</span>
        <span class="token function">formatText</span><span class="token punctuation">(</span><span class="token parameter">model</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 提示框文本内容</span>
          <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token string">&#39;label: &#39;</span> <span class="token operator">+</span> model<span class="token punctuation">.</span>label <span class="token operator">+</span> <span class="token string">&#39;&lt;br/&gt; class: &#39;</span> <span class="token operator">+</span> model<span class="token punctuation">.</span>class<span class="token punctuation">;</span>
          <span class="token keyword">return</span> text<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>由于 tooltip 实际上是一个悬浮的 <code>&lt;div&gt;</code> 标签，因此可在 HTML 的 <code>&lt;style&gt;</code> 标签或 CSS 中设置样式。下面展示在 HTML 中设置样式：</li></ul><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Tutorial Demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token comment">/* 提示框的样式 */</span>
    <span class="token selector">.g6-tooltip</span> <span class="token punctuation">{</span>
      <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #e2e2e2<span class="token punctuation">;</span>
      <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>
      <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>
      <span class="token property">color</span><span class="token punctuation">:</span> #545454<span class="token punctuation">;</span>
      <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.9<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token property">padding</span><span class="token punctuation">:</span> 10px 8px<span class="token punctuation">;</span>
      <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>174<span class="token punctuation">,</span> 174<span class="token punctuation">,</span> 174<span class="token punctuation">)</span> 0px 0px 10px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="edge-tooltip-边提示框" tabindex="-1"><a class="header-anchor" href="#edge-tooltip-边提示框" aria-hidden="true">#</a> edge-tooltip 边提示框</h3>`,5),Pn={href:"https://g6.antv.antgroup.com/zh/docs/manual/middle/states/default-behavior#edge-tooltip",target:"_blank",rel:"noopener noreferrer"},On=p(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">modes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token comment">// ...</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;tooltip&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 节点提示框</span>
        <span class="token comment">// ...</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;edge-tooltip&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 边提示框</span>
        <span class="token function">formatText</span><span class="token punctuation">(</span><span class="token parameter">model</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 边提示框文本内容</span>
          <span class="token keyword">const</span> text <span class="token operator">=</span>
            <span class="token string">&#39;source: &#39;</span> <span class="token operator">+</span>
            model<span class="token punctuation">.</span>source <span class="token operator">+</span>
            <span class="token string">&#39;&lt;br/&gt; target: &#39;</span> <span class="token operator">+</span>
            model<span class="token punctuation">.</span>target <span class="token operator">+</span>
            <span class="token string">&#39;&lt;br/&gt; weight: &#39;</span> <span class="token operator">+</span>
            model<span class="token punctuation">.</span>weight<span class="token punctuation">;</span>
          <span class="token keyword">return</span> text<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>与 tooltip 相同，edge-tooltip 是一个悬浮的 <code>&lt;div&gt;</code> 标签，可以使用与 tooltip 相同的方法设置其悬浮框的样式。</p><p>G6 的动画分为两个层次：</p><ul><li>图全局动画：图整体变化时的动画过渡；</li><li>元素动画：节点和边的动画效果。</li></ul><h2 id="全局动画" tabindex="-1"><a class="header-anchor" href="#全局动画" aria-hidden="true">#</a> 全局动画</h2><p>G6 的全局动画指通过图实例进行操作时，产生的动画效果。例如：</p><ul><li><code>graph.updateLayout(cfg)</code></li></ul><p>通过实例化图时配置 <code>animate: true</code>，可以达到每次进行上述操作时，动画效果变化的目的。</p><p><strong>例子</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>

  <span class="token comment">// ...                      // 其他配置项</span>

  <span class="token literal-property property">animate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// Boolean，可选，全局变化时否使用动画过渡</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h1 id="g6-核心概念总览" tabindex="-1"><a class="header-anchor" href="#g6-核心概念总览" aria-hidden="true">#</a> G6 核心概念总览</h1><p><img src="https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*I0RoTKgsvSEAAAAAAAAAAAAAARQnAQ" alt="G6 Main concepts overview"></p><h4 id="图-graph" tabindex="-1"><a class="header-anchor" href="#图-graph" aria-hidden="true">#</a> 图 Graph</h4><ul><li>初始化和渲染</li></ul><h4 id="图形-shape-选读" tabindex="-1"><a class="header-anchor" href="#图形-shape-选读" aria-hidden="true">#</a> 图形（Shape）(选读)</h4><ul><li>图形和属性</li><li>关键图形（Key Shape）</li><li>图形分组（Shape group)</li><li>图形变换 （Transform）</li></ul><h4 id="图元素-节点、边、combo" tabindex="-1"><a class="header-anchor" href="#图元素-节点、边、combo" aria-hidden="true">#</a> 图元素（节点、边、Combo)</h4><ul><li>节点 <ul><li>内置节点</li><li>自定义节点</li><li>节点的连接点 anchorPoints</li></ul></li><li>边 <ul><li>内置边</li><li>自定义边</li></ul></li><li>Combo <ul><li>内置 Combo</li><li>自定义 Combo</li><li>Combo 机制</li><li>创建与拆分 Combo</li></ul></li><li>高级样式 <ul><li>设置元素背景</li><li>设置元素渐变色</li><li>设置纹理</li><li>更新文本样式</li></ul></li><li>高级操作 <ul><li>更新节点或边的样式</li><li>层级调整</li><li>显示隐藏</li><li>锁定/解锁</li></ul></li></ul><h4 id="图布局" tabindex="-1"><a class="header-anchor" href="#图布局" aria-hidden="true">#</a> 图布局</h4><ul><li>内置布局</li><li>自定义布局</li></ul><h4 id="交互与事件" tabindex="-1"><a class="header-anchor" href="#交互与事件" aria-hidden="true">#</a> 交互与事件</h4><ul><li>监听与绑定事件</li><li>内置交互行为</li><li>自定义交互行为（选读）</li><li>交互模式 Mode</li></ul><h4 id="动画" tabindex="-1"><a class="header-anchor" href="#动画" aria-hidden="true">#</a> 动画</h4><ul><li>全局动画</li><li>元素动画</li></ul><h4 id="图算法" tabindex="-1"><a class="header-anchor" href="#图算法" aria-hidden="true">#</a> 图算法</h4><h4 id="插件-1" tabindex="-1"><a class="header-anchor" href="#插件-1" aria-hidden="true">#</a> 插件</h4><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Tutorial Demo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token comment">/* 提示框的样式 */</span>
    <span class="token selector">.g6-tooltip</span> <span class="token punctuation">{</span>
      <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #e2e2e2<span class="token punctuation">;</span>
      <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>
      <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>
      <span class="token property">color</span><span class="token punctuation">:</span> #545454<span class="token punctuation">;</span>
      <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.9<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token property">padding</span><span class="token punctuation">:</span> 10px 8px<span class="token punctuation">;</span>
      <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>174<span class="token punctuation">,</span> 174<span class="token punctuation">,</span> 174<span class="token punctuation">)</span> 0px 0px 10px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 引入 G6 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://gw.alipayobjects.com/os/antv/pkg/_antv.g6-3.7.1/dist/g6.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 4.x and later versions --&gt;</span>
    <span class="token comment">&lt;!-- &lt;script src=&quot;https://gw.alipayobjects.com/os/lib/antv/g6/4.3.11/dist/g6.min.js&quot;&gt;&lt;/script&gt; --&gt;</span>


    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mountNode<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>


    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token constant">G6</span><span class="token punctuation">.</span>Global<span class="token punctuation">.</span>version<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> initData <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token comment">// 点集</span>
            <span class="token literal-property property">nodes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;node1&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 节点的唯一标识</span>
                    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token comment">// 节点横坐标</span>
                    <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token comment">// 节点纵坐标</span>
                    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;起始点&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 节点文本</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span>
                    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;node2&#39;</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
                    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;目标点&#39;</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token comment">// 边集</span>
            <span class="token literal-property property">edges</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                <span class="token comment">// 表示一条从 node1 节点连接到 node2 节点的边</span>
                <span class="token punctuation">{</span>
                    <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token string">&#39;node1&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 起始点 id</span>
                    <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;node2&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 目标点 id</span>
                    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;我是连线&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 边的文本</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>

        
<span class="token comment">// 实例化 grid 插件</span>
<span class="token keyword">const</span> grid <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Grid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">&#39;mountNode&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定挂载容器</span>
            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token comment">// 图的宽度</span>
            <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token comment">// 图的高度</span>

            <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span> grid<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 将 grid 实例配置到图上</span>
            <span class="token comment">// fitView: true,</span>
            <span class="token comment">// fitViewPadding: [20, 40, 50, 20],</span>
            <span class="token literal-property property">modes</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;drag-canvas&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;zoom-canvas&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;drag-node&#39;</span>
            <span class="token punctuation">,</span>  <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;tooltip&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 提示框</span>
        <span class="token function">formatText</span><span class="token punctuation">(</span><span class="token parameter">model</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 提示框文本内容</span>
          <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token string">&#39;label: &#39;</span> <span class="token operator">+</span> model<span class="token punctuation">.</span>label <span class="token operator">+</span> <span class="token string">&#39;&lt;br/&gt; class: &#39;</span> <span class="token operator">+</span> model<span class="token punctuation">.</span>class<span class="token punctuation">;</span>
          <span class="token keyword">return</span> text<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
            
            <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 允许拖拽画布、放缩画布、拖拽节点</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>

            <span class="token literal-property property">layout</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token comment">// Object，可选，布局的方法及其配置项，默认为 random 布局。</span>
                <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;force&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定为力导向布局</span>
                <span class="token literal-property property">preventOverlap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 防止节点重叠</span>
                <span class="token comment">// nodeSize: 30        // 节点大小，用于算法中防止节点重叠时的碰撞检测。由于已经在上一节的元素配置中设置了每个节点的 size 属性，则不需要在此设置 nodeSize。</span>
                <span class="token literal-property property">linkDistance</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token comment">// 指定边距离为100</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token literal-property property">nodeStateStyles</span><span class="token operator">:</span> <span class="token punctuation">{</span>

                <span class="token comment">// 鼠标 hover 上节点，即 hover 状态为 true 时的样式</span>

                <span class="token literal-property property">hover</span><span class="token operator">:</span> <span class="token punctuation">{</span>

                    <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;lightsteelblue&#39;</span><span class="token punctuation">,</span>

                <span class="token punctuation">}</span><span class="token punctuation">,</span>

                <span class="token comment">// 鼠标点击节点，即 click 状态为 true 时的样式</span>

                <span class="token literal-property property">click</span><span class="token operator">:</span> <span class="token punctuation">{</span>

                    <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;#000&#39;</span><span class="token punctuation">,</span>

                    <span class="token literal-property property">lineWidth</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>

                <span class="token punctuation">}</span><span class="token punctuation">,</span>

            <span class="token punctuation">}</span><span class="token punctuation">,</span>

            <span class="token comment">// 边不同状态下的样式集合</span>

            <span class="token literal-property property">edgeStateStyles</span><span class="token operator">:</span> <span class="token punctuation">{</span>

                <span class="token comment">// 鼠标点击边，即 click 状态为 true 时的样式</span>

                <span class="token literal-property property">click</span><span class="token operator">:</span> <span class="token punctuation">{</span>

                    <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;steelblue&#39;</span><span class="token punctuation">,</span>

                <span class="token punctuation">}</span><span class="token punctuation">,</span>

            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token comment">// 节点在默认状态下的样式配置（style）和其他配置</span>
            <span class="token literal-property property">defaultNode</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token comment">// 节点大小</span>
                <span class="token comment">// ...                 // 节点的其他配置</span>
                <span class="token comment">// 节点样式配置</span>
                <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;steelblue&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 节点填充色</span>
                    <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;#666&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 节点描边色</span>
                    <span class="token literal-property property">lineWidth</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 节点描边粗细</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token comment">// 节点上的标签文本配置</span>
                <span class="token literal-property property">labelCfg</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token comment">// 节点上的标签文本样式配置</span>
                    <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;#fff&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 节点标签文字颜色</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>



        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token comment">//   graph.data(initData); // 加载数据</span>
        <span class="token comment">//   graph.render(); // 渲染</span>
        <span class="token comment">//  fetch 函数允许我们发起网络请求，加载数据，而其异步的过程可以通过 async/await 进行更合理的控制。这里我们为了方便起见，将主要逻辑放在了 main 函数里面。 </span>

        <span class="token comment">//  const graph = ...</span>
        <span class="token keyword">const</span> <span class="token function-variable function">main</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>
                <span class="token string">&#39;https://gw.alipayobjects.com/os/basement_prod/6cae02ab-4c29-44b2-b1fd-4005688febcb.json&#39;</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> remoteData <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 在读入数据后，通过遍历的方式写入配置。</span>

            remoteData<span class="token punctuation">.</span>nodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    node<span class="token punctuation">.</span>style <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">switch</span> <span class="token punctuation">(</span>
                node<span class="token punctuation">.</span>class <span class="token comment">// 根据节点数据中的 class 属性配置图形</span>
                <span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">case</span> <span class="token string">&#39;c0&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        node<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;circle&#39;</span><span class="token punctuation">;</span> <span class="token comment">// class = &#39;c0&#39; 时节点图形为 circle</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">case</span> <span class="token string">&#39;c1&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        node<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;rect&#39;</span><span class="token punctuation">;</span> <span class="token comment">// class = &#39;c1&#39; 时节点图形为 rect</span>
                        node<span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// class = &#39;c1&#39; 时节点大小</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">case</span> <span class="token string">&#39;c2&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                        node<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">&#39;ellipse&#39;</span><span class="token punctuation">;</span> <span class="token comment">// class = &#39;c2&#39; 时节点图形为 ellipse</span>
                        node<span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// class = &#39;c2&#39; 时节点大小</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// ... 很多节点的  x 和 y 不在图的宽高（width: 800, height: 600）范围内：</span>





            <span class="token keyword">const</span> edges <span class="token operator">=</span> remoteData<span class="token punctuation">.</span>edges<span class="token punctuation">;</span>
            edges<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">edge</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>edge<span class="token punctuation">.</span>style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    edge<span class="token punctuation">.</span>style <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                edge<span class="token punctuation">.</span>style<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> edge<span class="token punctuation">.</span>weight<span class="token punctuation">;</span> <span class="token comment">// 边的粗细映射边数据中的 weight 属性数值</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            graph<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>remoteData<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 加载远程数据</span>
            graph<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 渲染</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 鼠标进入节点</span>
        graph<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;node:mouseenter&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">const</span> nodeItem <span class="token operator">=</span> e<span class="token punctuation">.</span>item<span class="token punctuation">;</span> <span class="token comment">// 获取鼠标进入的节点元素对象</span>
            graph<span class="token punctuation">.</span><span class="token function">setItemState</span><span class="token punctuation">(</span>nodeItem<span class="token punctuation">,</span> <span class="token string">&#39;hover&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置当前节点的 hover 状态为 true</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 鼠标离开节点</span>
        graph<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;node:mouseleave&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> nodeItem <span class="token operator">=</span> e<span class="token punctuation">.</span>item<span class="token punctuation">;</span> <span class="token comment">// 获取鼠标离开的节点元素对象</span>
            graph<span class="token punctuation">.</span><span class="token function">setItemState</span><span class="token punctuation">(</span>nodeItem<span class="token punctuation">,</span> <span class="token string">&#39;hover&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置当前节点的 hover 状态为 false</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">/*
                                          G6 提供了图的两个相关配置项：
                                        
                                        fitView：设置是否将图适配到画布中；
                                        fitViewPadding：画布上四周的留白宽度。
                                        我们将实例化图的代码更改为如下形式：
                                         
                                        const graph = new G6.Graph({
                                          // ...
                                          fitView: true,
                                          fitViewPadding: [20, 40, 50, 20],
                                        });
                                        */</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,27);function Wn(Fn,Qn){const a=e("ExternalLinkIcon");return c(),l("div",null,[r,k,n("table",null,[i,n("tbody",null,[d,g,m,n("tr",null,[y,q,h,b,n("td",f,[s("图上行为模式的集合。由于比较复杂，按需参见："),n("a",_,[s("G6 中的 Mode"),t(a)]),s(" 教程。")])]),w,v,x,j])]),G,n("p",null,[s("图的元素特指图上的"),S,s(),z,s(" 和"),I,s(),A,s(" 。G6 内置了一系列 "),n("a",D,[s("内置的节点"),t(a)]),s(" 和 "),n("a",E,[s("内置的边"),t(a)]),s("，供用户自由选择。G6 不同的内置节点或不同的内置边主要区别在于元素的 "),n("a",T,[s("图形 Shape"),t(a)]),s("，例如，节点可以是圆形、矩形、图片等。")]),C,M,n("ul",null,[n("li",null,[N,s("：对应 Canvas 中的各种样式，在元素"),n("a",L,[s("状态 State"),t(a)]),s(" 发生变化时，可以被改变；")]),n("li",null,[R,s("：例如图形类型（ "),V,s("）、id（"),B,s(" ）一类在元素"),n("a",P,[s("状态 State"),t(a)]),s(" 发生变化时不能被改变的属性。")])]),n("p",null,[s("例如，G6 设定 hover 或 click 节点，造成节点状态的改变，只能自动改变节点的"),O,s("（如 "),W,s("、"),F,s(" 等**）**，"),Q,s("（如 "),U,s(" 等）不能被改变。如果需要改变其他属性，要通过 "),n("a",Y,[s("graph.updateItem"),t(a)]),s(" 手动配置。"),H,s("是一个名为 "),K,s(" 的对象， "),J,s(" 字段与其他属性并行。")]),X,n("p",null,[s("各种布局方法的具体介绍及其配置参见 "),n("a",Z,[s("图布局 API"),t(a)]),s(" 或 "),n("a",$,[s("树图布局 API"),t(a)]),s("。")]),nn,n("p",null,[s("G6 使用布局的方式非常简单，在图实例化的时候，加上 layout 配置即可。下面代码在实例化图时设置了布局方法为 "),sn,s("，即经典力导向图布局。并设置了参数 "),an,s(" ，表示希望节点不重叠。力导向布局的更多配置项参见："),n("a",tn,[s("Layout API"),t(a)]),s("。")]),pn,n("p",null,[s("更多详见："),n("a",on,[s("交互行为 Behavior"),t(a)])]),en,n("p",null,[s("Mode 是 G6 交互行为的管理机制，一个 mode 是多种行为 Behavior 的组合，允许用户通过切换不同的模式进行交互行为的管理。由于该概念较为复杂，在本入门教程中，读者不需要对该机制深入理解。如有需求，参见 "),n("a",cn,[s("交互模式 Mode"),t(a)]),s("。")]),ln,n("p",null,[n("a",un,[s("状态 State"),t(a)]),s(" 是 G6 中的状态机制。用户可以为图中的元素（节点/边）设置不同的状态及不同状态下的样式。在状态发生变化时，G6 自动更新元素的样式。例如，可以为节点设置状态 "),rn,s(" 为 "),kn,s(" 或 "),dn,s("，并为节点设置 "),gn,s(" 的样式为加粗节点边框。当 "),mn,s(" 状态被切换为 "),yn,s(" 时，节点的边框将会被加粗，"),qn,s(" 状态被切换为 "),hn,s(" 时，节点的样式恢复到默认。在下面的使用方法中，将会有具体例子。")]),bn,n("p",null,[s("除了直接使用内置交互名称外，也可以为 Behavior 配置参数，例如放缩画布的敏感度、最大/最小放缩程度等，具体用法参见 "),n("a",fn,[s("交互行为 Behavior"),t(a)]),s("。")]),_n,wn,n("p",null,[s("有时我们希望通过交互可以将元素样式变成特定样式， 鼠标 hover 节点、点击节点、点击边时，样式发生了变化。这里涉及到了 G6 中 "),n("a",vn,[s("状态 State"),t(a)]),s(" 的概念。简单地说，是否 "),xn,s(" 、"),jn,s(" 、任何操作（可以是自己起的状态名），都可以称为一种状态（state）。用户可以自由设置不同状态下的元素样式。要达到交互更改元素样式，需要两步：")]),Gn,n("p",null,[s("G6 中所有元素监听都挂载在图实例上，如下代码中的 "),Sn,s(" 对象是 G6.Graph 的实例，"),zn,s(" 函数监听了某元素类型（"),In,s(" / "),An,s("）的某种事件（"),Dn,s(" / "),En,s(" / "),Tn,s(" / ... 所有事件参见："),n("a",Cn,[s("Event API"),t(a)]),s("）。")]),Mn,n("ul",null,[n("li",null,[s("由于 "),n("a",Nn,[s("Minimap"),t(a)]),s(" 的原理是将主画布内容复制到 minimap 的画布上，在大数据量下可能会造成双倍的绘制效率成本。")]),Ln]),Rn,n("p",null,[s("节点提示框可以用在节点的详细信息的展示。当鼠标滑过节点时，显示一个浮层告知节点的详细信息。更多配置参见 "),n("a",Vn,[s("内置交互 tooltip"),t(a)]),s("。")]),Bn,n("p",null,[s("边提示框可以用在边的详细信息的展示。当鼠标滑过边时，显示一个浮层告知边的详细信息。更多配置参见 "),n("a",Pn,[s("内置交互 edge-tooltip"),t(a)]),s("。")]),On])}const Yn=o(u,[["render",Wn],["__file","antvG6.html.vue"]]);export{Yn as default};
