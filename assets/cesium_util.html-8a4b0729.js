import{_ as n,p as s,q as a,a1 as t}from"./framework-d81ad7e5.js";const p="/assets/ora-1beb5702.webp",o={},e=t(`<ul><li><code>https://github.com/panergongzi/cesiumWork/blob/master/pick.js</code></li></ul><ol><li><p>Scene.prototype.pickPositionWorldCoordinates 根据屏幕坐标获取世界坐标</p></li><li><p>Scene. prototype.pickPosition  根据屏幕坐标获取世界坐标</p></li><li><p>Scene. prototype.drillPick 通过屏幕坐标拾取多个对象</p></li><li><p>Scene. prototype.pickFromRay 通过射线拾取第一个3d对象</p></li><li><p>Scene. prototype.drillPickFromRay 通过射线拾取多个3d对象</p></li><li><p>Scene. prototype.pickFromRayMostDetailed 异步拾取3d对象</p></li><li><p>Scene.prototype.drillPickFromRayMostDetailed  异步拾取多个3d对象</p></li><li><p>Scene. prototype.sampleHeight 根据当前弧度坐标获取3d高度</p></li><li><p>Scene. prototype.clampToHeight 根据当前世界坐标位置获取3d对象</p></li><li><p>Scene. prototype.sampleHeightMostDetailed异步获取当前位置的高度</p></li><li><p>Scene. prototype.clampToHeightMostDetailed 异步获取当前位置的3d对象</p></li><li><p>Scene. prototype.cartesianToCanvasCoordinates 世界坐标转canvas坐标</p></li><li><p>Camera. prototype.pickEllipsoid 根据屏幕坐标返回椭球体坐标或者2维地图上的坐标</p></li><li><p>Camera. prototype.getPickRay 以相机位置为起点，屏幕坐标位置为终点做一条射线</p></li><li><p>Scene.prototype.requestRender 手动场景渲染，每调一次手动触发一次渲染</p></li><li><p>Scene. prototype.forceRender 强制场景进行渲染</p></li><li><p>Scene. prototype.pick 通过屏幕坐标拾取3d对象</p></li><li><p>Camera. prototype.distanceToBoundingSphere 相机到椭球体的距离</p></li><li><p>Camera. prototype.viewBoundingSphere 将相机看向球体中心</p></li><li><p>Camera. prototype.flyToBoundingSphere 飞向球体中心</p></li><li><p>getRectangleCameraCoordinates 通过视图矩形获取相机位置</p></li><li><p>Camera. prototype.computeViewRectangle 返回相机在球体上的可视范围矩形</p></li><li><p>Cesium. Cartesian3.lerp 根据两个点和插值数量进行插值</p></li><li><p>Quaternion.fromAxisAngle 沿某个轴旋转角度之后，返回新的位置，是一个四元数</p></li><li><p>获取视图范围 varRectangle =this.viewer.camera.computeViewRectangle();</p></li><li><p>获取Zoom</p></li></ol><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span> viewer<span class="token punctuation">.</span>camera<span class="token punctuation">.</span>moveEnd<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>onMoveendMap<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//监听地图移动完成事件onMoveendMap = () =&gt; {</span>

<span class="token keyword">const</span>  me <span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">;</span><span class="token comment">//获取当前相机高度let height = Math.ceil(me.viewer.camera.positionCartographic.height);</span>

<span class="token keyword">let</span>  zoom <span class="token operator">=</span> me<span class="token punctuation">.</span><span class="token function">heightToZoom</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol><li><p>Globe. prototype.pick 返回地球上相交的点</p></li><li><p>Globe. prototype.pickWorldCoordinates 返回地球上相交点的坐标</p></li><li><p>Cesium. sampleTerrainMostDetailed(terrainProvider, positions);根据地形求地形上点的高度</p></li><li><p>Globe. prototype.getHeight（cartographic）根据经纬度获取地球上的高度</p></li><li><p>new Cesium.HeadingPitchRoll(Math.PI, Math.PI, Math.PI);设置欧拉角 弧度</p></li><li><p>HeadingPitchRoll. fromQuaternion = function (quaternion, result) 从四元数转成欧拉角</p></li><li><p>HeadingPitchRoll. fromDegrees = function (heading, pitch, roll, result) 用经纬度生成欧拉角</p></li><li><p>Plane.projectPointOntoPlane = function (plane, point, result)点到平面的投影</p></li><li><p>Plane.getPointDistance = function (plane, point)点到平面的距离</p></li><li><p>Transforms.eastNorthUpToFixedFrame 传入一个世界坐标，以地球东-北-上方向为参考系生成一个矩阵</p></li><li><p>Transforms.northEastDownToFixedFrame 传入一个世界坐标，以地球北-东-下方向为参考系生成一个矩阵</p></li><li><p>Transforms.headingPitchRollToFixedFrame(origin,headingPitchRoll) 传入一个坐标和欧拉角得到一个矩阵</p></li><li><p>Transforms.headingPitchRollQuaternion(origin,headingPitchRoll) 传入一个坐标和欧拉角得到一个四元数</p></li><li><p>Transforms.fixedFrameToHeadingPitchRoll 传入一个矩阵得到欧拉角</p></li><li><p>SceneTransforms.wgs84ToWindowCoordinates (scene, position, result) 将场景里的某个世界坐标位置转成屏幕坐标</p></li><li><p>SceneTransforms.wgs84ToDrawingBufferCoordinates(scene, position, result) 将场景里的某个世界坐标位置转成换图形缓冲区坐标</p></li><li><p>SceneTransforms.transformWindowToDrawingBuffer(scene,windowPosition,result)将屏幕坐标转换成图形缓冲区坐标</p></li><li><p>SceneTransforms.clipToGLWindowCoordinates(viewport,position,result)将裁剪坐标转成窗口坐标</p></li><li><p>SceneTransforms.drawingBufferToWgs84Coordinates(scene,drawingBufferPosition,depth,result)将缓冲区坐标转成世界坐标</p></li></ol><h3 id="cesium-自定义时钟clock" tabindex="-1"><a class="header-anchor" href="#cesium-自定义时钟clock" aria-hidden="true">#</a> cesium 自定义时钟Clock</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> clock <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Clock</span><span class="token punctuation">(</span><span class="token punctuation">{</span>

  startTime<span class="token operator">:</span> Cesium<span class="token punctuation">.</span>JulianDate<span class="token punctuation">.</span><span class="token function">fromIso8601</span><span class="token punctuation">(</span><span class="token string">&quot;2013-12-25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  currentTime<span class="token operator">:</span> Cesium<span class="token punctuation">.</span>JulianDate<span class="token punctuation">.</span><span class="token function">fromIso8601</span><span class="token punctuation">(</span><span class="token string">&quot;2013-12-25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  stopTime<span class="token operator">:</span> Cesium<span class="token punctuation">.</span>JulianDate<span class="token punctuation">.</span><span class="token function">fromIso8601</span><span class="token punctuation">(</span><span class="token string">&quot;2013-12-26&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>

  clockRange<span class="token operator">:</span> Cesium<span class="token punctuation">.</span>ClockRange<span class="token punctuation">.</span><span class="token constant">LOOP_STOP</span><span class="token punctuation">,</span> <span class="token comment">// loop when we hit the end time</span>

  clockStep<span class="token operator">:</span> Cesium<span class="token punctuation">.</span>ClockStep<span class="token punctuation">.</span><span class="token constant">SYSTEM_CLOCK_MULTIPLIER</span><span class="token punctuation">,</span>

  multiplier<span class="token operator">:</span> <span class="token number">4000</span><span class="token punctuation">,</span> <span class="token comment">// how much time to advance each tick</span>

  shouldAnimate<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// Animation on by default</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> viewer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Viewer</span><span class="token punctuation">(</span><span class="token string">&quot;cesiumContainer&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>

  <span class="token comment">//clockViewModel: new Cesium.ClockViewModel(clock),</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//var clock = new Cesium.Clock();</span>

  <span class="token keyword">var</span> clockViewModel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>ClockViewModel</span><span class="token punctuation">(</span>clock<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> viewModel <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>AnimationViewModel</span><span class="token punctuation">(</span>clockViewModel<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> widget <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Animation</span><span class="token punctuation">(</span><span class="token string">&#39;animationContainer&#39;</span><span class="token punctuation">,</span> viewModel<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">tick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

      clock<span class="token punctuation">.</span><span class="token function">tick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      Cesium<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>tick<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>

  Cesium<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>tick<span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre></div><p>通过clockViewModel来控制时钟的状态</p><p>clockViewModel.shouldAnimate设置是否可以进行时钟动画</p><p>clockViewModel.shouldAnimate 来暂停和播放动画</p><p>clockViewModel.currentTime 来重置当前时间</p><h3 id="线性插值" tabindex="-1"><a class="header-anchor" href="#线性插值" aria-hidden="true">#</a> 线性插值</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> start<span class="token operator">=</span>Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span><span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span>Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span><span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>count<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> count<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token keyword">var</span> cart <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">lerp</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> i <span class="token operator">/</span> count<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartesian3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Cesium<span class="token punctuation">.</span>Cartographic<span class="token punctuation">.</span><span class="token function">fromCartesian</span><span class="token punctuation">(</span>cart<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre></div><h3 id="cesium-设置和移动camera相机" tabindex="-1"><a class="header-anchor" href="#cesium-设置和移动camera相机" aria-hidden="true">#</a> cesium 设置和移动camera相机</h3><ol><li>相机的移动 使用move方法可以朝一个方向移动特定的距离，单位为米。相机移动时位置会发生变化，相机的朝向不变</li></ol><p>移动方法：Camera.prototype.move = function (direction, amount)</p><p>相机向前移动：moveForward(amount) amount步长：米</p><p>相机向后移动:moveBackward(amount) amount步长：米</p><p>相机向上移动：moveUp(amount) amount步长：米</p><p>相机向下移动：moveDown(amount) amount步长：米</p><p>相机向左移动：moveLeft(amount) amount步长：米</p><p>相机向右移动：moveRight(amount) amount步长：米</p><ol start="2"><li>相机在固定位置的旋转</li></ol><p>方法：Camera.prototype.look = function (axis, angle) 实现原理是给定一个旋转轴和角度，用于四元数计算，然后根据四元数求得旋转矩阵，再根据旋转矩阵更新direction，up，right方向</p><p>相机向左看：.lookLeft(amount) amount弧度</p><p>相机向右看：.lookRight(amount) amount弧度</p><p>相机向上看：.lookUp(amount) amount弧度</p><p>相机向下看：.lookDown(amount) amount弧度</p><p>朝前方向逆时针旋转相机：.twistLeft(amount) amount弧度</p><p>朝前方向顺时针旋转相机：.twisRight(amount) amount弧度</p><h3 id="求区域地形的最低点和最高点" tabindex="-1"><a class="header-anchor" href="#求区域地形的最低点和最高点" aria-hidden="true">#</a> 求区域地形的最低点和最高点</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>Cesium<span class="token punctuation">.</span>ApproximateTerrainHeights<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

Cesium<span class="token punctuation">.</span>ApproximateTerrainHeights<span class="token punctuation">.</span><span class="token function">getMinimumMaximumHeights</span><span class="token punctuation">(</span>Cesium<span class="token punctuation">.</span>Rectangle<span class="token punctuation">.</span><span class="token function">fromDegrees</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token number">110.5</span><span class="token punctuation">,</span><span class="token number">30.04</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="修改cesium场景中鼠标的默认操作" tabindex="-1"><a class="header-anchor" href="#修改cesium场景中鼠标的默认操作" aria-hidden="true">#</a> 修改cesium场景中鼠标的默认操作</h3><p>Cesium里面鼠标的操作主要在ScreenSpaceCameraController.js里面</p><p>1.viewer.scene.screenSpaceCameraController.enableInputs 设置为true的话，场景里可以旋转，拖拽等。设置为false将禁用所有鼠标的输入事件</p><p>2.viewer.scene.screenSpaceCameraController.enableTranslate 是否可以拖动地图,只在2d和2.5d场景里生效</p><p>3.viewer.scene.screenSpaceCameraController.enableZoom 是否可以缩放</p><p>4.viewer.scene.screenSpaceCameraController.enableRotate 是否可以旋转地图,只在2d和2.5d场景里生效</p><p>5.viewer.scene.screenSpaceCameraController.enableTilt 是否可以倾斜地图,只在3d和2.5d场景生效</p><p>6.viewer.scene.screenSpaceCameraController.enableLook 是否允许使用自由外观,只改变相机的朝向，不改变相机位置</p><p>7.viewer.scene.screenSpaceCameraController.inertiaSpin 旋转惯性</p><p>8.viewer.scene.screenSpaceCameraController.inertiaTranslate平移惯性</p><p>9.viewer.scene.screenSpaceCameraController.inertiaZoom缩放惯性</p><p>10.viewer.scene.screenSpaceCameraController.bounceAnimationTime 切换2d,2.5d，3d模式之间的时间间隔，默认3s</p><p>11.viewer.scene.screenSpaceCameraController.minimumZoomDistance 相机离地表的最低高度，默认1米，比如设置为-100米的情况下相机将钻入地下</p><p>12.viewer.scene.screenSpaceCameraController.maximumZoomDistance 相机离地表的最大高度，默认为无穷大</p><p>13.viewer.scene.screenSpaceCameraController.translateEventTypes = Cesium.CameraEventType.LEFT_DRAG 移动场景的事件，默认是鼠标按住左键拖拽地图,可自定义移动场景的鼠标事件，2d和2.5d有效</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>screenSpaceCameraController<span class="token punctuation">.</span>zoomEventTypes <span class="token operator">=</span><span class="token punctuation">[</span>

    Cesium<span class="token punctuation">.</span>CameraEventType<span class="token punctuation">.</span><span class="token constant">RIGHT_DRAG</span><span class="token punctuation">,</span>

    Cesium<span class="token punctuation">.</span>CameraEventType<span class="token punctuation">.</span><span class="token constant">WHEEL</span><span class="token punctuation">,</span>

    Cesium<span class="token punctuation">.</span>CameraEventType<span class="token punctuation">.</span><span class="token constant">PINCH</span><span class="token punctuation">,</span>

  <span class="token punctuation">]</span>
</code></pre></div><p>鼠标缩放事件，传入的是一个数组,默认鼠标右键拖拽，鼠标滚轮滚动，两个手指滚动笔记本触控区都可以触发场景缩放效果</p><p>15.viewer.scene.screenSpaceCameraController.rotateEventTypes =   Cesium.CameraEventType.LEFT_DRAG旋转场景，默认是左键拖拽，只在2.5d和3d场景生效</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 16.</span>
viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>screenSpaceCameraController<span class="token punctuation">.</span>tiltEventTypes <span class="token operator">=</span> <span class="token punctuation">[</span>

     Cesium<span class="token punctuation">.</span>CameraEventType<span class="token punctuation">.</span><span class="token constant">MIDDLE_DRAG</span><span class="token punctuation">,</span>

     Cesium<span class="token punctuation">.</span>CameraEventType<span class="token punctuation">.</span><span class="token constant">PINCH</span><span class="token punctuation">,</span>

    <span class="token punctuation">{</span>

      eventType<span class="token operator">:</span>  Cesium<span class="token punctuation">.</span>CameraEventType<span class="token punctuation">.</span><span class="token constant">LEFT_DRAG</span><span class="token punctuation">,</span>

      modifier<span class="token operator">:</span>  Cesium<span class="token punctuation">.</span>KeyboardEventModifier<span class="token punctuation">.</span><span class="token constant">CTRL</span><span class="token punctuation">,</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token punctuation">{</span>

      eventType<span class="token operator">:</span>  Cesium<span class="token punctuation">.</span>CameraEventType<span class="token punctuation">.</span><span class="token constant">RIGHT_DRAG</span><span class="token punctuation">,</span>

      modifier<span class="token operator">:</span>  Cesium<span class="token punctuation">.</span>KeyboardEventModifier<span class="token punctuation">.</span><span class="token constant">CTRL</span><span class="token punctuation">,</span>

    <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token punctuation">]</span>
</code></pre></div><p>场景倾斜事件，默认是鼠标滚轮下按拖拽，按CTRL+左键拖拽，按CTRL+右键拖拽都可以使场景倾斜，建议将场景倾斜改成右键拖拽使用起来更方便一点，比如</p><p>viewer.scene.screenSpaceCameraController.tiltEventTypes = Cesium.CameraEventType.RIGHT_DRAG</p><ol start="15"><li></li></ol><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>viewer<span class="token punctuation">.</span>scene<span class="token punctuation">.</span>screenSpaceCameraController<span class="token punctuation">.</span>lookEventTypes<span class="token operator">=</span><span class="token punctuation">{</span>

    eventType<span class="token operator">:</span> CameraEventType<span class="token punctuation">.</span><span class="token constant">LEFT_DRAG</span><span class="token punctuation">,</span>

    modifier<span class="token operator">:</span> KeyboardEventModifier<span class="token punctuation">.</span><span class="token constant">SHIFT</span><span class="token punctuation">,</span>

  <span class="token punctuation">}</span>
</code></pre></div><p>相机位置不变，改变相机方向进行自由观看，默认是按住SHIFTT键+左键拖拽</p><p>16.viewer.scene.screenSpaceCameraController.enableCollisionDetection 是否开启碰撞检测，默认是开启</p><h3 id="cesium-求地表两点的距离-基础篇" tabindex="-1"><a class="header-anchor" href="#cesium-求地表两点的距离-基础篇" aria-hidden="true">#</a> cesium 求地表两点的距离（基础篇)</h3><ul><li>cesium求地球上<strong>两点的直线距离和求地表距离</strong>是不一样的,直接用3维向量计算的距离表示的是直线距离、</li></ul><ul><li>计算地表距离需要借助EllipsoidGeodesic类</li></ul><p>1.求两点的直线距离</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> startPosition<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span>fromDegrees</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> endPosition<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span>fromDegrees</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">30.1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> distance<span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Cartesian3<span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span>startPosition<span class="token punctuation">,</span>endPosition<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//求两点直线距离，单位为米</span>
</code></pre></div><p>2.求两点的地表距离</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> startPosition<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartographic</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> endPosition<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartographic</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">30.1</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> geodesic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>EllipsoidGeodesic</span><span class="token punctuation">(</span>startPosition<span class="token punctuation">,</span>endPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> distance <span class="token operator">=</span> geodesic<span class="token punctuation">.</span>surfaceDistance<span class="token punctuation">;</span><span class="token comment">//求地表距离,单位为米</span>
</code></pre></div><p>3.按地表距离的比例求地表连线上的另外一点坐标</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> startPosition<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartographic</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> endPosition<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartographic</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">30.1</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> geodesic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>EllipsoidGeodesic</span><span class="token punctuation">(</span>startPosition<span class="token punctuation">,</span>endPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> otherPosition<span class="token operator">=</span>geodesic<span class="token punctuation">.</span><span class="token function">interpolateUsingFraction</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartographic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//求地表连线上2倍距离的点</span>
</code></pre></div><p>4.求地表连线上，距离起点特定距离的地表点的坐标</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> startPosition<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartographic</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> endPosition<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartographic</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">30.1</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">180</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> geodesic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>EllipsoidGeodesic</span><span class="token punctuation">(</span>startPosition<span class="token punctuation">,</span>endPosition<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> otherPosition<span class="token operator">=</span>geodesic<span class="token punctuation">.</span><span class="token function">interpolateUsingSurfaceDistance</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Cartographic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//求地表连线上距离起点200米的地表点的坐标</span>

</code></pre></div><p><img src="`+p+`" alt="alt"></p><h3 id="cesium-常见坐标系及坐标转换" tabindex="-1"><a class="header-anchor" href="#cesium-常见坐标系及坐标转换" aria-hidden="true">#</a> cesium 常见坐标系及坐标转换</h3><p>ceisum里面的常见坐标系包括</p><ol><li><p><strong>屏幕坐标</strong></p></li><li><p><strong>世界坐标（笛卡尔直角坐标）</strong></p></li><li><p><strong>经纬度，可以是弧度形式和度的形式</strong></p></li><li><p><strong>WebMercatorweb墨卡托</strong></p></li><li><p><strong>欧拉角</strong></p></li><li><p><strong>四元数</strong></p></li></ol><h3 id="修改卫星姿态-headingpitchroll" tabindex="-1"><a class="header-anchor" href="#修改卫星姿态-headingpitchroll" aria-hidden="true">#</a> 修改卫星姿态 HeadingPitchRoll</h3><p>插入时间和姿态，到了时间会做这个动作</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">setSensorQuaternion</span><span class="token punctuation">(</span><span class="token parameter">time<span class="token punctuation">,</span> id<span class="token punctuation">,</span> heading<span class="token punctuation">,</span> pitch<span class="token punctuation">,</span> roll</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取卫星</span>
        <span class="token keyword">let</span> sate <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>viewer<span class="token punctuation">.</span>dataSources<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>entities<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
 
        <span class="token keyword">let</span> hpr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>HeadingPitchRoll</span><span class="token punctuation">(</span>
            Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token punctuation">,</span>
            Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span>pitch<span class="token punctuation">)</span><span class="token punctuation">,</span>
            Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span>roll<span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> center <span class="token operator">=</span> sate<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>viewer<span class="token punctuation">.</span>clock<span class="token punctuation">.</span>currentTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> Quaternion <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Transforms<span class="token punctuation">.</span><span class="token function">headingPitchRollQuaternion</span><span class="token punctuation">(</span>center<span class="token punctuation">,</span> hpr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Quaternion<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sate<span class="token punctuation">.</span>orientation<span class="token punctuation">.</span><span class="token function">addSample</span><span class="token punctuation">(</span>
            time<span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>Quaternion</span><span class="token punctuation">(</span>
                Quaternion<span class="token punctuation">.</span>w<span class="token punctuation">,</span>
                Quaternion<span class="token punctuation">.</span>x<span class="token punctuation">,</span>
                Quaternion<span class="token punctuation">.</span>y<span class="token punctuation">,</span>
                Quaternion<span class="token punctuation">.</span>z
            <span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>



    <span class="token doc-comment comment">/**
     * 修改卫星姿态，改变载荷的姿态
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">id</span> 卫星id
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">heading</span>  俯仰角
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">pitch</span>  偏航角
     * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">roll</span>  滚转角
     */</span>
    <span class="token function">setSensorQuaternion</span><span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> heading<span class="token punctuation">,</span> pitch<span class="token punctuation">,</span> roll</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取卫星</span>
        <span class="token keyword">let</span> sate <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>viewer<span class="token punctuation">.</span>dataSources<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>entities<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 记录卫星当前</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>sateSampledId<span class="token punctuation">.</span>id <span class="token operator">=</span> sate<span class="token punctuation">.</span>orientation<span class="token punctuation">;</span>
        <span class="token keyword">let</span> hpr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cesium<span class="token punctuation">.</span>HeadingPitchRoll</span><span class="token punctuation">(</span>
            Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span>heading<span class="token punctuation">)</span><span class="token punctuation">,</span>
            Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span>pitch<span class="token punctuation">)</span><span class="token punctuation">,</span>
            Cesium<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">toRadians</span><span class="token punctuation">(</span>roll<span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> center <span class="token operator">=</span> sate<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>viewer<span class="token punctuation">.</span>clock<span class="token punctuation">.</span>currentTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> Quaternion <span class="token operator">=</span> Cesium<span class="token punctuation">.</span>Transforms<span class="token punctuation">.</span><span class="token function">headingPitchRollQuaternion</span><span class="token punctuation">(</span>center<span class="token punctuation">,</span> hpr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sate<span class="token punctuation">.</span>orientation <span class="token operator">=</span> Quaternion<span class="token punctuation">;</span>
        <span class="token comment">// console.log(Cesium.Quaternion.fromHeadingPitchRoll(hpr)</span>
    <span class="token punctuation">}</span>
 
    <span class="token comment">// 卫星姿态还原</span>
    <span class="token function">resetrQuaternion</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取卫星</span>
        <span class="token keyword">let</span> sate <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>viewer<span class="token punctuation">.</span>dataSources<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>entities<span class="token punctuation">.</span><span class="token function">getById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        sate<span class="token punctuation">.</span>orientation <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sateSampledId<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre></div><h3 id="cesium-entity-属性-orientation" tabindex="-1"><a class="header-anchor" href="#cesium-entity-属性-orientation" aria-hidden="true">#</a> Cesium entity 属性 orientation</h3><ul><li>entity的一个重要属性-orientation，直译过来是方向，更喜欢称之为姿态。</li><li>也就是说实体放到场景中的的形态。在一些应用场景中，需要调整实体对象的方向，尤其是模型对象，需要设置初始方向。 姿态 在这之前需要了解下三维球上控制对象姿态的参数，<code>heading、pitch、roll</code>。</li></ul><p>headingpitchroll pitch是围绕X轴旋转，也叫做俯仰角。 heading是围绕Y轴旋转，也叫偏航角。 roll是围绕Z轴旋转，也叫翻滚角。</p><blockquote><p>orientation属性设置的值类型为Quaternion四元数，由x、y、z、w分量构成， 其中w分量为时间分量。 通过空间x、y、z上不用的分量值，控制实体对象在空间中的姿态。</p></blockquote><blockquote><p>Quaternion的获取通过headin、pitch、roll来转化， <code>Cesium.Quaternion.fromHeadingPitchRoll(Cesium.HeadingPitchRoll.fromDegrees(heading,pitch,roll))</code>。</p></blockquote>`,79),c=[e];function l(i,u){return s(),a("div",null,c)}const r=n(o,[["render",l],["__file","cesium_util.html.vue"]]);export{r as default};
