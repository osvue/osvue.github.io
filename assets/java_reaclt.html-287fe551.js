import{_ as n,p as s,q as a,a1 as t}from"./framework-d81ad7e5.js";const p={},o=t(`<h2 id="反射的概念和特点" tabindex="-1"><a class="header-anchor" href="#反射的概念和特点" aria-hidden="true">#</a> 反射的概念和特点:</h2><ul><li>java的类:具备相同特征的对象的模版. <ul><li>类Person: 不同事物也具备相同的特征(父类) 同一事物具备相同的特征(子类) 结论: 按照事务的特征来进行抽取成具体的java类,由java类来进行具体对象的创建. java中的类的特征: 属性: 修饰符 类型 属性名 值 结论:可以创建类专门用来表示以上特征,该类的一个对象表示一个具体的属性. 方法: 修饰符 返回值类型 方法名 形参 方法体 结论:可以创建类专门用来表示以上特征,该类的一个对象表示一个具体的方法. 构造器: 修饰符 形参 方法体 结论:可以创建类专门用来表示以上特征,该类的一个对象表示一个具体的构造器方法 抽取一个类来表示类的共同特征. 一个该类的具体对象存储了一个类的所有的信息. 类对象 类的对象</li></ul></li></ul><hr><p>反射的概念和作用:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>  反射的概念:
  万事万物皆对象,类也是对象.
      引用:
  通过反射创建类对象和使用类对象.
      反射的作用:创建对象
  问题:
  传统方式创建对象:new 类名();,前提是必须预先知道要使用的类.但是,如果无法确定要执行的对象怎么办?
  如果要修改使用的类,必须修改源码.
      解决:
  使用反射.
      使用:
  获取类对象
      操作属性
  操作方法
      操作构造器
</code></pre></div><h2 id="反射获取类对象的三种方式" tabindex="-1"><a class="header-anchor" href="#反射获取类对象的三种方式" aria-hidden="true">#</a> 反射获取类对象的三种方式:</h2><div class="language-java" data-ext="java"><pre class="language-java"><code> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//根据全限定路径获取 </span>
<span class="token comment">// 对象名.getClass();//根据对象获取</span>
<span class="token comment">//   类名.class//根据类名获取</span>
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
<span class="token comment">//   代码体现:</span>
  <span class="token comment">//第一种方式---&gt;创建类对象</span>
  <span class="token class-name">Class</span> cla01<span class="token operator">=</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.bjsxt.pojo.Person&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//第二种方式----&gt;调用底层使用反射封装的方法</span>
  <span class="token class-name">Class</span> cla02<span class="token operator">=</span><span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
  <span class="token comment">//第三种方式----&gt;调用底层使用反射封装的方法</span>
  <span class="token class-name">Class</span> cla03<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//   常用的方法:</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取类对象的包名----&gt;&quot;</span><span class="token operator">+</span>cla01<span class="token punctuation">.</span><span class="token function">getPackage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取类的修饰符-----&gt;&quot;</span><span class="token operator">+</span>cla01<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取类的名称(全限定)-----&gt;&quot;</span><span class="token operator">+</span>cla01<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取类的名称(类名)-----&gt;&quot;</span><span class="token operator">+</span>cla01<span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取类的父类的类对象-----&gt;&quot;</span><span class="token operator">+</span>cla01<span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//  注意: 通过反射创建的类对象只有一个.</span>

</code></pre></div><h2 id="反射操作元素属性" tabindex="-1"><a class="header-anchor" href="#反射操作元素属性" aria-hidden="true">#</a> 反射操作元素属性:</h2><h2 id="获取类对象获取反射类的属性操作反射类的属性操作静态操作非静态" tabindex="-1"><a class="header-anchor" href="#获取类对象获取反射类的属性操作反射类的属性操作静态操作非静态" aria-hidden="true">#</a> 获取类对象 获取反射类的属性 操作反射类的属性 操作静态 操作非静态</h2><pre><code>*   操作属性:
  *    获取类对象
</code></pre><ul><li><pre><code>获取类属性
</code></pre></li><li><pre><code> getFields()      获取所有的公共字段包括父类    返回Field[]
*     getDeclaredFields()     获取所有声明的字段(不包括父类)  返回Field[]
</code></pre></li><li><pre><code> getField(String name)    获取指定的公共字段包括父类    返回Field
</code></pre></li><li><pre><code> getDeclaredField(String name)  获取指定的声明的字段(不包括父类)   返回Field
</code></pre></li><li><pre><code>操作类属性
</code></pre></li><li><pre><code> 操作静态属性
</code></pre></li><li><pre><code>  类属性对象.get(null)    返回静态属性的值
</code></pre></li><li><pre><code>  类属性对象.set(null,&quot;值&quot;)   赋值
</code></pre></li><li><pre><code> 操作非静态属性
</code></pre></li><li><pre><code>  类属性对象.get(Object obj);
</code></pre></li><li><pre><code>  类属性对象.set(Object obj,&quot;值&quot;);
</code></pre></li></ul><hr><div class="language-java" data-ext="java"><pre class="language-java"><code>  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">operField</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">NoSuchFieldException</span><span class="token punctuation">,</span> <span class="token class-name">SecurityException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">,</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">{</span>
    <span class="token comment">//获取类对象</span>
    <span class="token class-name">Class</span> cla<span class="token operator">=</span><span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.bjsxt.pojo.Student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取反射类属性</span>
    <span class="token comment">//获取类及其父类的公共字段</span>
    <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fds <span class="token operator">=</span> cla<span class="token punctuation">.</span><span class="token function">getFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Field</span> f<span class="token operator">:</span>fds<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取属性名------&gt;&quot;</span><span class="token operator">+</span>f<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取修饰符------&gt;&quot;</span><span class="token operator">+</span>f<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取类型------&gt;&quot;</span><span class="token operator">+</span>f<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回的是类型的Class对象</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;******************************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取类声明的所有字段</span>
    <span class="token class-name">Field</span><span class="token punctuation">[</span><span class="token punctuation">]</span> fds2<span class="token operator">=</span>cla<span class="token punctuation">.</span><span class="token function">getDeclaredFields</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Field</span> f<span class="token operator">:</span>fds2<span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取属性名-----&gt;&quot;</span><span class="token operator">+</span>f<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取修饰符------&gt;&quot;</span><span class="token operator">+</span>f<span class="token punctuation">.</span><span class="token function">getModifiers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取类型------&gt;&quot;</span><span class="token operator">+</span>f<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回的是类型的Class对象</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;******************************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//获取指定的字段</span>
    <span class="token class-name">Field</span> f<span class="token operator">=</span>cla<span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token string">&quot;pname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//指定获取类及其父类的公共字段</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Field</span> f2<span class="token operator">=</span>cla<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;money&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//指定获取类的所有字段</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f2<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Field</span> f3<span class="token operator">=</span>cla<span class="token punctuation">.</span><span class="token function">getSuperclass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;pname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//指定获取父类声明的字段</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f3<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//操作字段值</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;************操作静态字段**********************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//操作静态属性</span>
    <span class="token class-name">Field</span> fs<span class="token operator">=</span>cla<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;money&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fs<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;************操作非静态字段**********************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//操作非静态属性</span>
    <span class="token class-name">Field</span> fd<span class="token operator">=</span>cla<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;sname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Object</span> obj<span class="token operator">=</span>cla<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fd<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&quot;李四&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fd<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//暴力反射操作私有化属性(了解)</span>
    <span class="token class-name">Field</span> fd2<span class="token operator">=</span>cla<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;ssex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fd2<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//暴力反射,操作私有化属性,不安全</span>
    <span class="token class-name">Object</span> obj2<span class="token operator">=</span>cla<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取实例化对象</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fd2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


  <span class="token punctuation">}</span>
</code></pre></div><h2 id="反射操作方法" tabindex="-1"><a class="header-anchor" href="#反射操作方法" aria-hidden="true">#</a> 反射操作方法:</h2><pre><code>获取类对象
获取方法对象
操作方法对象
静态方法
非静态方法
</code></pre><hr><p>操作方法:</p><ul><li>获取类对象</li><li>获取方法对象</li><li>getMethods() 获取所有的公共方法包括父类</li><li>getDeclaredMethods() 获取所有声明的方法不包括父类</li><li>getMethod(String name,Class...cla) 获取指定的公共方法</li><li>String name 表示方法名</li><li>Class...cla 表示方法接收的参数类型的类对象</li><li>getDeclaredMethod(String name,Class...cla) 获取指定的声明方法</li><li>String name 表示方法名</li><li>Class...cla 表示方法接收的参数类型的类对象</li><li>操作方法</li><li>静态方法</li><li>方法对象.invoke(null,参数值1,参数值2,....);</li><li>方法对象.invoke(null,null);</li><li>非静态方法</li><li>Object obj=cla.newInstance();</li><li>方法对象.invoke(obj,参数值1,参数值2,....)</li><li>方法对象.invoke(obj,null)</li></ul><hr><div class="language-java" data-ext="java"><pre class="language-java"><code>


  <span class="token comment">//操作方法</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">operMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">,</span> <span class="token class-name">SecurityException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span> <span class="token class-name">InvocationTargetException</span><span class="token punctuation">,</span> <span class="token class-name">InstantiationException</span> <span class="token punctuation">{</span>
<span class="token comment">//获取类对象</span>
    <span class="token class-name">Class</span> cla <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.bjsxt.pojo.Student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//获取类方法对象</span>
<span class="token comment">//获取所有的公共方法包括父类</span>
    <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ms <span class="token operator">=</span> cla<span class="token punctuation">.</span><span class="token function">getMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Method</span> m <span class="token operator">:</span> ms<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取方法名---&gt;&quot;</span> <span class="token operator">+</span> m<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;************************************&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//获取所有声明的方法不包括父类</span>
    <span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ms2 <span class="token operator">=</span> cla<span class="token punctuation">.</span><span class="token function">getDeclaredMethods</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Method</span> m <span class="token operator">:</span> ms2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;获取方法名---&gt;&quot;</span> <span class="token operator">+</span> m<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token comment">//获取指定的公共方法包括父类</span>
    <span class="token class-name">Method</span> m <span class="token operator">=</span> cla<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;pHi&quot;</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//获取指定的声明的方法,不包括父类</span>
    <span class="token class-name">Method</span> m2 <span class="token operator">=</span> cla<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;sHello&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>m2<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//执行方法</span>
<span class="token comment">//静态方法</span>
    <span class="token class-name">Method</span> m3 <span class="token operator">=</span> cla<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;sHi&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    m3<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;今天学了反射,好开心&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//非静态</span>
    <span class="token class-name">Method</span> m4 <span class="token operator">=</span> cla<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;sHi&quot;</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    m4<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>cla<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&quot;反射功能好强大&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre></div><h2 id="反射操作构造器" tabindex="-1"><a class="header-anchor" href="#反射操作构造器" aria-hidden="true">#</a> 反射操作构造器:</h2><h2 id="获取类对象获取构造器对象创建对象-有参无参" tabindex="-1"><a class="header-anchor" href="#获取类对象获取构造器对象创建对象-有参无参" aria-hidden="true">#</a> 获取类对象 获取构造器对象 创建对象: 有参 无参</h2><p>示例代码:</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token comment">//反射操作构造器</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">operConstructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span><span class="token punctuation">,</span> <span class="token class-name">NoSuchMethodException</span><span class="token punctuation">,</span> <span class="token class-name">SecurityException</span><span class="token punctuation">,</span> <span class="token class-name">InstantiationException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalAccessException</span><span class="token punctuation">,</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">,</span> <span class="token class-name">InvocationTargetException</span><span class="token punctuation">,</span> <span class="token class-name">NoSuchFieldException</span> <span class="token punctuation">{</span>
<span class="token comment">//获取类对象</span>
<span class="token class-name">Class</span> cla <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;com.bjsxt.pojo.Student&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//获取构造器方法对象</span>
<span class="token class-name">Constructor</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cs <span class="token operator">=</span> cla<span class="token punctuation">.</span><span class="token function">getConstructors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Constructor</span> c <span class="token operator">:</span> cs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//获取指定的构造器</span>
<span class="token class-name">Constructor</span> c <span class="token operator">=</span> cla<span class="token punctuation">.</span><span class="token function">getConstructor</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//创建实例化对象</span>
<span class="token class-name">Object</span> obj <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>cla<span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;getSsex&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">Student</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">getSsex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,24),c=[o];function e(l,u){return s(),a("div",null,c)}const i=n(p,[["render",e],["__file","java_reaclt.html.vue"]]);export{i as default};
