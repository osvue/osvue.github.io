import{_ as n,p as a,q as s,a1 as t}from"./framework-d81ad7e5.js";const p={},e=t(`<h3 id="一、代理人" tabindex="-1"><a class="header-anchor" href="#一、代理人" aria-hidden="true">#</a> 一、代理人</h3><p>一个用户任务只允许有一个代理人。为一个任务分配代理人后act_ru_task表的ASSIGNEE_字段会被设置为响应的值。</p><p>审批任务设置assignee变量，表示是该任务的负责人：</p><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>userTask</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sid-9253B2C0-D7CF-49C9-BE00-3B68D87413D4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>审批<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">activiti:</span>assignee</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${assignee}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>userTask</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>启动流程分配代理人：</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token comment">// 启动流程分配代理人</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;assignee&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ProcessInstance</span> processInstance <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">startProcessInstanceByKey</span><span class="token punctuation">(</span><span class="token string">&quot;leave&quot;</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>

查询任务指定代理人：
<span class="token comment">// 可通过代理人查询任务列表</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">taskAssignee</span><span class="token punctuation">(</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="二、候选人" tabindex="-1"><a class="header-anchor" href="#二、候选人" aria-hidden="true">#</a> 二、候选人</h3><p>一个任务可以设置多个候选人,候选人在业务上指的是有权对该任务进行操作的群体。 某个候选人签收后，其他候选人就看不到该任务。</p><ul><li>可以使用<code>activiti:candiateUsers=”用户 1,用户 2,用户 3”</code>的这种方式来实现设置一组候选人</li></ul><p>直接赋值多个候选人示例：</p><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>userTask</span> <span class="token attr-name"><span class="token namespace">activiti:</span>candidateUsers</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zhangsan,lisi,wangwu<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">activiti:</span>exclusive</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_3<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>审批<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>动态设置候选人变量 candidateUsers：</p><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>userTask</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>sid-31845D76-A308-4442-AE19-4AA4238DB39A<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>审批<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">activiti:</span>candidateUsers</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${candidateUsers}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>userTask</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>这里的candidateUsers是一个流程变量,以list的形式存放了候选人列表。</p><p>注意任务和候选人的关系存储在act_ru_identitylink表中</p><p>启动流程分配候选人：</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token comment">// 启动流程分配候选人</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> candidateUsers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
candidateUsers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
candidateUsers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;lisi&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> variableMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
variableMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;candidateUsers&quot;</span><span class="token punctuation">,</span> candidateUsers<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ProcessInstance</span> processInstance <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">startProcessInstanceByKey</span><span class="token punctuation">(</span><span class="token string">&quot;leave&quot;</span><span class="token punctuation">,</span> variableMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="三、候选组" tabindex="-1"><a class="header-anchor" href="#三、候选组" aria-hidden="true">#</a> 三、候选组</h3><p>用来把一个群体的人指定为一个任务的权限人，对应的是activiti中的用户组，分配一个用户组id到某个任务上,可以指定整个组的人为该任务的候选人。 属于该候选组的用户就可以签收然后办理该任务。</p><p>如果候选组中存在多个用户，那么只有其中的某个用户签收了任务，那么其它用户就看不到该任务。 只要任务还未被签收，候选组内的任意用户都可以签收该任务；一旦任务被签收，候选组内的其他用户就无法查看与签收该任务咯。</p><p>可以使用activiti:candidateGroups=”用户组1,用户组2,用户组3”的这种方式来实现设置一组候选人</p><p>动态设置候选组变量candidateGroup：</p><p><code> &lt;userTask id=&quot;juel-candidateGroup&quot; name=&quot;审批&quot; activiti:candidateGroups=&quot;\${candidateGroup}&quot;&gt;&lt;/userTask&gt;</code> 1 这里的candidateGroup也是一个流程变量,其中存放了用户组id的lsit集合。</p><p>注意任务和候选组的关系存储在act_ru_identitylink表中</p><p>启动流程分配候选组：</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token comment">// 启动流程分配候选组</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> groupList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
groupList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;项目经理&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
groupList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;测试&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;candidateGroup&quot;</span><span class="token punctuation">,</span>groupList<span class="token punctuation">)</span><span class="token punctuation">;</span>
runtimeService<span class="token punctuation">.</span><span class="token function">startProcessInstanceByKey</span><span class="token punctuation">(</span><span class="token string">&quot;leave&quot;</span><span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="四、组任务办理流程" tabindex="-1"><a class="header-anchor" href="#四、组任务办理流程" aria-hidden="true">#</a> 四、组任务办理流程</h3><p>办理流程：</p><ul><li>指定候选人，查询该候选人当前的待办任务</li><li>候选人不能立即办理任务，要先拾取</li><li>候选人拾取，将候选人的组任务，变成个人任务，原来候选人就变成了该任务的负责人，其他候选人就看不到该任务</li><li>候选人完成任务</li><li>如果个人不想办理该组任务，可以归还组任务，归还后该用户不再是该任务的负责人</li><li>查询该候选人个人任务</li></ul><div class="language-java" data-ext="java"><pre class="language-java"><code>taskService<span class="token punctuation">.</span><span class="token function">setAssignee</span><span class="token punctuation">(</span>taskId<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置为null，归还组任务</span>
也可以将任务委托给其他人（委托的用户可以不是候选人）
查询该候选人个人任务
taskService<span class="token punctuation">.</span><span class="token function">setAssignee</span><span class="token punctuation">(</span>taskId<span class="token punctuation">,</span> “其他人”<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="五、uel表达式" tabindex="-1"><a class="header-anchor" href="#五、uel表达式" aria-hidden="true">#</a> 五、UEL表达式</h3><p>表达式支持解析基础类型、 bean、 list、 array 和 map，也可作为条件判断。 如下：</p><div class="language-java" data-ext="java"><pre class="language-java"><code> $<span class="token punctuation">{</span>order<span class="token punctuation">.</span>price <span class="token operator">&gt;</span> <span class="token number">100</span> <span class="token operator">&amp;&amp;</span> order<span class="token punctuation">.</span>price <span class="token operator">&lt;</span> <span class="token number">250</span><span class="token punctuation">}</span>
</code></pre></div><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>
<span class="token constant">UEL</span><span class="token operator">-</span>value
$<span class="token punctuation">{</span>applyUserId<span class="token punctuation">}</span>：applyUserId这个变量是 activiti 的一个流程变量
Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">&gt;</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;applyUserId&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

$<span class="token punctuation">{</span>user<span class="token punctuation">.</span>applyUserId<span class="token punctuation">}</span>：表示通过调用 user 的 getter 方法获取 applyUserId 值
User user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token operator">&gt;</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token constant">UEL</span><span class="token operator">-</span>method
$<span class="token punctuation">{</span>User<span class="token punctuation">.</span><span class="token function">getApplyUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>：userBean 是 spring 容器中的一个 bean，调用该 bean 的 <span class="token function">getApplyUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span>方法
<span class="token constant">UEL</span> method结合value
$<span class="token punctuation">{</span>IUserService<span class="token punctuation">.</span><span class="token function">findManagerForEmployee</span><span class="token punctuation">(</span>emp<span class="token punctuation">)</span><span class="token punctuation">}</span>：IUserService是 spring 容器的一个 bean，findManagerForEmployee 是该 bean 的一个方法，emp 是 activiti流程变量， emp 作为参数传到 IUserService<span class="token punctuation">.</span>findManagerForEmployee 方法中 

</code></pre></div><h3 id="activiti7的servcie核心接口" tabindex="-1"><a class="header-anchor" href="#activiti7的servcie核心接口" aria-hidden="true">#</a> <strong>Activiti7的Servcie核心接口</strong></h3><table><thead><tr><th>Service接口</th><th>说明</th></tr></thead><tbody><tr><td>RuntimeService</td><td>运行时 Service，可以处理所有正在运行状态的流程实例和任务等</td></tr><tr><td>RepositoryService</td><td>流程仓库 Service，主要用于管理流程仓库，比如流程定义的控制管理（部 署、删除、挂起、激活…）</td></tr><tr><td>DynamicBpmnService</td><td>RepositoryService可以用来部署流程定义（使用xml形式定义好的），一旦 部署到Activiti（解析后保存到DB），那么流程定义就不会再变了，除了修改xml定义文件内容；而DynamicBpmnService就允许我们在程序运行过程中去修改流程定义，例如：修改流程定义中的分配角色、优先级、流程流转的条件。</td></tr><tr><td>TaskService</td><td>任务 Service，用于管理和查询任务，例如：签收、办理等</td></tr><tr><td>HistoryService</td><td>历史Service，可以查询所有历史数据，例如：流程实例信息、参与者信息、完成时间…</td></tr><tr><td>ManagementService</td><td>引擎管理Service，和具体业务无关，主要用于对Activiti流程引擎的管理和维护。</td></tr></tbody></table><h3 id="核心-service-接口实例获取方式" tabindex="-1"><a class="header-anchor" href="#核心-service-接口实例获取方式" aria-hidden="true">#</a> 核心 Service 接口实例获取方式</h3><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token comment">// 会在首次调用时初始化并构建一个流程引擎，此后始终返回相同的流程引擎。</span>
<span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// 引擎管理类</span>
<span class="token class-name">ManagementService</span> managementService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getManagementService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 动态修改流程管理类</span>
<span class="token class-name">DynamicBpmnService</span> dynamicBpmnService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getDynamicBpmnService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// 流程运行管理类 </span>
<span class="token class-name">RuntimeService</span> runtimeService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRuntimeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// 流程仓库管理类 </span>
<span class="token class-name">RepositoryService</span> repositoryService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// 任务管理类</span>
<span class="token class-name">TaskService</span> taskService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// 历史管理类</span>
<span class="token class-name">HistoryService</span> historyService <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getHistoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">// activiti 7 没有IdentityService和FormService接口 </span>
<span class="token comment">//IdentityService identityService = processEngine.getIdentityService(); </span>
<span class="token comment">// FormService formService = processEngine.getFormService();</span>

</code></pre></div><h3 id="activiti7-25张数据表分析" tabindex="-1"><a class="header-anchor" href="#activiti7-25张数据表分析" aria-hidden="true">#</a> Activiti7 25张数据表分析</h3><table><thead><tr><th>表分类</th><th>表名</th><th>说明</th></tr></thead><tbody><tr><td>通用数据</td><td></td><td></td></tr><tr><td></td><td>act_ge_bytearray</td><td>二进制数据表（流程图）</td></tr><tr><td></td><td>act_ge_property</td><td>属性数据表，存储整个流程引擎级别的数据,初始化表结构时，会插入版本号信息等</td></tr><tr><td>历史信息</td><td></td><td></td></tr><tr><td></td><td>act_hi_actinst</td><td>历史节点表</td></tr><tr><td></td><td>act_hi_attachment</td><td>历史附件表</td></tr><tr><td></td><td>act_hi_comment</td><td>历史意见表</td></tr><tr><td></td><td>act_hi_detail</td><td>历史详情表，提供历史变量的查询</td></tr><tr><td></td><td>act_hi_identitylink</td><td>历史流程人员表，主要存储任务节点与参与者的相关信息</td></tr><tr><td></td><td>act_hi_procinst</td><td>历史流程实例表</td></tr><tr><td></td><td>act_hi_taskinst</td><td>历史任务实例表</td></tr><tr><td></td><td>act_hi_varinst</td><td>历史变量表</td></tr><tr><td>流程定义 部署表</td><td></td><td></td></tr><tr><td></td><td>act_re_deployment</td><td>部署信息表</td></tr><tr><td></td><td>act_re_model</td><td>流程设计模型表</td></tr><tr><td></td><td>act_re_procdef</td><td>流程定义数据表</td></tr><tr><td>流程运行数据表</td><td></td><td></td></tr><tr><td></td><td>act_ru_deadletter_job</td><td>作业死亡信息表，如果作业失败超过重试次数，则写入到此表</td></tr><tr><td></td><td>act_ru_event_subscr</td><td>throwEvent、catchEvent时间监听信息表</td></tr><tr><td></td><td>act_ru_execution</td><td>运行时流程执行实例表</td></tr><tr><td></td><td>act_ru_identitylink</td><td>运行时流程人员表，主要存储任务节点与参与者的相关信息</td></tr><tr><td></td><td>act_ru_integration</td><td>运行时积分表</td></tr><tr><td></td><td>act_ru_job</td><td>定时异步任务数据表</td></tr><tr><td></td><td>act_ru_suspended_job</td><td>运行时作业暂停表， 比如流程中有一个定时任务，如果把这个任务停止工作了，这个任务写入到此表中</td></tr><tr><td></td><td>act_ru_task</td><td>运行时任务节点表</td></tr><tr><td></td><td>act_ru_timer_job</td><td>运行时定时器作业表</td></tr><tr><td></td><td>act_ru_variable</td><td>运行时流程变量数据表</td></tr></tbody></table><hr><h3 id="_1-candidategroups-的概念" tabindex="-1"><a class="header-anchor" href="#_1-candidategroups-的概念" aria-hidden="true">#</a> 1. <strong><code>candidateGroups</code> 的概念</strong></h3><p><code>candidateGroups</code> 是指任务可以分配给一组用户（即一个用户组）。在流程定义中，你可以通过 <code>candidateGroups</code> 指定任务的候选组。例如：</p><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>userTask</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>task1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Review Task<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">activiti:</span>candidateGroups</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>managers<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>在这个例子中，<code>managers</code> 是一个用户组的 ID，所有属于该组的用户都可以认领这个任务。</p><hr><h3 id="_2-activiti-7-中的变化" tabindex="-1"><a class="header-anchor" href="#_2-activiti-7-中的变化" aria-hidden="true">#</a> 2. <strong>Activiti 7 中的变化</strong></h3><p>在 Activiti 7 中，<code>candidateGroups</code> 仍然可以在流程定义中使用，但 Activiti 7 不再提供内置的用户和组管理功能（即 <code>IdentityService</code> 被移除）。因此：</p><ul><li><strong>用户和组的管理</strong>：需要由外部系统（如数据库、LDAP 等）来管理。</li><li><strong>任务分配</strong>：Activiti 7 仍然支持通过 <code>candidateGroups</code> 分配任务，但需要开发者自己实现用户和组的查询逻辑。</li></ul><hr><h3 id="_3-如何使用-candidategroups" tabindex="-1"><a class="header-anchor" href="#_3-如何使用-candidategroups" aria-hidden="true">#</a> 3. <strong>如何使用 <code>candidateGroups</code></strong></h3><h4 id="_3-1-在流程定义中使用-candidategroups" tabindex="-1"><a class="header-anchor" href="#_3-1-在流程定义中使用-candidategroups" aria-hidden="true">#</a> 3.1 在流程定义中使用 <code>candidateGroups</code></h4><p>在流程定义文件中，你可以直接使用 <code>candidateGroups</code> 来指定任务的候选组：</p><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>userTask</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>task1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Review Task<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">activiti:</span>candidateGroups</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>managers<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre></div><h4 id="_3-2-查询候选组任务" tabindex="-1"><a class="header-anchor" href="#_3-2-查询候选组任务" aria-hidden="true">#</a> 3.2 查询候选组任务</h4><p>在代码中，你可以通过 <code>TaskService</code> 查询属于某个组的任务：</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>activiti<span class="token punctuation">.</span>engine<span class="token punctuation">.</span></span><span class="token class-name">TaskService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>activiti<span class="token punctuation">.</span>engine<span class="token punctuation">.</span>task<span class="token punctuation">.</span></span><span class="token class-name">Task</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TaskService</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">TaskService</span> taskService<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 查询属于某个组的任务
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> <span class="token function">getTasksForGroup</span><span class="token punctuation">(</span><span class="token class-name">String</span> groupId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">taskCandidateGroup</span><span class="token punctuation">(</span>groupId<span class="token punctuation">)</span> <span class="token comment">// 查询候选组任务</span>
                <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="_3-3-认领任务" tabindex="-1"><a class="header-anchor" href="#_3-3-认领任务" aria-hidden="true">#</a> 3.3 认领任务</h4><p>如果任务是通过 <code>candidateGroups</code> 分配的，用户需要先认领任务才能处理：</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 认领任务
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">claimTask</span><span class="token punctuation">(</span><span class="token class-name">String</span> taskId<span class="token punctuation">,</span> <span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    taskService<span class="token punctuation">.</span><span class="token function">claim</span><span class="token punctuation">(</span>taskId<span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><hr><h3 id="_4-用户和组的外部管理" tabindex="-1"><a class="header-anchor" href="#_4-用户和组的外部管理" aria-hidden="true">#</a> 4. <strong>用户和组的外部管理</strong></h3><p>由于 Activiti 7 不再提供内置的用户和组管理功能，你需要自己实现用户和组的管理。例如：</p><h4 id="_4-1-数据库表设计" tabindex="-1"><a class="header-anchor" href="#_4-1-数据库表设计" aria-hidden="true">#</a> 4.1 数据库表设计</h4><p>你可以设计以下表来管理用户和组：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> users <span class="token punctuation">(</span>
    id <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
    username <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    first_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    last_name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> groups <span class="token punctuation">(</span>
    id <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> user_group <span class="token punctuation">(</span>
    user_id <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    group_id <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>user_id<span class="token punctuation">,</span> group_id<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="_4-2-查询用户组" tabindex="-1"><a class="header-anchor" href="#_4-2-查询用户组" aria-hidden="true">#</a> 4.2 查询用户组</h4><p>在查询任务时，你需要从外部系统（如数据库）获取用户所属的组：</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 获取用户所属的组
 */</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getGroupsForUser</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 实现查询逻辑</span>
    <span class="token keyword">return</span> userGroupRepository<span class="token punctuation">.</span><span class="token function">findGroupIdsByUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="_4-3-查询用户的任务" tabindex="-1"><a class="header-anchor" href="#_4-3-查询用户的任务" aria-hidden="true">#</a> 4.3 查询用户的任务</h4><p>结合用户所属的组，查询用户的任务：</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 查询用户的任务（包括候选组任务）
 */</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> <span class="token function">getTasksForUser</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取用户所属的组</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> groupIds <span class="token operator">=</span> <span class="token function">getGroupsForUser</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 查询用户的任务</span>
    <span class="token keyword">return</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">taskCandidateOrAssigned</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span> <span class="token comment">// 用户直接分配的任务</span>
            <span class="token punctuation">.</span><span class="token function">taskCandidateGroupIn</span><span class="token punctuation">(</span>groupIds<span class="token punctuation">)</span>  <span class="token comment">// 用户所属组的任务</span>
            <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><hr><h3 id="_5-总结" tabindex="-1"><a class="header-anchor" href="#_5-总结" aria-hidden="true">#</a> 5. <strong>总结</strong></h3><p>在 Activiti 7 中，<code>candidateGroups</code> 的概念仍然存在，但用户和组的管理需要由外部系统实现。你可以：</p><ol><li>在流程定义中使用 <code>candidateGroups</code> 分配任务。</li><li>通过 <code>TaskService</code> 查询候选组任务。</li><li>自己实现用户和组的管理逻辑（如数据库、LDAP 等）。</li></ol>`,76),c=[e];function o(u,l){return a(),s("div",null,c)}const k=n(p,[["render",o],["__file","activiti7_a.html.vue"]]);export{k as default};
