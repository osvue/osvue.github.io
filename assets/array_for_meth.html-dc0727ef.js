import{_ as n,p as s,q as a,a1 as t}from"./framework-d81ad7e5.js";const o={},p=t(`<h3 id="js数组添加元素的三种方法" tabindex="-1"><a class="header-anchor" href="#js数组添加元素的三种方法" aria-hidden="true">#</a> JS数组添加元素的三种方法</h3><ol><li><p><code>push()</code> 方法可向数组的末尾添加一个或多个元素，并返回新的长度。</p></li><li><p><code>unshift()</code> 方法可向数组的开头添加一个或更多元素，并返回新的长度。</p></li><li><p><code>splice()</code> 方法向/从数组中添加/删除项目，然后返回被删除的项目。</p></li><li><p><strong>push()</strong> 方法可向数组的末尾添加一个或多个元素，并返回新的长度。</p><ol><li>语法：<code>arrayObject.push(newelement1,newelement2,....,newelementX)</code></li><li>返回值：　把指定的值添加到数组后的新长度。</li><li>说明：　push() 方法可把它的参数顺序添加到 arrayObject 的尾部。它直接修改 arrayObject，而不是创建一个新的数组。</li></ol></li><li><p><strong>unshift()</strong> 方法可向数组的开头添加一个或更多元素，并返回新的长度。</p><ol><li>语法：<code>arrayObject.unshift(newelement1,newelement2,....,newelementX)</code><ul><li>newelement1 必需。向数组添加的第一个元素。</li><li>newelement2 可选。向数组添加的第二个元素。</li><li>newelementX 可选。可添加若干个元素。</li></ul></li><li>返回值： arrayObject 的新长度。</li><li>unshift() 方法将把它的参数插入 arrayObject 的头部，并将已经存在的元素顺次地移到较高的下标处，以便留出空间。该方法的第一个参数将成为数组的新元素 0，如果还有第二个参数，它将成为新的元素 1，以此类推。</li></ol></li></ol><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code> <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
 arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;ZhangQian&quot;</span>
 arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;LinFang&quot;</span>
 arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;HaiKun&quot;</span>
 
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// [&quot;ZhangQian&quot;,&quot;LinFang&quot;,&quot;HaiKun&quot;]</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 4</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// [&quot;C&quot;,&quot;ZhangQian&quot;,&quot;LinFang&quot;,&quot;HaiKun&quot;]</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 6</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// [&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;ZhangQian&quot;,&quot;LinFang&quot;,&quot;HaiKun&quot;]</span>
</code></pre></div><ol start="3"><li><strong>splice()</strong> 方法向/从数组中添加/删除项目，然后返回被删除的项目。</li><li>语法：<code>arrayObject.splice(index,howmany,item1,.....,itemX)</code><ul><li><code>index</code> 必需。整数，规定添加/删除项目的位置，使用负数可从数组结尾处规定位置。</li><li><code>howmany</code> 必需。要删除的项目数量。如果设置为 0，则不会删除项目。</li><li><code>item1, ..., itemX</code> 可选。向数组添加的新项目。</li></ul></li><li>返回值 包含被删除项目的新数组，如果有的话。</li><li>说明：splice() 方法可删除从 index 处开始的零个或多个元素，并且用参数列表中声明的一个或多个值来替换那些被删除的元素。如果从 arrayObject 中删除了元素，则返回的是含有被删除的元素的数组。</li></ol><ul><li><code>splice() 方法会直接对数组进行修改。</code></li></ul><ol start="4"><li>实例：</li></ol><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code> <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;ZhangQian&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;LinFang&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;HaiKun&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// []</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// [&quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;ZhangQian&quot;,&quot;LinFang&quot;,&quot;HaiKun&quot;]</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// [&quot;B&quot;,&quot;C&quot;]</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// [&quot;A&quot;,&quot;ZhangQian&quot;,&quot;LinFang&quot;,&quot;HaiKun&quot;]</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// [&quot;ZhangQian&quot;]</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// [&quot;A&quot;,&quot;D&quot;,&quot;LinFang&quot;,&quot;HaiKun&quot;]</span>
</code></pre></div>`,7),c=[p];function u(e,l){return s(),a("div",null,c)}const k=n(o,[["render",u],["__file","array_for_meth.html.vue"]]);export{k as default};
