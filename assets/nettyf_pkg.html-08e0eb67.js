import{_ as e,p as t,q as n,R as l,t as _}from"./framework-d81ad7e5.js";const o={},s=l("ul",null,[l("li",null,[_("假设客户端分别发送了两个数据包D1和D2给服务端，由于服务端一次读取到字节数是不确定的，故可能存在以下四种情况： "),l("ol",null,[l("li",null,"服务端分两次读取到了两个独立的数据包，分别是D1和D2，没有粘包和拆包"),l("li",null,"服务端一次接受到了两个数据包，D1和D2粘合在一起，称之为TCP粘包"),l("li",null,"服务端分两次读取到了数据包，第一次读取到了完整的D1包和D2包的部分内容，第二次读取到了D2包的剩余内容，这称之为TCP拆包"),l("li",null,"服务端分两次读取到了数据包，第一次读取到了D1包的部分内容D1_1，第二次读取到了D1包的剩余部分内容D1_2和完整的D2包。")])])],-1),c=l("p",null,"使用自定义协议 + 编解码器 来解决 关键就是要解决 服务器端每次读取数据长度的问题, 这个问题解决，就不会出现服务器多读或少读数据的问题，从而避免的TCP 粘包、拆包 。",-1),u=[s,c];function D(a,i){return t(),n("div",null,u)}const d=e(o,[["render",D],["__file","nettyf_pkg.html.vue"]]);export{d as default};
