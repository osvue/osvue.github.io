import{_ as s,p as n,q as a,a1 as p}from"./framework-d81ad7e5.js";const e={},o=p(`<h2 id="mysql-查找数据库最大的表" tabindex="-1"><a class="header-anchor" href="#mysql-查找数据库最大的表" aria-hidden="true">#</a> mysql 查找数据库最大的表</h2><ol><li>查询数据库信息</li><li>切换到information_schema库 <ol><li><code>use information_schema;</code></li></ol></li><li>查看库中所有数据表及数据表描述 <ol><li><code>show tables;</code></li><li><code>desc tables;</code></li></ol></li><li>查询数据库yourDataBaseName中数据表（根据行数倒序）</li></ol><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> table_name<span class="token punctuation">,</span>table_rows<span class="token punctuation">,</span><span class="token keyword">tables</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">tables</span> <span class="token keyword">WHERE</span> TABLE_SCHEMA <span class="token operator">=</span> <span class="token string">&#39;yourDataBaseName&#39;</span> <span class="token keyword">order</span> <span class="token keyword">by</span> table_rows <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">100</span><span class="token punctuation">;</span>

</code></pre></div><h2 id="搜索关键字" tabindex="-1"><a class="header-anchor" href="#搜索关键字" aria-hidden="true">#</a> 搜索关键字</h2><ul><li>创建函数</li></ul><blockquote><p><code>getDataByDbName()</code> 获取每个表的每一个字段是否包含关键词</p></blockquote><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DEFINER</span><span class="token operator">=</span><span class="token identifier"><span class="token punctuation">\`</span>root<span class="token punctuation">\`</span></span><span class="token variable">@\`%\`</span> <span class="token keyword">PROCEDURE</span> <span class="token identifier"><span class="token punctuation">\`</span>getDataByDbName<span class="token punctuation">\`</span></span><span class="token punctuation">(</span><span class="token operator">in</span> dbName <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">IN</span> ziduan <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">BEGIN</span>
<span class="token keyword">DECLARE</span> num <span class="token keyword">INT</span><span class="token punctuation">;</span>
<span class="token keyword">SET</span> <span class="token variable">@STMT</span> <span class="token operator">=</span>CONCAT<span class="token punctuation">(</span><span class="token string">&quot;SELECT COUNT(*) FROM &quot;</span><span class="token punctuation">,</span>dbName<span class="token punctuation">,</span><span class="token string">&quot; WHERE \`&quot;</span><span class="token punctuation">,</span>ziduan<span class="token punctuation">,</span><span class="token string">&quot;\` LIKE BINARY &#39;%关键词%&#39; INTO @num;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">PREPARE</span> STMT <span class="token keyword">FROM</span> <span class="token variable">@STMT</span><span class="token punctuation">;</span>
<span class="token keyword">EXECUTE</span> STMT<span class="token punctuation">;</span>
<span class="token keyword">IF</span><span class="token punctuation">(</span><span class="token variable">@num</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">THEN</span>
    <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token keyword">temp</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>dbName<span class="token punctuation">,</span>ziduan<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span>
<span class="token keyword">end</span>
</code></pre></div><blockquote><p><code>exeProcesstor</code> 执行此函数，将在数据库的 <code>temp</code> 表中显示字段和表名称</p></blockquote><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DEFINER</span><span class="token operator">=</span><span class="token identifier"><span class="token punctuation">\`</span>root<span class="token punctuation">\`</span></span><span class="token variable">@\`%\`</span> <span class="token keyword">PROCEDURE</span> <span class="token identifier"><span class="token punctuation">\`</span>exeProcesstor<span class="token punctuation">\`</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">BEGIN</span>
<span class="token keyword">DECLARE</span> done <span class="token keyword">BOOLEAN</span> <span class="token keyword">DEFAULT</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">DECLARE</span> biao <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">DECLARE</span> ziduan <span class="token keyword">VARCHAR</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">DECLARE</span> indexss <span class="token keyword">CURSOR</span>
<span class="token keyword">FOR</span>
<span class="token keyword">SELECT</span> TABLE_NAME<span class="token punctuation">,</span>COLUMN_NAME <span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span><span class="token keyword">COLUMNS</span> <span class="token keyword">WHERE</span> TABLE_SCHEMA<span class="token operator">=</span><span class="token string">&#39;xsxc_bak&#39;</span> <span class="token punctuation">;</span>
<span class="token keyword">DECLARE</span> <span class="token keyword">CONTINUE</span> <span class="token keyword">HANDLER</span> <span class="token keyword">FOR</span> SQLSTATE <span class="token string">&#39;02000&#39;</span> <span class="token keyword">SET</span> done<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">OPEN</span> indexss<span class="token punctuation">;</span>
<span class="token keyword">repeat</span>
<span class="token keyword">FETCH</span> indexss <span class="token keyword">INTO</span> biao<span class="token punctuation">,</span>ziduan<span class="token punctuation">;</span>
<span class="token keyword">call</span>  getDataByDbName<span class="token punctuation">(</span>biao<span class="token punctuation">,</span>ziduan<span class="token punctuation">)</span><span class="token punctuation">;</span>
UNTIL done <span class="token keyword">END</span> <span class="token keyword">repeat</span><span class="token punctuation">;</span>
<span class="token keyword">CLOSE</span> indexss<span class="token punctuation">;</span>
<span class="token keyword">end</span>
</code></pre></div><h3 id="数据临时表" tabindex="-1"><a class="header-anchor" href="#数据临时表" aria-hidden="true">#</a> 数据临时表</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>temp<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>
  <span class="token identifier"><span class="token punctuation">\`</span>tablename<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>LieName<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8 ROW_FORMAT<span class="token operator">=</span>COMPACT<span class="token punctuation">;</span>
</code></pre></div><h2 id="外键约束" tabindex="-1"><a class="header-anchor" href="#外键约束" aria-hidden="true">#</a> 外键约束</h2><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 查询外键约束</span>
<span class="token keyword">select</span> @<span class="token variable">@Foreign_key_checks</span><span class="token punctuation">;</span>
<span class="token comment">-- 开启外键约束</span>
<span class="token keyword">set</span> Foreign_key_checks <span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token comment">-- 关闭外键约束</span>
<span class="token keyword">set</span> Foreign_key_checks <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
</code></pre></div>`,13),t=[o];function c(l,k){return n(),a("div",null,t)}const r=s(e,[["render",c],["__file","query_big.html.vue"]]);export{r as default};
