import{_ as l,p as n,q as i,a1 as s}from"./framework-d81ad7e5.js";const t={},a=s(`<ol><li><p>首先，你需要一份较好的简历，关于怎么写简历，这个也非常简单。你可以去那些招聘网站上看看招聘信息，公司的技术要求。然后再根据自身特点稍加修改就okay，这里就不再过多的介绍如何写好一份简历。</p></li><li><p>如果你投递的简历顺利通过赛选，那你很快就会收到hr的面试邀请。电话面试或者见面面试也好，面试官会拿着你的简历然后说：简单的做一个自我介绍吧！所以面试开始的第一步一般都是自我介绍</p></li><li><p><strong>关于自己介绍</strong>，我们需要记住以下几点：</p><ol><li>简单：这个自我介绍最好控制在2分钟以内。可以先写一个简短的自己介绍，然后记住它。这看起来没必要其实是非常高效的，因为也许你会经历多次面试，而导致每次的自我介绍可能因为各种原因描述的并不准确，而记住自我介绍可以使你回答的快速、准确、简练，给这次面试有一个好的开始</li><li>大学：讲讲你的大学和专业以及在学校曾经参加的比赛或获得的一些奖项（因人而异）</li><li>最近：讲讲你现在的状况比如就职公司职位等等</li><li>忌讳：不要说你为啥离职，不要说什么爱好，这都是在浪费面试官的耐心，这不是和技术谈的，到后面hr面试才可能会问</li><li>扬长避短：切记，扬长避短，自己的缺点先别说，比如英语四级没过，或者你不想暴露自己培训经历等等</li><li>范例：您好，我叫xxx，我毕业于XXX大学的xxx专业，在校曾参加过xxx比赛并取得第x名的成绩（没有比赛经历就可以说说证书），我是通过自学（或培训）走上java道路的。工作已经3年，主要从事java后台开发。目前在xxx公司担任xxx职位。</li></ol></li><li><p>自我介绍完了之后面试官可能会让你讲讲你最近做的一个项目或者你认为做的最好的一个项目，注意以下几点：</p><ol><li>明确项目是做什么的</li><li>明确项目的价值。（为什么做这个项目，它解决了用户什么痛点，它带来什么价值？）</li><li>明确项目的功能。（这个项目涉及哪些功能？）</li><li>明确项目的技术。（这个项目用到哪些技术？）</li><li>明确个人在项目中的位置和作用。（你在这个项目的承担角色？核心开发？小组leader等）</li><li>明确项目的整体架构。</li><li>明确项目的优缺点，如果重新设计你会如何设计。</li><li>明确项目的亮点。（这个项目有什么亮点？）</li><li>明确技术成长。（你通过这个项目有哪些技术成长？）</li><li>在项目中遇到过那些问题，最后怎么解决了？（这个其实就是让你自己出题自己回答）</li></ol></li><li><p>面试官听完后也许就会对你这个项目展开技术讨论</p></li><li><p>聊完项目面试官接下来就会说：那我问你几个java方面的问题吧</p></li><li><p><strong>微服务</strong></p></li><li><p><strong>分布式</strong></p></li><li><p><strong>中间件</strong></p></li><li><p><strong>数据库</strong></p></li><li><p><strong>缓存</strong></p></li><li><p><strong>jvm</strong></p></li><li><p><strong>并发编程</strong></p></li><li><p><strong>源码</strong></p></li><li><p><strong>架构设计</strong></p></li></ol><div class="language-markdown" data-ext="md"><pre class="language-markdown"><code>
<span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"><span class="token key atrule">autoGroup-1</span><span class="token punctuation">:</span> 并发编程
<span class="token key atrule">title</span><span class="token punctuation">:</span>  juc</span>
<span class="token punctuation">---</span></span>

</code></pre></div>`,2),o=[a];function p(e,r){return n(),i("div",null,o)}const g=l(t,[["render",p],["__file","index.html.vue"]]);export{g as default};
