import{_ as a,p as n,q as s,a1 as t}from"./framework-d81ad7e5.js";const p={},e=t(`<ul><li><strong>IOC全称Inversion ofControl，控制反转，这是一种设计思想。在Java开发中，ioc意味着将你设计好的对象交给容器控制，而不是传统的在你的对象内部直接控制</strong></li></ul><h2 id="ioc-容器的职责" tabindex="-1"><a class="header-anchor" href="#ioc-容器的职责" aria-hidden="true">#</a> IoC 容器的职责</h2><ul><li>通用职责</li><li>依赖处理 <ul><li>依赖查找</li><li>依赖注入</li></ul></li><li>生命周期管理 <ul><li>容器</li><li>托管的资源（Java Beans 或其他资源）</li></ul></li><li>配置 <ul><li>容器</li><li>外部化配置</li><li>托管的资源（Java Beans 或其他资源）</li></ul></li></ul><table><thead><tr><th>类型</th><th>依赖处理</th><th>实现便利性</th><th>代码侵入性</th><th>api依赖性</th><th>可读性</th></tr></thead><tbody><tr><td>依赖查找</td><td>主动获取</td><td>相对繁琐</td><td>侵入代码逻辑</td><td>依赖容器api</td><td>良好</td></tr><tr><td>依赖注入</td><td>被动提供</td><td>相对便利</td><td>低侵入</td><td>不依赖容器api</td><td>一般</td></tr></tbody></table><p>ioc 容器职责</p><p>依赖查找</p><p>依赖注入</p><p>构造器注入 对象不变 setter 注入</p><h3 id="什么是ioc" tabindex="-1"><a class="header-anchor" href="#什么是ioc" aria-hidden="true">#</a> 什么是IOC</h3><div class="language-text" data-ext="text"><pre class="language-text"><code>什么是IOC

    IOC 简单的说呢,IOC 就是反转控制,类似于好莱坞原则(不要来找我们,我们会打电话给你@),主要有依赖注入 (Spring )和依赖查找 (JavaBeans) 两种实现

依赖查找和依赖注入的区别
答：依赖查找是主动或手动的依赖查找方式，通常需要依赖容器或标准 API
实现。而依赖注入则是手动或自动依赖绑定的方式，无需依赖特定的容器和
API
</code></pre></div><h3 id="spring-ioc-依赖查找" tabindex="-1"><a class="header-anchor" href="#spring-ioc-依赖查找" aria-hidden="true">#</a> Spring IoC 依赖查找</h3><ul><li>根据 Bean 名称查找 <ul><li>实时查找</li><li>延迟查找</li></ul></li><li>根据 Bean 类型查找 <ul><li>单个 Bean 对象</li><li>集合 Bean 对象</li></ul></li><li>根据 Bean 名称 + 类型查找</li><li>根据 Java 注解查找 <ul><li>单个 Bean 对象</li><li>集合 Bean 对象</li></ul></li></ul><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/aop<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>user<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.osvue.spring.in.ioc.domain.User<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>u788kd<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lusifer<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><div class="language-java" data-ext="java"><pre class="language-java"><code> <span class="token class-name">BeanFactory</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathXmlApplicationContext</span><span class="token punctuation">(</span><span class="token string">&quot;context/autowri.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">User</span> user<span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="spring-ioc-依赖注入" tabindex="-1"><a class="header-anchor" href="#spring-ioc-依赖注入" aria-hidden="true">#</a> Spring IoC 依赖注入</h3><ul><li>根据 Bean 名称注入</li><li>根据 Bean 类型注入 <ul><li>单个 Bean 对象</li><li>集合 Bean 对象</li></ul></li><li>注入容器內建 Bean 对象</li><li>注入非 Bean 对象</li><li>注入类型 <ul><li>实时注入</li><li>延迟注入</li></ul></li><li>autowire=&quot;byType&quot;</li></ul><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>aop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/aop<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>import</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>classpath:/context/ioc.xml<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>userRepo<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.osvue.spring.in.ioc.domain.UserRepository<span class="token punctuation">&quot;</span></span> <span class="token attr-name">autowire</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>byType<span class="token punctuation">&quot;</span></span>  <span class="token punctuation">/&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="依赖查找-和依赖注入-不同源" tabindex="-1"><a class="header-anchor" href="#依赖查找-和依赖注入-不同源" aria-hidden="true">#</a> 依赖查找 和依赖注入 不同源</h3><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserRepository</span> <span class="token punctuation">{</span>

    <span class="token class-name">User</span> user<span class="token punctuation">;</span>

    <span class="token class-name">BeanFactory</span> bean<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
  <span class="token class-name">UserRepository</span> userRepo <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;userRepo&quot;</span><span class="token punctuation">,</span> <span class="token class-name">UserRepository</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
  <span class="token comment">//        依赖查找  ==&gt; </span>
        <span class="token class-name">BeanFactory</span> bean <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token class-name">BeanFactory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//        依赖注入</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>  userRepo<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>bean<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token comment">//org.springframework.context.support.AbstractRefreshableApplicationContext#getBeanFactory</span>

<span class="token annotation punctuation">@Nullable</span>
	<span class="token keyword">private</span> <span class="token keyword">volatile</span> <span class="token class-name">DefaultListableBeanFactory</span> beanFactory<span class="token punctuation">;</span>
 <span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token class-name">ConfigurableListableBeanFactory</span> <span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">DefaultListableBeanFactory</span> beanFactory <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanFactory<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>beanFactory <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;BeanFactory not initialized or already closed - &quot;</span> <span class="token operator">+</span>
					<span class="token string">&quot;call &#39;refresh&#39; before accessing beans via the ApplicationContext&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> beanFactory<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre></div><h3 id="spring-ioc-依赖来源" tabindex="-1"><a class="header-anchor" href="#spring-ioc-依赖来源" aria-hidden="true">#</a> Spring IoC 依赖来源</h3><ul><li>自定义 Bean</li><li>容器內建 Bean 对象</li><li>容器內建依赖</li></ul><h3 id="spring-ioc-配置元信息" tabindex="-1"><a class="header-anchor" href="#spring-ioc-配置元信息" aria-hidden="true">#</a> Spring IoC 配置元信息</h3><ul><li>Bean 定义配置 <ul><li>基于 XML 文件</li><li>基于 Properties 文件</li><li>基于 Java 注解</li><li>基于 Java API</li></ul></li><li>IoC 容器配置 <ul><li>基于 XML 文件</li><li>基于 Java 注解</li><li>基于 Java API</li></ul></li><li>外部化属性配置 <ul><li>基于 Java 注解</li></ul></li></ul><h2 id="spring-ioc-容器" tabindex="-1"><a class="header-anchor" href="#spring-ioc-容器" aria-hidden="true">#</a> Spring IoC 容器</h2><ul><li>BeanFactory 和 ApplicationContext 谁才是 Spring IoC 容器？ <ul><li>BeanFactory是一个 底层的 IOC 容器， ApplicationContext 是在这基础上，增加了一些它的特性；</li></ul></li></ul><h3 id="spring-应用上下文" tabindex="-1"><a class="header-anchor" href="#spring-应用上下文" aria-hidden="true">#</a> Spring 应用上下文</h3><ul><li>ApplicationContext 除了 IoC 容器角色，还有提供： <ul><li>面向切面（AOP）</li><li>配置元信息（Configuration Metadata）</li><li>资源管理（Resources）</li><li>事件（Events）</li><li>国际化（i18n）</li><li>注解（Annotations）</li><li>Environment 抽象（Environment Abstraction）</li></ul></li></ul><h3 id="使用-spring-ioc-容器" tabindex="-1"><a class="header-anchor" href="#使用-spring-ioc-容器" aria-hidden="true">#</a> 使用 Spring IoC 容器</h3><ul><li>BeanFactory 是 Spring 底层 IoC 容器</li><li>ApplicationContext 是具备应用特性的 BeanFactory 超集</li></ul><h3 id="spring-ioc-容器生命周期" tabindex="-1"><a class="header-anchor" href="#spring-ioc-容器生命周期" aria-hidden="true">#</a> Spring IoC 容器生命周期</h3><ul><li>启动</li><li>运行</li><li>停止</li></ul><h3 id="面试题精选" tabindex="-1"><a class="header-anchor" href="#面试题精选" aria-hidden="true">#</a> 面试题精选</h3><ul><li>什么是 Spring IoC 容器？</li><li>BeanFactory 与 FactoryBean？ <ul><li>BeanFactory 是 IoC 底层容器</li><li>FactoryBean 是 创建 Bean 的一种方式，帮助实现复杂的初始化逻辑</li></ul></li><li>Spring IoC 容器启动时做了哪些准备 <ul><li>IoC 配置元信息读取和解析、IoC 容器生命周期、Spring 事件发布、国 际化等</li></ul></li></ul>`,33),o=[e];function l(c,i){return n(),s("div",null,o)}const r=a(p,[["render",l],["__file","spring03_ioc.html.vue"]]);export{r as default};
