import{_ as n,p as s,q as a,a1 as t}from"./framework-d81ad7e5.js";const p={},o=t(`<h3 id="启动流程实例" tabindex="-1"><a class="header-anchor" href="#启动流程实例" aria-hidden="true">#</a> 启动流程实例</h3><div class="language-java" data-ext="java"><pre class="language-java"><code>
	<span class="token doc-comment comment">/**
	 * 启动流程
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">RuntimeService</span> runtimeService <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processEngine<span class="token punctuation">.</span><span class="token function">getRuntimeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//		runtimeService.startProcessInstanceById(processDefinitionId)//根据流程定义ID启动流程</span>
		<span class="token doc-comment comment">/**
		 * 参数1：流程定义ID 参数2：Map<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>String,Object</span><span class="token punctuation">&gt;</span></span> 流程变量
		 */</span>
<span class="token comment">//		runtimeService.startProcessInstanceById(processDefinitionId, variables);</span>
		<span class="token doc-comment comment">/**
		 * 参数1：流程定义ID 参数2：String 业务ID 把业务ID和流程执行实例进行绑定
		 */</span>
<span class="token comment">//		runtimeService.startProcessInstanceById(processDefinitionId, businessKey);</span>
		<span class="token doc-comment comment">/**
		 * 参数1：流程定义ID 参数2：String 业务ID 把业务ID和流程执行实例进行绑定 参数3：Map<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>String,Object</span><span class="token punctuation">&gt;</span></span> 流程变量
		 */</span>
<span class="token comment">//		runtimeService.startProcessInstanceById(processDefinitionId, businessKey, variables)</span>
<span class="token comment">//		</span>
<span class="token comment">//		runtimeService.startProcessInstanceByKey(processDefinitionKey)//根据流程定义的key启动</span>
		<span class="token doc-comment comment">/**
		 * 参数1：流程定义的Key 参数2：Map<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>String,Object</span><span class="token punctuation">&gt;</span></span> 流程变量
		 */</span>
<span class="token comment">//		runtimeService.startProcessInstanceByKey(processDefinitionKey, variables)</span>
		<span class="token doc-comment comment">/**
		 * 参数1：流程定义Key 参数2：String 业务ID 把业务ID和流程执行实例进行绑定
		 */</span>
<span class="token comment">//		runtimeService.startProcessInstanceByKey(processDefinitionId, businessKey);</span>
		<span class="token doc-comment comment">/**
		 * 参数1：流程定义Key 参数2：String 业务ID 把业务ID和流程执行实例进行绑定 参数3：Map<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>String,Object</span><span class="token punctuation">&gt;</span></span> 流程变量
		 */</span>
<span class="token comment">//		runtimeService.startProcessInstanceByKey(processDefinitionId, businessKey, variables)</span>

		<span class="token comment">// 实例开发中使用的</span>
		<span class="token comment">// runtimeService.startProcessInstanceByKey(processDefinitionId, businessKey,</span>
		<span class="token comment">// variables)</span>
		<span class="token comment">// runtimeService.startProcessInstanceByKey(processDefinitionId, businessKey);</span>

		<span class="token class-name">String</span> processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;HelloWorld&quot;</span><span class="token punctuation">;</span>
		<span class="token class-name">ProcessInstance</span> processInstance <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">startProcessInstanceByKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程启动成功:&quot;</span> <span class="token operator">+</span> processInstance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;   &quot;</span> <span class="token operator">+</span> processInstance<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;  &quot;</span>
				<span class="token operator">+</span> processInstance<span class="token punctuation">.</span><span class="token function">getProcessInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">}</span>

</code></pre></div><h3 id="查询个人任务" tabindex="-1"><a class="header-anchor" href="#查询个人任务" aria-hidden="true">#</a> 查询个人任务</h3><div class="language-java" data-ext="java"><pre class="language-java"><code>
	<span class="token doc-comment comment">/**
	 * 查询我的个人任务act_ru_task
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryMyTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">TaskService</span> taskService <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processEngine<span class="token punctuation">.</span><span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> assignee <span class="token operator">=</span> <span class="token string">&quot;李四&quot;</span><span class="token punctuation">;</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token comment">// 条件</span>
				<span class="token punctuation">.</span><span class="token function">taskAssignee</span><span class="token punctuation">(</span>assignee<span class="token punctuation">)</span><span class="token comment">// 根据任务办理人查询任务</span>
<span class="token comment">//		.deploymentId(deploymentId)//根据部署ID查询 where id=id</span>
<span class="token comment">//		.deploymentIdIn(deploymentIds)//根据部署ID集合查询   where id in (1,2,3,4)</span>
<span class="token comment">//		.executionId(executionId)//根据执行实例ID</span>
<span class="token comment">//		.processDefinitionId(processDefinitionId)//根据流程定义ID</span>
<span class="token comment">//		.processDefinitionKey(processDefinitionKey)//根据流程定义的key</span>
<span class="token comment">//		.processDefinitionKeyIn(processDefinitionKeys)</span>
<span class="token comment">//		.processDefinitionKeyLike(processDefinitionKeyLike)</span>
<span class="token comment">//		.processDefinitionName(processDefinitionName)</span>
<span class="token comment">//		.processDefinitionNameLike(processDefinitionNameLike)</span>
<span class="token comment">//		.processInstanceBusinessKey(processInstanceBusinessKey)</span>
				<span class="token comment">// 排序</span>
				<span class="token punctuation">.</span><span class="token function">orderByTaskCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">desc</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token comment">// 结果集</span>
				<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//		.listPage(firstResult, maxResults)</span>
<span class="token comment">//		.count();</span>
<span class="token comment">//		.singleResult()</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> list <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Task</span> task <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务ID:&quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务办理人:&quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getAssignee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;执行实例ID:&quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getExecutionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务名称:&quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义ID:&quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例ID:&quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getProcessInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务创建时间:&quot;</span> <span class="token operator">+</span> task<span class="token punctuation">.</span><span class="token function">getCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;####################&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
</code></pre></div><h3 id="办理任务" tabindex="-1"><a class="header-anchor" href="#办理任务" aria-hidden="true">#</a> 办理任务</h3><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
	 * 办理任务
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">completeTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">TaskService</span> taskService <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processEngine<span class="token punctuation">.</span><span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> taskId <span class="token operator">=</span> <span class="token string">&quot;20002&quot;</span><span class="token punctuation">;</span>
		<span class="token comment">// 根据任务ID去完成任务</span>
		taskService<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span>taskId<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 根据任务ID去完成任务并指定流程变量</span>
<span class="token comment">//		taskService.complete(taskId, variables);</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务完成&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre></div><div class="language-java" data-ext="java"><pre class="language-java"><code>	<span class="token doc-comment comment">/**
	 * 判断流程是否结束 作用：更新业务表里面的状态
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">isComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 已知流程实例ID</span>
		<span class="token class-name">RuntimeService</span> runtimeService <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processEngine<span class="token punctuation">.</span><span class="token function">getRuntimeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> processInstanceId <span class="token operator">=</span> <span class="token string">&quot;2501&quot;</span><span class="token punctuation">;</span>
		<span class="token class-name">ProcessInstance</span> processInstance <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">createProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">processInstanceId</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> processInstance<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程未结束&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程已结束&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token comment">// 已知任务ID 5002 [了解]</span>
		<span class="token comment">// 根据任务ID查询任务实例对象</span>
		<span class="token comment">/*
		 * TaskService taskService = this.processEngine.getTaskService(); String
		 * taskId=&quot;5002&quot;; Task task =
		 * taskService.createTaskQuery().taskId(taskId).singleResult();
		 * //从任务实例里面取出流程实例ID String processInstanceId2 = task.getProcessInstanceId();
		 * //使用流程实例ID去流程实例表里面查询有没有数据 ProcessInstanceQuery processInstance2 =
		 * runtimeService.createProcessInstanceQuery().processInstanceId(
		 * processInstanceId2); if (null != processInstance2) {
		 * System.out.println(&quot;流程未结束&quot;); } else { System.out.println(&quot;流程已结束&quot;); }
		 */</span>

	<span class="token punctuation">}</span>
</code></pre></div><h3 id="查询当前的流程实例" tabindex="-1"><a class="header-anchor" href="#查询当前的流程实例" aria-hidden="true">#</a> 查询当前的流程实例</h3><div class="language-java" data-ext="java"><pre class="language-java"><code>	<span class="token doc-comment comment">/**
	 *  查询当前的流程实例 act_ru_execution
	 * 
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryProcessInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">RuntimeService</span> runtimeService <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processEngine<span class="token punctuation">.</span><span class="token function">getRuntimeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProcessInstance</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">createProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> list <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">ProcessInstance</span> pi <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;执行实例ID:&quot;</span> <span class="token operator">+</span> pi<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义ID:&quot;</span> <span class="token operator">+</span> pi<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例ID:&quot;</span> <span class="token operator">+</span> pi<span class="token punctuation">.</span><span class="token function">getProcessInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;########################&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
</code></pre></div><h3 id="查询历史任务" tabindex="-1"><a class="header-anchor" href="#查询历史任务" aria-hidden="true">#</a> 查询历史任务</h3><div class="language-java" data-ext="java"><pre class="language-java"><code>	<span class="token doc-comment comment">/**
	 * 附加功能，查询历史任务（后面讲）act_hi_taskinst
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryHistoryTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">HistoryService</span> historyService <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processEngine<span class="token punctuation">.</span><span class="token function">getHistoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HistoricTaskInstance</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> historyService<span class="token punctuation">.</span><span class="token function">createHistoricTaskInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> list <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">HistoricTaskInstance</span> hi <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务ID:&quot;</span> <span class="token operator">+</span> hi<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务办理人:&quot;</span> <span class="token operator">+</span> hi<span class="token punctuation">.</span><span class="token function">getAssignee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;执行实例ID:&quot;</span> <span class="token operator">+</span> hi<span class="token punctuation">.</span><span class="token function">getExecutionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务名称:&quot;</span> <span class="token operator">+</span> hi<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义ID:&quot;</span> <span class="token operator">+</span> hi<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例ID:&quot;</span> <span class="token operator">+</span> hi<span class="token punctuation">.</span><span class="token function">getProcessInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务创建时间:&quot;</span> <span class="token operator">+</span> hi<span class="token punctuation">.</span><span class="token function">getCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务结束时间:&quot;</span> <span class="token operator">+</span> hi<span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务持续时间:&quot;</span> <span class="token operator">+</span> hi<span class="token punctuation">.</span><span class="token function">getDurationInMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;####################&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>

	<span class="token punctuation">}</span>

</code></pre></div><h3 id="查询历史流程实例" tabindex="-1"><a class="header-anchor" href="#查询历史流程实例" aria-hidden="true">#</a> 查询历史流程实例</h3><div class="language-java" data-ext="java"><pre class="language-java"><code>	<span class="token doc-comment comment">/**
	 * 查询历史流程实例（后面讲）
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">queryHistoryProcessInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token class-name">HistoryService</span> historyService <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processEngine<span class="token punctuation">.</span><span class="token function">getHistoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HistoricProcessInstance</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> historyService<span class="token punctuation">.</span><span class="token function">createHistoricProcessInstanceQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">!=</span>list<span class="token operator">&amp;&amp;</span>list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">HistoricProcessInstance</span> hi <span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;执行实例ID:&quot;</span> <span class="token operator">+</span> hi<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义ID:&quot;</span> <span class="token operator">+</span> hi<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程启动时间:&quot;</span> <span class="token operator">+</span> hi<span class="token punctuation">.</span><span class="token function">getStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;########################&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
</code></pre></div><ul><li>Execution 执行对象 <ul><li>按流程定义的规则执行一次的过程.</li><li>对应的表：</li><li>act_ru_execution： 正在执行的信息</li><li>act_hi_procinst：已经执行完的历史流程实例信息</li><li>act_hi_actinst：存放历史所有完成的活动</li></ul></li></ul><ul><li>ProcessInstance 流程实例 <ul><li>特指流程从开始到结束的那个最大的执行分支，一个执行的流程中，流程实例只有1个。</li></ul></li></ul><ul><li>注意</li></ul><ol><li>如果是单例流程，执行对象ID就是流程实例ID</li><li>如果一个流程有分支和聚合，那么执行对象ID和流程实例ID就不相同</li><li>一个流程中，流程实例只有1个，执行对象可以存在多个。</li></ol><ul><li>Task 任务 <ul><li>执行到某任务环节时生成的任务信息。</li><li>对应的表：</li><li>act_ru_task：正在执行的任务信息</li><li>act_hi_taskinst：已经执行完的历史任务信息</li></ul></li></ul><h3 id="流程变量" tabindex="-1"><a class="header-anchor" href="#流程变量" aria-hidden="true">#</a> 流程变量</h3><ul><li>流程变量在整个工作流中扮演很重要的作用。 <ul><li>例如：请假流程中有请假天数、请假原因等一些参数都为流程变量的范围。</li><li>流程变量的作用域范围是只对应一个流程实例。也就是说各个流程实例的流程变量是不相互影响的。</li><li>流程实例结束完成以后流程变量还保存在数据库中（<strong>存放到流程变量的历史表中</strong>）。</li></ul></li></ul><ol><li>流程变量的作用域就是流程实例，所以只要设置就行了，不用管在哪个阶段设置</li><li>基本类型设置流程变量，在taskService中使用任务ID，定义流程变量的名称，设置流程变量的值。</li><li>Javabean类型设置流程变量，需要这个javabean实现了<strong>Serializable</strong>接口</li><li>设置流程变量的时候，向<strong>act_ru_variable</strong>这个表添加数据</li></ol><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
	 * 设置流程变量1 RuntimeService
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVariables</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">RuntimeService</span> runtimeService <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processEngine<span class="token punctuation">.</span><span class="token function">getRuntimeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> executionId<span class="token operator">=</span><span class="token string">&quot;2501&quot;</span><span class="token punctuation">;</span>
		<span class="token comment">//runtimeService.setVariable(executionId, &quot;请假人&quot;, &quot;小明&quot;);</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> variables<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;请假天数&quot;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//int</span>
		variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;请假原因&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;约会妹子&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;请假时间&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;用户对象&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;小明&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		runtimeService<span class="token punctuation">.</span><span class="token function">setVariables</span><span class="token punctuation">(</span>executionId<span class="token punctuation">,</span> variables<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程变量设置成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		
	<span class="token punctuation">}</span>
	<span class="token doc-comment comment">/**
	 * 设置流程变量2 TaskService
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVariables2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">TaskService</span> taskService <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processEngine<span class="token punctuation">.</span><span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token class-name">String</span> taskId<span class="token operator">=</span><span class="token string">&quot;2507&quot;</span><span class="token punctuation">;</span>
		<span class="token comment">//runtimeService.setVariable(executionId, &quot;请假人&quot;, &quot;小明&quot;);</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> variables<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;任务ID设置的&quot;</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//int</span>
<span class="token comment">//		taskService.setVariable(taskId, variableName, value);</span>
		taskService<span class="token punctuation">.</span><span class="token function">setVariables</span><span class="token punctuation">(</span>taskId<span class="token punctuation">,</span> variables<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程变量设置成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	
	<span class="token doc-comment comment">/**
	 * 获取流程变量
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getVariables</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">RuntimeService</span> runtimeService <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processEngine<span class="token punctuation">.</span><span class="token function">getRuntimeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> executionId<span class="token operator">=</span><span class="token string">&quot;2501&quot;</span><span class="token punctuation">;</span>
		<span class="token class-name">Integer</span> days<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> runtimeService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>executionId<span class="token punctuation">,</span> <span class="token string">&quot;请假天数&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Date</span> date<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">Date</span><span class="token punctuation">)</span> runtimeService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>executionId<span class="token punctuation">,</span> <span class="token string">&quot;请假时间&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">User</span> user<span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> runtimeService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>executionId<span class="token punctuation">,</span> <span class="token string">&quot;用户对象&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>days<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;  &quot;</span><span class="token operator">+</span>user<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	
	<span class="token doc-comment comment">/**
	 * 设置流程变量2
	 */</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVariables3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">RuntimeService</span> runtimeService <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processEngine<span class="token punctuation">.</span><span class="token function">getRuntimeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> executionId<span class="token operator">=</span><span class="token string">&quot;2501&quot;</span><span class="token punctuation">;</span>
		<span class="token comment">//runtimeService.setVariable(executionId, &quot;请假人&quot;, &quot;小明&quot;);</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> variables<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;测试&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;约会妹子&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		runtimeService<span class="token punctuation">.</span><span class="token function">setVariablesLocal</span><span class="token punctuation">(</span>executionId<span class="token punctuation">,</span> variables<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程变量设置成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setVariables4</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">TaskService</span> taskService <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>processEngine<span class="token punctuation">.</span><span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> taskId<span class="token operator">=</span><span class="token string">&quot;2507&quot;</span><span class="token punctuation">;</span>
		<span class="token comment">//runtimeService.setVariable(executionId, &quot;请假人&quot;, &quot;小明&quot;);</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> variables<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;测试2&quot;</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//int</span>
		taskService<span class="token punctuation">.</span><span class="token function">setVariablesLocal</span><span class="token punctuation">(</span>taskId<span class="token punctuation">,</span> variables<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程变量设置成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

</code></pre></div><ol><li>流程变量的获取针对流程实例（即1个流程），每个流程实例获取的流程变量时不同的</li><li>使用基本类型获取流程变量，在taskService中使用任务ID，流程变量的名称，获取流程变量的值。</li><li><strong>Javabean类型设置获取流程变量，除了需要这个javabean实现了Serializable接口外，还要求流程变量对象的属性不能发生变化，否则抛出异常。解决方案，固定序列化ID</strong></li></ol><ul><li>在流程执行或者任务执行的过程中，用于设置和获取变量，使用流程变量在流程传递的过程中传递业务参数。 对应的表：</li></ul><ul><li>act_ru_variable：正在执行的流程变量表</li><li>act_hi_varinst：流程变量历史表</li></ul><h3 id="番外篇" tabindex="-1"><a class="header-anchor" href="#番外篇" aria-hidden="true">#</a> 番外篇</h3><h5 id="扩展知识-setvariable和setvariablelocal的区别" tabindex="-1"><a class="header-anchor" href="#扩展知识-setvariable和setvariablelocal的区别" aria-hidden="true">#</a> 扩展知识：setVariable和setVariableLocal的区别</h5><ul><li>setVariable：设置流程变量的时候，流程变量名称相同的时候，后一次的值替换前一次的值，而且可以看到TASK_ID的字段不会存放任务ID的值</li><li>setVariableLocal：</li></ul><ol><li><p>设置流程变量的时候，针对当前活动的节点设置流程变量，如果一个流程中存在2个活动节点，对每个活动节点都设置流程变量，即使流程变量的名称相同，后一次的版本的值也不会替换前一次版本的值，它会使用不同的任务ID作为标识，存放2个流程变量值，而且可以看到TASK_ID的字段会存放任务ID的值 例如<strong>act_hi_varinst</strong> 表的数据：不同的任务节点，即使流程变量名称相同，存放的值也是不同的。</p></li><li><p>还有，使用<strong>setVariableLocal</strong>说明流程变量绑定了当前的任务，当流程继续执行时，<strong>下个任务获取不到这个流程变量（因为正在执行的流程变量中没有这个数据）</strong>，所有查询正在执行的任务时不能查询到我们需要的数据，此时需要查询历史的流程变量。</p></li></ol>`,29),c=[o];function e(u,l){return s(),a("div",null,c)}const k=n(p,[["render",e],["__file","activiti_e_instance.html.vue"]]);export{k as default};
