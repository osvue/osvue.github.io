import{_ as n,p as s,q as a,a1 as t}from"./framework-d81ad7e5.js";const p={},o=t(`<div class="language-java" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span></span><span class="token class-name">BufferedImage</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigInteger</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token class-name">Entry</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">net<span class="token punctuation">.</span>sf<span class="token punctuation">.</span>json<span class="token punctuation">.</span></span><span class="token class-name">JSONArray</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span></span><span class="token class-name">POIXMLDocument</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Units</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>w3c<span class="token punctuation">.</span>dom<span class="token punctuation">.</span></span><span class="token class-name">Node</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>imageio<span class="token punctuation">.</span></span><span class="token class-name">ImageIO</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 使用POI,进行Word相关的操作
 *
 * <span class="token keyword">@author</span> xuyu
 *         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 *         Modification History:
 *         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
 *         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 *         Date Author Description
 *         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>

 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MSWordTool</span> <span class="token punctuation">{</span>

	<span class="token doc-comment comment">/** 内部使用的文档对象 **/</span>
	<span class="token keyword">private</span> <span class="token class-name">XWPFDocument</span> document<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">BookMarks</span> bookMarks <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token class-name">PoiWordUtil</span> poiWordUtil <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PoiWordUtil</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">ReportSplice</span> reportSplice <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReportSplice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token doc-comment comment">/**
	 * 为文档设置模板
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">templatePath</span>
	 *            模板文件名称
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTemplate</span><span class="token punctuation">(</span><span class="token class-name">String</span> templatePath<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">(</span><span class="token class-name">POIXMLDocument</span><span class="token punctuation">.</span><span class="token function">openPackage</span><span class="token punctuation">(</span>templatePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			bookMarks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BookMarks</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// TODO Auto-generated catch block</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 为文档设置模板
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">templatePath</span>
	 *            模板文件名称
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span> 
	 */</span>
	<span class="token keyword">public</span> <span class="token class-name">XWPFDocument</span> <span class="token function">setTemplateReturnDoc</span><span class="token punctuation">(</span><span class="token class-name">String</span> templatePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">(</span>
					<span class="token class-name">POIXMLDocument</span><span class="token punctuation">.</span><span class="token function">openPackage</span><span class="token punctuation">(</span>templatePath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			bookMarks <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BookMarks</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// TODO Auto-generated catch block</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>document<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 进行标签替换的例子,传入的Map中，key表示标签名称，value是替换的信息
	 *<span class="token keyword">@param</span> <span class="token parameter">paragraphAlignment</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">indicator</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">replaceBookMark</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> indicator<span class="token punctuation">,</span><span class="token class-name">ParagraphAlignment</span> paragraphAlignment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 循环进行替换</span>
		<span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> bookMarkIter <span class="token operator">=</span> bookMarks<span class="token punctuation">.</span><span class="token function">getNameIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">while</span> <span class="token punctuation">(</span>bookMarkIter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">String</span> bookMarkName <span class="token operator">=</span> bookMarkIter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// 得到标签名称</span>
			<span class="token class-name">BookMark</span> bookMark <span class="token operator">=</span> bookMarks<span class="token punctuation">.</span><span class="token function">getBookmark</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// 进行替换</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>indicator<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				bookMark<span class="token punctuation">.</span><span class="token function">insertTextAtBookMark</span><span class="token punctuation">(</span>indicator<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">,</span>
						<span class="token class-name">BookMark</span><span class="token punctuation">.</span><span class="token constant">INSERT_BEFORE</span><span class="token punctuation">,</span>paragraphAlignment<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 根据书签，文本替换,传入的Map中，key表示标签名称，value是替换的信息
	 * 可以对文本格式进行设置
	 * <span class="token keyword">@param</span> <span class="token parameter">indicator</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">replaceBookMarkText</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> indicator<span class="token punctuation">,</span><span class="token keyword">boolean</span> isBold<span class="token punctuation">,</span><span class="token keyword">boolean</span> isUnderline<span class="token punctuation">,</span><span class="token keyword">int</span> fontSize<span class="token punctuation">,</span><span class="token class-name">String</span> fontFamily<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 循环进行替换</span>
		<span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> bookMarkIter <span class="token operator">=</span> bookMarks<span class="token punctuation">.</span><span class="token function">getNameIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">while</span> <span class="token punctuation">(</span>bookMarkIter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">String</span> bookMarkName <span class="token operator">=</span> bookMarkIter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// 得到标签名称</span>
			<span class="token class-name">BookMark</span> bookMark <span class="token operator">=</span> bookMarks<span class="token punctuation">.</span><span class="token function">getBookmark</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// 进行替换</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>indicator<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				bookMark<span class="token punctuation">.</span><span class="token function">repalceTextAtBookMark</span><span class="token punctuation">(</span>indicator<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">,</span>isBold<span class="token punctuation">,</span>isUnderline<span class="token punctuation">,</span>fontSize<span class="token punctuation">,</span>fontFamily<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	
	<span class="token doc-comment comment">/**
	 * 根据书签合并单元格
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">bookMarkName</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mergeBookMarkTable</span><span class="token punctuation">(</span><span class="token class-name">String</span> bookMarkName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 得到标签名称</span>
		<span class="token class-name">BookMark</span> bookMark <span class="token operator">=</span> bookMarks<span class="token punctuation">.</span><span class="token function">getBookmark</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">XWPFTable</span> table <span class="token operator">=</span> bookMark<span class="token punctuation">.</span><span class="token function">getContainerTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		poiWordUtil<span class="token punctuation">.</span><span class="token function">mergeCellsHorizontal</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">replaceText</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> bookmarkMap<span class="token punctuation">,</span> <span class="token class-name">String</span> bookMarkName<span class="token punctuation">)</span> <span class="token punctuation">{</span>

		<span class="token comment">// 首先得到标签</span>
		<span class="token class-name">BookMark</span> bookMark <span class="token operator">=</span> bookMarks<span class="token punctuation">.</span><span class="token function">getBookmark</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 获得书签标记的表格</span>
		<span class="token class-name">XWPFTable</span> table <span class="token operator">=</span> bookMark<span class="token punctuation">.</span><span class="token function">getContainerTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 获得所有的表</span>
		<span class="token comment">// Iterator&lt;XWPFTable&gt; it = document.getTablesIterator();</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>table <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 得到该表的所有行</span>
			<span class="token keyword">int</span> rcount <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getNumberOfRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rcount<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">XWPFTableRow</span> row <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>

				<span class="token comment">// 获到改行的所有单元格</span>
				<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFTableCell</span><span class="token punctuation">&gt;</span></span> cells <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getTableCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFTableCell</span> c <span class="token operator">:</span> cells<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">:</span> bookmarkMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

							<span class="token comment">// 删掉单元格内容</span>
							c<span class="token punctuation">.</span><span class="token function">removeParagraph</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

							<span class="token comment">// 给单元格赋值</span>
							c<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 循环生成表格多条信息
	 * 针对只在表格后插入新行的情况
	 * <span class="token keyword">@param</span> <span class="token parameter">bookMarkName</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">content</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fillTableAtBookMark</span><span class="token punctuation">(</span><span class="token class-name">String</span> bookMarkName<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>

		<span class="token comment">// rowNum来比较标签在表格的哪一行</span>
		<span class="token keyword">int</span> rowNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

		<span class="token comment">// 首先得到标签</span>
		<span class="token class-name">BookMark</span> bookMark <span class="token operator">=</span> bookMarks<span class="token punctuation">.</span><span class="token function">getBookmark</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> columnMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> styleNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// 标签是否处于表格内</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>bookMark<span class="token punctuation">.</span><span class="token function">isInTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

			<span class="token comment">// 获得标签对应的Table对象和Row对象</span>
			<span class="token class-name">XWPFTable</span> table <span class="token operator">=</span> bookMark<span class="token punctuation">.</span><span class="token function">getContainerTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token class-name">XWPFTableRow</span> row <span class="token operator">=</span> bookMark<span class="token punctuation">.</span><span class="token function">getContainerTableRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">CTRow</span> ctRow <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getCtRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFTableCell</span><span class="token punctuation">&gt;</span></span> rowCell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getTableCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rowCell<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				columnMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> rowCell<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

				<span class="token comment">// 获取该单元格段落的xml，得到根节点</span>
				<span class="token class-name">Node</span> node1 <span class="token operator">=</span> rowCell<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getParagraphs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDomNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

				<span class="token comment">// 遍历根节点的所有子节点</span>
				<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> node1<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>node1<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNodeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
							<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">BookMark</span><span class="token punctuation">.</span><span class="token constant">RUN_NODE_NAME</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token class-name">Node</span> node2 <span class="token operator">=</span> node1<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>

						<span class="token comment">// 遍历所有节点为&quot;w:r&quot;的所有自己点，找到节点名为&quot;w:rPr&quot;的节点</span>
						<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> node2<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							<span class="token keyword">if</span> <span class="token punctuation">(</span>node2<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNodeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
									<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token class-name">BookMark</span><span class="token punctuation">.</span><span class="token constant">STYLE_NODE_NAME</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

								<span class="token comment">// 将节点为&quot;w:rPr&quot;的节点(字体格式)存到HashMap中</span>
								styleNode<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> node2<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token punctuation">}</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
						<span class="token keyword">continue</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// 循环对比，找到该行所处的位置，删除改行</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> table<span class="token punctuation">.</span><span class="token function">getNumberOfRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>table<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					rowNum <span class="token operator">=</span> i<span class="token punctuation">;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
			table<span class="token punctuation">.</span><span class="token function">removeRow</span><span class="token punctuation">(</span>rowNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> content<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// 创建新的一行,单元格数是表的第一行的单元格数,后面添加数据时，要判断单元格数是否一致</span>
				<span class="token class-name">XWPFTableRow</span> tableRow <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">CTTrPr</span> trPr <span class="token operator">=</span> tableRow<span class="token punctuation">.</span><span class="token function">getCtRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewTrPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">CTHeight</span> ht <span class="token operator">=</span> trPr<span class="token punctuation">.</span><span class="token function">addNewTrHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				ht<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">BigInteger</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// 得到表格行数</span>
			<span class="token keyword">int</span> rcount <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getNumberOfRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> rowNum<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rowNum<span class="token operator">+</span>content<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">XWPFTableRow</span> newRow <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">// 判断newRow的单元格数是不是该书签所在行的单元格数</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>newRow<span class="token punctuation">.</span><span class="token function">getTableCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> rowCell<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

					<span class="token comment">// 计算newRow和书签所在行单元格数差的绝对值</span>
					<span class="token comment">// 如果newRow的单元格数多于书签所在行的单元格数，不能通过此方法来处理，可以通过表格中文本的替换来完成</span>
					<span class="token comment">// 如果newRow的单元格数少于书签所在行的单元格数，要将少的单元格补上</span>
					<span class="token keyword">int</span> sub <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>newRow<span class="token punctuation">.</span><span class="token function">getTableCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
							<span class="token operator">-</span> rowCell<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token comment">// 将缺少的单元格补上</span>
					<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> sub<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						newRow<span class="token punctuation">.</span><span class="token function">addNewTableCell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>

				<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFTableCell</span><span class="token punctuation">&gt;</span></span> cells <span class="token operator">=</span> newRow<span class="token punctuation">.</span><span class="token function">getTableCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

				<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> cells<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token class-name">XWPFParagraph</span> para <span class="token operator">=</span> cells<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getParagraphs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					para<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">ParagraphAlignment</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token comment">//设置段落高度</span>
					<span class="token class-name">PoiWordUtil</span><span class="token punctuation">.</span><span class="token function">setParHeight</span><span class="token punctuation">(</span>para<span class="token punctuation">,</span><span class="token string">&quot;360&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token doc-comment comment">/************文字在表格内居中start**************/</span>
					<span class="token class-name">CTTc</span> cttc <span class="token operator">=</span> cells<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCTTc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token class-name">CTTcPr</span> ctPr <span class="token operator">=</span> cttc<span class="token punctuation">.</span><span class="token function">addNewTcPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					ctPr<span class="token punctuation">.</span><span class="token function">addNewVAlign</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STVerticalJc</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					cttc<span class="token punctuation">.</span><span class="token function">getPArray</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewPPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewJc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STJc</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

					<span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i <span class="token operator">-</span> rowNum<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>columnMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token class-name">XWPFRun</span> run <span class="token operator">=</span> para<span class="token punctuation">.</span><span class="token function">insertNewRun</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token comment">// 改变单元格的值，标题栏不用改变单元格的值</span>
						run<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i <span class="token operator">-</span> rowNum<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>columnMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

						<span class="token comment">// 将单元格段落的字体格式设为原来单元格的字体格式</span>
						run<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDomNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>styleNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
								run<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDomNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFirstChild</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				table<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>


	<span class="token doc-comment comment">/**
	 * 循环插入图片到表格中
	 * <span class="token keyword">@param</span> <span class="token parameter">bookMarkName</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">imgArray</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">fillPictureTableAtBookMark</span><span class="token punctuation">(</span><span class="token class-name">String</span> bookMarkName<span class="token punctuation">,</span> <span class="token class-name">String</span> imagePath<span class="token punctuation">,</span> <span class="token class-name">JSONArray</span> imgArray<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 首先得到标签</span>
		<span class="token class-name">BookMark</span> bookMark <span class="token operator">=</span> bookMarks<span class="token punctuation">.</span><span class="token function">getBookmark</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> columnMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> styleNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// 标签是否处于表格内</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>bookMark<span class="token punctuation">.</span><span class="token function">isInTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

			<span class="token comment">// 获得标签对应的Table对象和Row对象</span>
			<span class="token class-name">XWPFTable</span> table <span class="token operator">=</span> bookMark<span class="token punctuation">.</span><span class="token function">getContainerTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token keyword">int</span> size <span class="token operator">=</span> imgArray<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> rowNumber <span class="token operator">=</span> size<span class="token operator">%</span><span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token punctuation">(</span>size<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>size<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>

			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rowNumber<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// 创建新的一行,单元格数是表的第一行的单元格数</span>
				<span class="token class-name">XWPFTableRow</span> tableRow <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">CTTrPr</span> trPr <span class="token operator">=</span> tableRow<span class="token punctuation">.</span><span class="token function">getCtRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewTrPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">CTHeight</span> ht <span class="token operator">=</span> trPr<span class="token punctuation">.</span><span class="token function">addNewTrHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				ht<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">BigInteger</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

			<span class="token comment">//已新建完空行，循环插入数据</span>
			<span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rowNumber<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">XWPFTableRow</span> newRow <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFTableCell</span><span class="token punctuation">&gt;</span></span> cells <span class="token operator">=</span> newRow<span class="token punctuation">.</span><span class="token function">getTableCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> cells<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">//表格样式，上对齐</span>
					<span class="token class-name">CTTc</span> cttc <span class="token operator">=</span> cells<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCTTc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token class-name">CTTcPr</span> ctPr <span class="token operator">=</span> cttc<span class="token punctuation">.</span><span class="token function">addNewTcPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					ctPr<span class="token punctuation">.</span><span class="token function">addNewVAlign</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STVerticalJc</span><span class="token punctuation">.</span><span class="token constant">TOP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

					<span class="token class-name">XWPFParagraph</span> para <span class="token operator">=</span> cells<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getParagraphs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token class-name">XWPFRun</span> run <span class="token operator">=</span> para<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">if</span><span class="token punctuation">(</span>k <span class="token operator">&lt;</span> imgArray<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token class-name">String</span> imgFilePath <span class="token operator">=</span> imagePath <span class="token operator">+</span> imgArray<span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

						<span class="token keyword">try</span> <span class="token punctuation">{</span>
							<span class="token class-name">FileInputStream</span> fileInputImg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>imgFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token class-name">BufferedImage</span> bufferedImg <span class="token operator">=</span> <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>fileInputImg<span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token keyword">int</span> imgWidth <span class="token operator">=</span> bufferedImg<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token keyword">int</span> imgHeight <span class="token operator">=</span> bufferedImg<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							fileInputImg<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							fileInputImg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>imgFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span>

							run<span class="token punctuation">.</span><span class="token function">addPicture</span><span class="token punctuation">(</span>fileInputImg<span class="token punctuation">,</span><span class="token class-name">Document</span><span class="token punctuation">.</span><span class="token constant">PICTURE_TYPE_JPEG</span><span class="token punctuation">,</span>
									bookMarkName<span class="token punctuation">,</span> <span class="token class-name">Units</span><span class="token punctuation">.</span><span class="token function">toEMU</span><span class="token punctuation">(</span><span class="token number">215</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Units</span><span class="token punctuation">.</span><span class="token function">toEMU</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token number">215</span><span class="token operator">/</span>imgWidth<span class="token punctuation">)</span><span class="token operator">*</span>imgHeight<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							fileInputImg<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
							e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
						k<span class="token operator">++</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>

				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>


	<span class="token doc-comment comment">/**
	 * 循环生成表格多条信息
	 * 正对需要在表格中间插入新行的情况
	 * <span class="token keyword">@param</span> <span class="token parameter">bookMarkName</span> 书签
	 * <span class="token keyword">@param</span> <span class="token parameter">content</span> value
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addTableRowAtBookMark</span><span class="token punctuation">(</span><span class="token class-name">String</span> bookMarkName<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>

		<span class="token comment">// rowNum来比较标签在表格的哪一行</span>
		<span class="token keyword">int</span> rowNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

		<span class="token comment">// 首先得到标签</span>
		<span class="token class-name">BookMark</span> bookMark <span class="token operator">=</span> bookMarks<span class="token punctuation">.</span><span class="token function">getBookmark</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> columnMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Node</span><span class="token punctuation">&gt;</span></span> styleNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// 标签是否处于表格内</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>bookMark<span class="token punctuation">.</span><span class="token function">isInTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 获得标签对应的Table对象和Row对象</span>
			<span class="token class-name">XWPFTable</span> table <span class="token operator">=</span> bookMark<span class="token punctuation">.</span><span class="token function">getContainerTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">XWPFTableRow</span> row <span class="token operator">=</span> bookMark<span class="token punctuation">.</span><span class="token function">getContainerTableRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token class-name">CTRow</span> ctRow <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getCtRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFTableCell</span><span class="token punctuation">&gt;</span></span> rowCell <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getTableCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> rowCell<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				columnMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> rowCell<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

				<span class="token comment">// 获取该单元格段落的xml，得到根节点</span>
				<span class="token class-name">Node</span> node1 <span class="token operator">=</span> rowCell<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getParagraphs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDomNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">// 遍历根节点的所有子节点</span>
				<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> node1<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>node1<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNodeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
							<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">BookMark</span><span class="token punctuation">.</span><span class="token constant">RUN_NODE_NAME</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token class-name">Node</span> node2 <span class="token operator">=</span> node1<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>

						<span class="token comment">// 遍历所有节点为&quot;w:r&quot;的所有自己点，找到节点名为&quot;w:rPr&quot;的节点</span>
						<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> node2<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							<span class="token keyword">if</span> <span class="token punctuation">(</span>node2<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getNodeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
									<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token class-name">BookMark</span><span class="token punctuation">.</span><span class="token constant">STYLE_NODE_NAME</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
								<span class="token comment">// 将节点为&quot;w:rPr&quot;的节点(字体格式)存到HashMap中</span>
								styleNode<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> node2<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token punctuation">}</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token comment">// 循环对比，找到标签行所处的位置，rowNum为行数</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> table<span class="token punctuation">.</span><span class="token function">getNumberOfRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>table<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					rowNum <span class="token operator">=</span> i<span class="token punctuation">;</span>
					<span class="token keyword">break</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>

			<span class="token comment">//循环次数为插入数据条数</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> content<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">XWPFTableRow</span> newTableRow <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">insertNewTableRow</span><span class="token punctuation">(</span>rowNum<span class="token operator">+</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>newTableRow <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">return</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>

				<span class="token class-name">CTTbl</span> ctTbl <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getCTTbl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">CTTblGrid</span> tblGrid <span class="token operator">=</span> ctTbl<span class="token punctuation">.</span><span class="token function">getTblGrid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>tblGrid <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// 新增单元格</span>
					<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CTTblGridCol</span><span class="token punctuation">&gt;</span></span> gridColList <span class="token operator">=</span> tblGrid<span class="token punctuation">.</span><span class="token function">getGridColList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>gridColList <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> gridColList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">CTTblGridCol</span> ctlCol <span class="token operator">:</span> gridColList<span class="token punctuation">)</span> <span class="token punctuation">{</span>
							<span class="token class-name">XWPFTableCell</span> cell <span class="token operator">=</span> newTableRow<span class="token punctuation">.</span><span class="token function">addNewTableCell</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>

						<span class="token comment">//获得插入新行的单元格数，循环插入新值，设置单元格格式</span>
						<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFTableCell</span><span class="token punctuation">&gt;</span></span> cells <span class="token operator">=</span> newTableRow<span class="token punctuation">.</span><span class="token function">getTableCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> cells<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							<span class="token class-name">XWPFParagraph</span> para <span class="token operator">=</span> cells<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getParagraphs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token comment">//居中，行高</span>
							para<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">ParagraphAlignment</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token class-name">PoiWordUtil</span><span class="token punctuation">.</span><span class="token function">setParHeight</span><span class="token punctuation">(</span>para<span class="token punctuation">,</span><span class="token string">&quot;240&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

							<span class="token comment">//文字在表格内居中</span>
							<span class="token class-name">CTTc</span> cttc <span class="token operator">=</span> cells<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCTTc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token class-name">CTTcPr</span> ctPr <span class="token operator">=</span> cttc<span class="token punctuation">.</span><span class="token function">addNewTcPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							ctPr<span class="token punctuation">.</span><span class="token function">addNewVAlign</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STVerticalJc</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

							cttc<span class="token punctuation">.</span><span class="token function">getPArray</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewPPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewJc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STJc</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

							<span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>columnMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
								<span class="token class-name">XWPFRun</span> run <span class="token operator">=</span> para<span class="token punctuation">.</span><span class="token function">insertNewRun</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
								<span class="token comment">// 填入值，格式设置为标题的格式</span>
								run<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>columnMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
								run<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDomNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span>styleNode<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
										run<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDomNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFirstChild</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
							<span class="token punctuation">}</span>

						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;鉴定材料&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">//行合并</span>
				poiWordUtil<span class="token punctuation">.</span><span class="token function">mergeCellsVertically</span><span class="token punctuation">(</span>table<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>rowNum<span class="token punctuation">,</span>rowNum<span class="token operator">+</span>content<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

		<span class="token punctuation">}</span>

	<span class="token punctuation">}</span>


	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveAs</span><span class="token punctuation">(</span><span class="token class-name">String</span> saveUrl<span class="token punctuation">,</span><span class="token class-name">String</span> destDirName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">File</span> newFile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>saveUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">File</span> newFilePath <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>destDirName<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>destDirName<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token class-name">File</span><span class="token punctuation">.</span>separator<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            destDirName <span class="token operator">=</span> destDirName <span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator<span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>
		newFilePath<span class="token punctuation">.</span><span class="token function">mkdirs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>newFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// TODO Auto-generated catch block</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>fos<span class="token punctuation">)</span><span class="token punctuation">;</span>
			fos<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			fos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// TODO Auto-generated catch block</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 进行标签替换的例子,传入的Map中，key表示标签名称，value是替换的信息
	 * 对应标签插入图片
	 * <span class="token keyword">@param</span> <span class="token parameter">indicator</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">replaceBookMarkPhoto</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> indicator<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// 循环进行替换</span>
		<span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> bookMarkIter <span class="token operator">=</span> bookMarks<span class="token punctuation">.</span><span class="token function">getNameIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">while</span> <span class="token punctuation">(</span>bookMarkIter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">String</span> bookMarkName <span class="token operator">=</span> bookMarkIter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// 得到标签名称</span>
			<span class="token class-name">BookMark</span> bookMark <span class="token operator">=</span> bookMarks<span class="token punctuation">.</span><span class="token function">getBookmark</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// 进行替换</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>indicator<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				bookMark<span class="token punctuation">.</span><span class="token function">insertPhotoAtBookMark</span><span class="token punctuation">(</span>indicator<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">,</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 在书签出进行文本插入，摘取另一word文档文本，进行粘贴操作
	 *
	 * <span class="token keyword">@param</span> <span class="token parameter">indicator</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">replaceBookMarkSplice</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> indicator<span class="token punctuation">,</span> <span class="token class-name">String</span> sourcePath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token comment">// 循环进行替换</span>
		<span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> bookMarkIter <span class="token operator">=</span> bookMarks<span class="token punctuation">.</span><span class="token function">getNameIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">while</span> <span class="token punctuation">(</span>bookMarkIter<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">String</span> bookMarkName <span class="token operator">=</span> bookMarkIter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// 得到标签名称</span>
			<span class="token class-name">BookMark</span> bookMark <span class="token operator">=</span> bookMarks<span class="token punctuation">.</span><span class="token function">getBookmark</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">;</span>

			<span class="token comment">// 进行替换</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>indicator<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				reportSplice<span class="token punctuation">.</span><span class="token function">spliceReport</span><span class="token punctuation">(</span>indicator<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">,</span>sourcePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>



<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 使用实例
 */</span>
        <span class="token class-name">MSWordTool</span> changer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MSWordTool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            changer<span class="token punctuation">.</span><span class="token function">setTemplateReturnDoc</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">?</span> reportPath <span class="token operator">:</span> identifyPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;模板报告获取失败，请检查模板文件路径&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;备案编号&quot;</span><span class="token punctuation">,</span> docNO<span class="token punctuation">)</span><span class="token punctuation">;</span>
        changer<span class="token punctuation">.</span><span class="token function">replaceBookMarkText</span><span class="token punctuation">(</span>map<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">&quot;黑体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;委托人&quot;</span><span class="token punctuation">,</span> client<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;固证事项&quot;</span><span class="token punctuation">,</span> matter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;受理日期&quot;</span><span class="token punctuation">,</span> acceptData<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;基本案情&quot;</span><span class="token punctuation">,</span> basicCase<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;鉴定时间&quot;</span><span class="token punctuation">,</span> startTime<span class="token operator">+</span><span class="token string">&quot;至&quot;</span><span class="token operator">+</span>endTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;鉴定过程时间&quot;</span><span class="token punctuation">,</span> startTime<span class="token operator">+</span><span class="token string">&quot;至&quot;</span><span class="token operator">+</span>endTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;报告日期&quot;</span><span class="token punctuation">,</span> createTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map2<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;APP程序名2&quot;</span><span class="token punctuation">,</span> appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        changer<span class="token punctuation">.</span><span class="token function">replaceBookMarkText</span><span class="token punctuation">(</span>map2<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token string">&quot;仿宋_GB2312&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> summaryMapList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map3<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;来源网址&quot;</span><span class="token punctuation">,</span> sourceURL<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map3<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;应用名称&quot;</span><span class="token punctuation">,</span> appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map3<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;安装包文件名&quot;</span><span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map3<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;大小&quot;</span><span class="token punctuation">,</span> fileSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map3<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;MD5&quot;</span><span class="token punctuation">,</span> fileMD5<span class="token punctuation">)</span><span class="token punctuation">;</span>
        summaryMapList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>map3<span class="token punctuation">)</span><span class="token punctuation">;</span>
        changer<span class="token punctuation">.</span><span class="token function">fillTableAtBookMark</span><span class="token punctuation">(</span><span class="token string">&quot;资料摘要&quot;</span><span class="token punctuation">,</span> summaryMapList<span class="token punctuation">)</span><span class="token punctuation">;</span>

        map3<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&quot;来源网址&quot;</span><span class="token punctuation">,</span> sourceURL<span class="token punctuation">)</span><span class="token punctuation">;</span>
        changer<span class="token punctuation">.</span><span class="token function">fillTableAtBookMark</span><span class="token punctuation">(</span><span class="token string">&quot;分析说明&quot;</span><span class="token punctuation">,</span> summaryMapList<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map6<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;APP程序名&quot;</span><span class="token punctuation">,</span> appName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map6<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;IP地址&quot;</span><span class="token punctuation">,</span> appIP<span class="token punctuation">)</span><span class="token punctuation">;</span>
        changer<span class="token punctuation">.</span><span class="token function">replaceBookMarkText</span><span class="token punctuation">(</span>map6<span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token string">&quot;仿宋_GB2312&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//根据不同类型选择不同公司印章</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map4<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;filepath&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">?</span> sealSignPath <span class="token operator">:</span> identifySignPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        map4<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;middle&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        map5<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;公章&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        changer<span class="token punctuation">.</span><span class="token function">replaceBookMarkPhoto</span><span class="token punctuation">(</span>map5<span class="token punctuation">,</span>map4<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">//到服务器存档</span>
        reportName <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token operator">?</span> reportName <span class="token operator">:</span> identifyName<span class="token punctuation">;</span>
        changer<span class="token punctuation">.</span><span class="token function">saveAs</span><span class="token punctuation">(</span>outPath<span class="token operator">+</span>reportName<span class="token punctuation">,</span>outPath<span class="token punctuation">)</span><span class="token punctuation">;</span>

   
        <span class="token comment">//DocToPdf.doc2pdf(outPath+reportName,outPath+appName+pdfName);</span>

  
</code></pre></div><h3 id="word-pdf" tabindex="-1"><a class="header-anchor" href="#word-pdf" aria-hidden="true">#</a> word_pdf</h3><div class="language-java" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span></span><span class="token class-name">License</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>aspose<span class="token punctuation">.</span>words<span class="token punctuation">.</span></span><span class="token class-name">SaveFormat</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">main<span class="token punctuation">.</span>util<span class="token punctuation">.</span>poi<span class="token punctuation">.</span></span><span class="token class-name">PropertiesUtil</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token import static"><span class="token namespace">main<span class="token punctuation">.</span>util<span class="token punctuation">.</span>poi<span class="token punctuation">.</span></span><span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token static">delFile</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * doc转PDF
 * <span class="token keyword">@author</span> Masai
 * <span class="token keyword">@date</span> 2019-03-11
 */</span>

<span class="token keyword">class</span> <span class="token class-name">DocToPdf</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">getLicense</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> result <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//获取license文件</span>
            <span class="token class-name">String</span> licensePath <span class="token operator">=</span> <span class="token class-name">PropertiesUtil</span><span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token string">&quot;report.properties&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;licensePath&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>licensePath<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">License</span> aposeLic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">License</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            aposeLic<span class="token punctuation">.</span><span class="token function">setLicense</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
            result <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">doc2pdf</span><span class="token punctuation">(</span><span class="token class-name">String</span> inPath<span class="token punctuation">,</span><span class="token class-name">String</span> outPath<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">getLicense</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 验证License 若不验证则转化出的pdf文档会有水印产生</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;com.aspose.words license ERROR!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//新建一个空白pdf文档</span>
            <span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>outPath<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">FileOutputStream</span> os <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 支持RTF HTML,OpenDocument, PDF,EPUB, XPS转换</span>
            <span class="token class-name">Document</span> doc <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Document</span><span class="token punctuation">(</span>inPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                doc<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>os<span class="token punctuation">,</span> <span class="token class-name">SaveFormat</span><span class="token punctuation">.</span><span class="token constant">PDF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                os<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//删除源文件</span>
            <span class="token function">delFile</span><span class="token punctuation">(</span>inPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre></div><p>###　配置文件读取工具</p><div class="language-java" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Enumeration</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 配置文件读取工具
 * <span class="token keyword">@author</span> Se7en
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PropertiesUtil</span> <span class="token punctuation">{</span>

	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">ENCODE</span> <span class="token operator">=</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">CLASSPATH_PERFIX</span> <span class="token operator">=</span> <span class="token string">&quot;classpath:&quot;</span><span class="token punctuation">;</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Properties</span> properties <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token comment">/*默认构照*/</span>
	<span class="token keyword">public</span> <span class="token class-name">PropertiesUtil</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token punctuation">}</span>

	<span class="token comment">/*带参构造，此处结合了spring，在项目启动时从xml加载*/</span>
	<span class="token keyword">public</span> <span class="token class-name">PropertiesUtil</span><span class="token punctuation">(</span><span class="token class-name">String</span> location<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>location<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;The path of Properties File is need&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>location<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token constant">CLASSPATH_PERFIX</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			properties <span class="token operator">=</span> <span class="token function">load</span><span class="token punctuation">(</span>location<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token constant">CLASSPATH_PERFIX</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			properties <span class="token operator">=</span> <span class="token function">load</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	<span class="token comment">/*带参构造，此处结合了spring，在项目启动时从xml加载*/</span>
	<span class="token keyword">public</span> <span class="token class-name">PropertiesUtil</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> location<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> src <span class="token operator">:</span> location<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>src<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>
						<span class="token string">&quot;The path of Properties File is need&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>src<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token constant">CLASSPATH_PERFIX</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">Properties</span> p <span class="token operator">=</span> <span class="token function">load</span><span class="token punctuation">(</span>src<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token constant">CLASSPATH_PERFIX</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				properties<span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				<span class="token class-name">Properties</span> p <span class="token operator">=</span> <span class="token function">load</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>
				properties<span class="token punctuation">.</span><span class="token function">putAll</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>

		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token comment">/*加载配置文件*/</span>
	<span class="token keyword">public</span> <span class="token class-name">Properties</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token class-name">String</span> location<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>location<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;The path of Properties File is need&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token class-name">InputStreamReader</span> inputStream <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">Properties</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
					<span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">ENCODE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnsupportedEncodingException</span> e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e1<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			p<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>inputStream <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> p<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">/*获取配置文件的值*/</span>
	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getValueByKey</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">String</span> val <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> val<span class="token punctuation">;</span>

	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getValueByKey</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span> defaultValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">String</span> val <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> defaultValue<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> val<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token comment">/*获取配置文件中所有的值*/</span>
	<span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getAllProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Enumeration</span> enumeration <span class="token operator">=</span> properties<span class="token punctuation">.</span><span class="token function">propertyNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">while</span> <span class="token punctuation">(</span>enumeration<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> enumeration<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">String</span> value <span class="token operator">=</span> <span class="token function">getValueByKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
			map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> map<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**传入配置文件地址和键，获取值
	 * <span class="token keyword">@param</span> <span class="token parameter">location</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">key</span>
	 * <span class="token keyword">@return</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token class-name">String</span> location<span class="token punctuation">,</span> <span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>location<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;The path of Properties File is need&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token class-name">InputStreamReader</span> inputStream <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">InputStream</span> inStream <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">Properties</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token comment">//inputStream = new InputStreamReader(PropertiesUtil.class</span>
			<span class="token comment">//		.getClassLoader().getResourceAsStream(location), ENCODE);</span>
			inStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>location<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">FileNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token comment">//p.load(inputStream);</span>
			p<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>inStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>inputStream <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> p<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre></div><h3 id="poiword" tabindex="-1"><a class="header-anchor" href="#poiword" aria-hidden="true">#</a> poiWord</h3><div class="language-java" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileOutputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigInteger</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Iterator</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span></span><span class="token class-name">Matcher</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>regex<span class="token punctuation">.</span></span><span class="token class-name">Pattern</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span><span class="token class-name">StringUtils</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Units</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>model<span class="token punctuation">.</span></span><span class="token class-name">XWPFHeaderFooterPolicy</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">Borders</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">BreakType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">ParagraphAlignment</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">TextAlignment</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">UnderlinePatterns</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">VerticalAlign</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFDocument</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFHeader</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFParagraph</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFRelation</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFRun</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFTable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFTableCell</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFTableRow</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xmlbeans<span class="token punctuation">.</span></span><span class="token class-name">XmlException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xmlbeans<span class="token punctuation">.</span></span><span class="token class-name">XmlToken</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>xmlbeans<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>xb<span class="token punctuation">.</span>xmlschema<span class="token punctuation">.</span></span><span class="token class-name">SpaceAttribute</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>drawingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTNonVisualDrawingProps</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>drawingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTPositiveSize2D</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>drawingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>wordprocessingDrawing<span class="token punctuation">.</span></span><span class="token class-name">CTInline</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTBookmark</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTBorder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTColor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTEm</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTFldChar</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTFonts</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTHighlight</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTHpsMeasure</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTHyperlink</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTInd</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTJc</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTMarkupRange</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTOnOff</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTP</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTPPr</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTPageMar</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTParaRPr</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTR</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTRPr</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTSectPr</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTShd</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTSignedTwipsMeasure</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTSpacing</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTString</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTTbl</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTTblBorders</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTTblPr</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTTblWidth</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTTc</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTTcPr</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTText</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTTextScale</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">CTUnderline</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">STBorder</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">STEm</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">STFldCharType</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">STHdrFtr</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">STHighlightColor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">STJc</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">STLineSpacingRule</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">STMerge</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">STOnOff</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">STShd</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">STTblWidth</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">STUnderline</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">STVerticalAlignRun</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>openxmlformats<span class="token punctuation">.</span>schemas<span class="token punctuation">.</span>wordprocessingml<span class="token punctuation">.</span>x2006<span class="token punctuation">.</span>main<span class="token punctuation">.</span></span><span class="token class-name">STVerticalJc</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/** 报表导出样式
 * <span class="token keyword">@author</span> Se7en
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PoiWordUtil</span> <span class="token punctuation">{</span>
	<span class="token doc-comment comment">/**
	 * 跨列合并
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">table</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">row</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">fromCell</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mergeCellsHorizontal</span><span class="token punctuation">(</span><span class="token class-name">XWPFTable</span> table<span class="token punctuation">,</span> <span class="token keyword">int</span> row<span class="token punctuation">,</span> <span class="token keyword">int</span> fromCell<span class="token punctuation">,</span>
			<span class="token keyword">int</span> toCell<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> cellIndex <span class="token operator">=</span> fromCell<span class="token punctuation">;</span> cellIndex <span class="token operator">&lt;=</span> toCell<span class="token punctuation">;</span> cellIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">XWPFTableCell</span> cell <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>cellIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>cellIndex <span class="token operator">==</span> fromCell<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// The first merged cell is set with RESTART merge value</span>
				cell<span class="token punctuation">.</span><span class="token function">getCTTc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewTcPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewHMerge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
						<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STMerge</span><span class="token punctuation">.</span><span class="token constant">RESTART</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				<span class="token comment">// Cells which join (merge) the first one, are set with CONTINUE</span>
				cell<span class="token punctuation">.</span><span class="token function">getCTTc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewTcPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewHMerge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
						<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STMerge</span><span class="token punctuation">.</span><span class="token constant">CONTINUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 跨行合并
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">table</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">col</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">fromRow</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">toRow</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">mergeCellsVertically</span><span class="token punctuation">(</span><span class="token class-name">XWPFTable</span> table<span class="token punctuation">,</span> <span class="token keyword">int</span> col<span class="token punctuation">,</span> <span class="token keyword">int</span> fromRow<span class="token punctuation">,</span>
			<span class="token keyword">int</span> toRow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> rowIndex <span class="token operator">=</span> fromRow<span class="token punctuation">;</span> rowIndex <span class="token operator">&lt;=</span> toRow<span class="token punctuation">;</span> rowIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">XWPFTableCell</span> cell <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span>rowIndex<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>rowIndex <span class="token operator">==</span> fromRow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// The first merged cell is set with RESTART merge value</span>
				cell<span class="token punctuation">.</span><span class="token function">getCTTc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewTcPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewVMerge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
						<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STMerge</span><span class="token punctuation">.</span><span class="token constant">RESTART</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				<span class="token comment">// Cells which join (merge) the first one, are set with CONTINUE</span>
				cell<span class="token punctuation">.</span><span class="token function">getCTTc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewTcPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewVMerge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
						<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STMerge</span><span class="token punctuation">.</span><span class="token constant">CONTINUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 设置表格宽度 居中
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">table</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">width</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTableWidth</span><span class="token punctuation">(</span><span class="token class-name">XWPFTable</span> table<span class="token punctuation">,</span> <span class="token class-name">String</span> width<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTTbl</span> ttbl <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getCTTbl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTTblPr</span> tblPr <span class="token operator">=</span> ttbl<span class="token punctuation">.</span><span class="token function">getTblPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> ttbl<span class="token punctuation">.</span><span class="token function">addNewTblPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> ttbl
				<span class="token punctuation">.</span><span class="token function">getTblPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTTblWidth</span> tblWidth <span class="token operator">=</span> tblPr<span class="token punctuation">.</span><span class="token function">isSetTblW</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> tblPr<span class="token punctuation">.</span><span class="token function">getTblW</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> tblPr
				<span class="token punctuation">.</span><span class="token function">addNewTblW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTJc</span> cTJc <span class="token operator">=</span> tblPr<span class="token punctuation">.</span><span class="token function">addNewJc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		cTJc<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STJc<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;center&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		tblWidth<span class="token punctuation">.</span><span class="token function">setW</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		tblWidth<span class="token punctuation">.</span><span class="token function">setType</span><span class="token punctuation">(</span><span class="token class-name">STTblWidth</span><span class="token punctuation">.</span><span class="token constant">AUTO</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 设置单元格背景色
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">cell</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">bgcolor</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCellBgcolor</span><span class="token punctuation">(</span><span class="token class-name">XWPFTableCell</span> cell<span class="token punctuation">,</span> <span class="token class-name">String</span> bgcolor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTTc</span> cttc <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">getCTTc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTTcPr</span> ctPr <span class="token operator">=</span> cttc<span class="token punctuation">.</span><span class="token function">addNewTcPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTShd</span> ctshd <span class="token operator">=</span> ctPr<span class="token punctuation">.</span><span class="token function">addNewShd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctshd<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span>bgcolor<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 设置单元格字体格式
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">cell</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">cellText</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setParagraph</span><span class="token punctuation">(</span><span class="token class-name">XWPFTableCell</span> cell<span class="token punctuation">,</span> <span class="token class-name">String</span> cellText<span class="token punctuation">,</span> <span class="token class-name">String</span> font<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> bold<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTP</span> ctp <span class="token operator">=</span> <span class="token class-name">CTP<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">XWPFParagraph</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFParagraph</span><span class="token punctuation">(</span>ctp<span class="token punctuation">,</span> cell<span class="token punctuation">)</span><span class="token punctuation">;</span>
		p<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">ParagraphAlignment</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">XWPFRun</span> run <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		cellText<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> str <span class="token operator">=</span> cellText<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\[rn\\\\]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>str<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			run<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span>str<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
				run<span class="token punctuation">.</span><span class="token function">addBreak</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			
		<span class="token punctuation">}</span>
		run<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span>bold<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 加粗</span>
		<span class="token class-name">CTRPr</span> rpr <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> run<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> run
				<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTFonts</span> fonts <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr
				<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>font<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			
		<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
			fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>
			fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>
			fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		
		cell<span class="token punctuation">.</span><span class="token function">setParagraph</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 设置等保测评表格样式一
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">cell</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">text</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">bgcolor</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">width</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCellText</span><span class="token punctuation">(</span><span class="token class-name">XWPFTableCell</span> cell<span class="token punctuation">,</span> <span class="token class-name">String</span> text<span class="token punctuation">,</span> <span class="token class-name">String</span> bgcolor<span class="token punctuation">,</span>
			<span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token class-name">String</span> font<span class="token punctuation">,</span><span class="token class-name">String</span> fontSize<span class="token punctuation">,</span> <span class="token keyword">boolean</span> bold<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTTc</span> cttc <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">getCTTc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTTcPr</span> cellPr <span class="token operator">=</span> cttc<span class="token punctuation">.</span><span class="token function">addNewTcPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		cellPr<span class="token punctuation">.</span><span class="token function">addNewTcW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setW</span><span class="token punctuation">(</span><span class="token class-name">BigInteger</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		cell<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>bgcolor<span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token class-name">CTTcPr</span> ctPr <span class="token operator">=</span> cttc<span class="token punctuation">.</span><span class="token function">addNewTcPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTShd</span> ctshd <span class="token operator">=</span> ctPr<span class="token punctuation">.</span><span class="token function">addNewShd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctshd<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span>bgcolor<span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctPr<span class="token punctuation">.</span><span class="token function">addNewVAlign</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STVerticalJc</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		cttc<span class="token punctuation">.</span><span class="token function">getPArray</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewPPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewJc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STJc</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">CTP</span> ctp <span class="token operator">=</span> <span class="token class-name">CTP<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">XWPFParagraph</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFParagraph</span><span class="token punctuation">(</span>ctp<span class="token punctuation">,</span> cell<span class="token punctuation">)</span><span class="token punctuation">;</span>
		p<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">ParagraphAlignment</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">XWPFRun</span> run <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		text<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> str <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\[rn\\\\]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>str<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			run<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token operator">&lt;</span>str<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
				run<span class="token punctuation">.</span><span class="token function">addBreak</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			
		<span class="token punctuation">}</span>
		run<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span>bold<span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token class-name">CTRPr</span> rpr <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> run<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> run
				<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">//根据fontSize源码方法改动</span>
		<span class="token class-name">CTHpsMeasure</span> ctSize <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetSz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getSz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr<span class="token punctuation">.</span><span class="token function">addNewSz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctSize<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>fontSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token class-name">CTFonts</span> fonts <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr
				<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>font<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			
		<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
			fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>
			fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>
			fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		
		cell<span class="token punctuation">.</span><span class="token function">setParagraph</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 设置段落对齐方式
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">p</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">pAlign</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">valign</span>
	 *            poiWordUtil.setParagraphAlignInfo(p,
	 *            ParagraphAlignment.CENTER, TextAlignment.CENTER);
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setParagraphAlignInfo</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> p<span class="token punctuation">,</span>
			<span class="token class-name">ParagraphAlignment</span> pAlign<span class="token punctuation">,</span> <span class="token class-name">TextAlignment</span> valign<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		p<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span>pAlign<span class="token punctuation">)</span><span class="token punctuation">;</span>
		p<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span>valign<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 添加页脚：显示页码信息
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">document</span>
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">simpleNumberFooter</span><span class="token punctuation">(</span><span class="token class-name">XWPFDocument</span> document<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTP</span> ctp <span class="token operator">=</span> <span class="token class-name">CTP<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">XWPFParagraph</span> codePara <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFParagraph</span><span class="token punctuation">(</span>ctp<span class="token punctuation">,</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">XWPFRun</span> r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;第&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTRPr</span> rpr <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTFonts</span> fonts <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr
				<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTFldChar</span> fldChar <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewFldChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fldChar<span class="token punctuation">.</span><span class="token function">setFldCharType</span><span class="token punctuation">(</span><span class="token class-name">STFldCharType<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;begin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTText</span> ctText <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewInstrText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctText<span class="token punctuation">.</span><span class="token function">setStringValue</span><span class="token punctuation">(</span><span class="token string">&quot;PAGE  \\\\* MERGEFORMAT&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctText<span class="token punctuation">.</span><span class="token function">setSpace</span><span class="token punctuation">(</span><span class="token class-name">SpaceAttribute<span class="token punctuation">.</span>Space<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;preserve&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		rpr <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		fldChar <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewFldChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fldChar<span class="token punctuation">.</span><span class="token function">setFldCharType</span><span class="token punctuation">(</span><span class="token class-name">STFldCharType<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;页 总共&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		rpr <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fldChar <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewFldChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fldChar<span class="token punctuation">.</span><span class="token function">setFldCharType</span><span class="token punctuation">(</span><span class="token class-name">STFldCharType<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;begin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctText <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewInstrText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctText<span class="token punctuation">.</span><span class="token function">setStringValue</span><span class="token punctuation">(</span><span class="token string">&quot;NUMPAGES  \\\\* MERGEFORMAT &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctText<span class="token punctuation">.</span><span class="token function">setSpace</span><span class="token punctuation">(</span><span class="token class-name">SpaceAttribute<span class="token punctuation">.</span>Space<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;preserve&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		rpr <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		fldChar <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewFldChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fldChar<span class="token punctuation">.</span><span class="token function">setFldCharType</span><span class="token punctuation">(</span><span class="token class-name">STFldCharType<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;页&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		rpr <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		codePara<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">ParagraphAlignment</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		codePara<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span><span class="token class-name">TextAlignment</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		codePara<span class="token punctuation">.</span><span class="token function">setBorderTop</span><span class="token punctuation">(</span><span class="token class-name">Borders</span><span class="token punctuation">.</span><span class="token constant">THICK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">XWPFParagraph</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newparagraphs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFParagraph</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		newparagraphs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> codePara<span class="token punctuation">;</span>
		<span class="token class-name">CTSectPr</span> sectPr <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewSectPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">XWPFHeaderFooterPolicy</span> headerFooterPolicy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFHeaderFooterPolicy</span><span class="token punctuation">(</span>
				document<span class="token punctuation">,</span> sectPr<span class="token punctuation">)</span><span class="token punctuation">;</span>
		headerFooterPolicy<span class="token punctuation">.</span><span class="token function">createFooter</span><span class="token punctuation">(</span><span class="token class-name">STHdrFtr</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">,</span> newparagraphs<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 添加时间头 相当于添加页头
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">document</span>
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">simpleDateHeader</span><span class="token punctuation">(</span><span class="token class-name">XWPFDocument</span> document<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTP</span> ctp <span class="token operator">=</span> <span class="token class-name">CTP<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">XWPFParagraph</span> codePara <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFParagraph</span><span class="token punctuation">(</span>ctp<span class="token punctuation">,</span> document<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">XWPFRun</span> r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTFldChar</span> fldChar <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewFldChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fldChar<span class="token punctuation">.</span><span class="token function">setFldCharType</span><span class="token punctuation">(</span><span class="token class-name">STFldCharType<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;begin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTText</span> ctText <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewInstrText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctText<span class="token punctuation">.</span><span class="token function">setStringValue</span><span class="token punctuation">(</span><span class="token string">&quot;TIME \\\\@ \\&quot;EEEE\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctText<span class="token punctuation">.</span><span class="token function">setSpace</span><span class="token punctuation">(</span><span class="token class-name">SpaceAttribute<span class="token punctuation">.</span>Space<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;preserve&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTRPr</span> rpr <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTFonts</span> fonts <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr
				<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		fldChar <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewFldChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fldChar<span class="token punctuation">.</span><span class="token function">setFldCharType</span><span class="token punctuation">(</span><span class="token class-name">STFldCharType<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;年&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		rpr <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fldChar <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewFldChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fldChar<span class="token punctuation">.</span><span class="token function">setFldCharType</span><span class="token punctuation">(</span><span class="token class-name">STFldCharType<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;begin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctText <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewInstrText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctText<span class="token punctuation">.</span><span class="token function">setStringValue</span><span class="token punctuation">(</span><span class="token string">&quot;TIME \\\\@ \\&quot;O\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctText<span class="token punctuation">.</span><span class="token function">setSpace</span><span class="token punctuation">(</span><span class="token class-name">SpaceAttribute<span class="token punctuation">.</span>Space<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;preserve&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		rpr <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		fldChar <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewFldChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fldChar<span class="token punctuation">.</span><span class="token function">setFldCharType</span><span class="token punctuation">(</span><span class="token class-name">STFldCharType<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;月&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		rpr <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fldChar <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewFldChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fldChar<span class="token punctuation">.</span><span class="token function">setFldCharType</span><span class="token punctuation">(</span><span class="token class-name">STFldCharType<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;begin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctText <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewInstrText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctText<span class="token punctuation">.</span><span class="token function">setStringValue</span><span class="token punctuation">(</span><span class="token string">&quot;TIME \\\\@ \\&quot;A\\&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctText<span class="token punctuation">.</span><span class="token function">setSpace</span><span class="token punctuation">(</span><span class="token class-name">SpaceAttribute<span class="token punctuation">.</span>Space<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;preserve&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		rpr <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		fldChar <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewFldChar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fldChar<span class="token punctuation">.</span><span class="token function">setFldCharType</span><span class="token punctuation">(</span><span class="token class-name">STFldCharType<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		r1 <span class="token operator">=</span> codePara<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;日&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		r1<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		rpr <span class="token operator">=</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> r1<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		codePara<span class="token punctuation">.</span><span class="token function">setAlignment</span><span class="token punctuation">(</span><span class="token class-name">ParagraphAlignment</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		codePara<span class="token punctuation">.</span><span class="token function">setVerticalAlignment</span><span class="token punctuation">(</span><span class="token class-name">TextAlignment</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		codePara<span class="token punctuation">.</span><span class="token function">setBorderBottom</span><span class="token punctuation">(</span><span class="token class-name">Borders</span><span class="token punctuation">.</span><span class="token constant">THICK</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">XWPFParagraph</span><span class="token punctuation">[</span><span class="token punctuation">]</span> newparagraphs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFParagraph</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		newparagraphs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> codePara<span class="token punctuation">;</span>
		<span class="token class-name">CTSectPr</span> sectPr <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewSectPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">XWPFHeaderFooterPolicy</span> headerFooterPolicy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFHeaderFooterPolicy</span><span class="token punctuation">(</span>
				document<span class="token punctuation">,</span> sectPr<span class="token punctuation">)</span><span class="token punctuation">;</span>
		headerFooterPolicy<span class="token punctuation">.</span><span class="token function">createHeader</span><span class="token punctuation">(</span><span class="token class-name">STHdrFtr</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">,</span> newparagraphs<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 设置单元格格式及背景色
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">cell</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">text</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">bgcolor</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">width</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCellText</span><span class="token punctuation">(</span><span class="token class-name">XWPFTableCell</span> cell<span class="token punctuation">,</span> <span class="token class-name">String</span> text<span class="token punctuation">,</span> <span class="token class-name">String</span> bgcolor<span class="token punctuation">,</span><span class="token keyword">int</span> width<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTTc</span> cttc <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">getCTTc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTTcPr</span> ctPr <span class="token operator">=</span> cttc<span class="token punctuation">.</span><span class="token function">addNewTcPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTShd</span> ctshd <span class="token operator">=</span> ctPr<span class="token punctuation">.</span><span class="token function">addNewShd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctPr<span class="token punctuation">.</span><span class="token function">addNewTcW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setW</span><span class="token punctuation">(</span><span class="token class-name">BigInteger</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctshd<span class="token punctuation">.</span><span class="token function">setFill</span><span class="token punctuation">(</span>bgcolor<span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctPr<span class="token punctuation">.</span><span class="token function">addNewVAlign</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STVerticalJc</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		cttc<span class="token punctuation">.</span><span class="token function">getPArray</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewPPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewJc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STJc</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		cell<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 设置段落边框
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">p</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">lborder</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">tBorders</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">rBorders</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">bBorders</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">btborders</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setParagraphBorder</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> p<span class="token punctuation">,</span> <span class="token class-name">Borders</span> lborder<span class="token punctuation">,</span>
			<span class="token class-name">Borders</span> tBorders<span class="token punctuation">,</span> <span class="token class-name">Borders</span> rBorders<span class="token punctuation">,</span> <span class="token class-name">Borders</span> bBorders<span class="token punctuation">,</span>
			<span class="token class-name">Borders</span> btborders<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>lborder <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			p<span class="token punctuation">.</span><span class="token function">setBorderLeft</span><span class="token punctuation">(</span>lborder<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>tBorders <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			p<span class="token punctuation">.</span><span class="token function">setBorderTop</span><span class="token punctuation">(</span>tBorders<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>rBorders <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			p<span class="token punctuation">.</span><span class="token function">setBorderRight</span><span class="token punctuation">(</span>rBorders<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>bBorders <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			p<span class="token punctuation">.</span><span class="token function">setBorderBottom</span><span class="token punctuation">(</span>bBorders<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>btborders <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			p<span class="token punctuation">.</span><span class="token function">setBorderBetween</span><span class="token punctuation">(</span>btborders<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 设置段落缩进信息 1厘米≈567
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">p</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">firstLine</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">firstLineChar</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">hanging</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">hangingChar</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">right</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">rigthChar</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">left</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">leftChar</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setParagraphIndInfo</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> p<span class="token punctuation">,</span> <span class="token class-name">String</span> firstLine<span class="token punctuation">,</span>
			<span class="token class-name">String</span> firstLineChar<span class="token punctuation">,</span> <span class="token class-name">String</span> hanging<span class="token punctuation">,</span> <span class="token class-name">String</span> hangingChar<span class="token punctuation">,</span>
			<span class="token class-name">String</span> right<span class="token punctuation">,</span> <span class="token class-name">String</span> rigthChar<span class="token punctuation">,</span> <span class="token class-name">String</span> left<span class="token punctuation">,</span> <span class="token class-name">String</span> leftChar<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTPPr</span> pPPr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				pPPr <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				pPPr <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewPPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token class-name">CTInd</span> pInd <span class="token operator">=</span> pPPr<span class="token punctuation">.</span><span class="token function">getInd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> pPPr<span class="token punctuation">.</span><span class="token function">getInd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pPPr<span class="token punctuation">.</span><span class="token function">addNewInd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>firstLine <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pInd<span class="token punctuation">.</span><span class="token function">setFirstLine</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>firstLine<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>firstLineChar <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pInd<span class="token punctuation">.</span><span class="token function">setFirstLineChars</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>firstLineChar<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>hanging <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pInd<span class="token punctuation">.</span><span class="token function">setHanging</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>hanging<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>hangingChar <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pInd<span class="token punctuation">.</span><span class="token function">setHangingChars</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>hangingChar<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pInd<span class="token punctuation">.</span><span class="token function">setLeft</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>leftChar <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pInd<span class="token punctuation">.</span><span class="token function">setLeftChars</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>leftChar<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pInd<span class="token punctuation">.</span><span class="token function">setRight</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>rigthChar <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pInd<span class="token punctuation">.</span><span class="token function">setRightChars</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>rigthChar<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 设置段落间距信息 一行=240 1.5行倍距 =360  一磅=20
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">p</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">isSpace</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">before</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">after</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">beforeLines</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">afterLines</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">isLine</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">line</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">lineValue</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setParagraphSpacingInfo</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> p<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isSpace<span class="token punctuation">,</span>
			<span class="token class-name">String</span> before<span class="token punctuation">,</span> <span class="token class-name">String</span> after<span class="token punctuation">,</span> <span class="token class-name">String</span> beforeLines<span class="token punctuation">,</span> <span class="token class-name">String</span> afterLines<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> isLine<span class="token punctuation">,</span> <span class="token class-name">String</span> line<span class="token punctuation">,</span> <span class="token class-name">STLineSpacingRule<span class="token punctuation">.</span>Enum</span> lineValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTPPr</span> pPPr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				pPPr <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				pPPr <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewPPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token class-name">CTSpacing</span> pSpacing <span class="token operator">=</span> pPPr<span class="token punctuation">.</span><span class="token function">getSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> pPPr<span class="token punctuation">.</span><span class="token function">getSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token operator">:</span> pPPr<span class="token punctuation">.</span><span class="token function">addNewSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isSpace<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 段前磅数</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>before <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				pSpacing<span class="token punctuation">.</span><span class="token function">setBefore</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>before<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// 段后磅数</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>after <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				pSpacing<span class="token punctuation">.</span><span class="token function">setAfter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>after<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// 段前行数</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>beforeLines <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				pSpacing<span class="token punctuation">.</span><span class="token function">setBeforeLines</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>beforeLines<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// 段后行数</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>afterLines <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				pSpacing<span class="token punctuation">.</span><span class="token function">setAfterLines</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>afterLines<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isLine<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>line <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				pSpacing<span class="token punctuation">.</span><span class="token function">setLine</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>lineValue <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				pSpacing<span class="token punctuation">.</span><span class="token function">setLineRule</span><span class="token punctuation">(</span>lineValue<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 设置字体信息 设置字符间距信息(CTSignedTwipsMeasure)
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">verticalAlign</span>
	 *            SUPERSCRIPT上标 SUBSCRIPT下标
	 * <span class="token keyword">@param</span> <span class="token parameter">position</span>
	 *            字符位置 1磅=2
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTextFontInfo</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> p<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isInsert<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> isNewLine<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">,</span> <span class="token class-name">String</span> fontFamily<span class="token punctuation">,</span>
			<span class="token class-name">String</span> colorVal<span class="token punctuation">,</span> <span class="token class-name">String</span> fontSize<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isBlod<span class="token punctuation">,</span>
			<span class="token class-name">UnderlinePatterns</span> underPatterns<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isItalic<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> isStrike<span class="token punctuation">,</span> <span class="token class-name">VerticalAlign</span> verticalAlign<span class="token punctuation">,</span> <span class="token keyword">int</span> position<span class="token punctuation">,</span>
			<span class="token class-name">String</span> spacingValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">XWPFRun</span> pRun <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isInsert<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pRun <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getRuns</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getRuns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				pRun <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getRuns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				pRun <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isNewLine<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pRun<span class="token punctuation">.</span><span class="token function">addBreak</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		pRun<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// 设置字体样式</span>
		pRun<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span>isBlod<span class="token punctuation">)</span><span class="token punctuation">;</span>
		pRun<span class="token punctuation">.</span><span class="token function">setItalic</span><span class="token punctuation">(</span>isItalic<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>underPatterns <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pRun<span class="token punctuation">.</span><span class="token function">setUnderline</span><span class="token punctuation">(</span>underPatterns<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		pRun<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>colorVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>verticalAlign <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pRun<span class="token punctuation">.</span><span class="token function">setSubscript</span><span class="token punctuation">(</span>verticalAlign<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		pRun<span class="token punctuation">.</span><span class="token function">setTextPosition</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">CTRPr</span> pRpr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>pRun<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pRpr <span class="token operator">=</span> pRun<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>pRpr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				pRpr <span class="token operator">=</span> pRun<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token comment">// pRpr = p.getCTP().addNewR().addNewRPr();</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 设置字体</span>
		<span class="token class-name">CTFonts</span> fonts <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pRpr
				<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>fontFamily<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			
		<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
			fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span>fontFamily<span class="token punctuation">)</span><span class="token punctuation">;</span>
			fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span>fontFamily<span class="token punctuation">)</span><span class="token punctuation">;</span>
			fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span>fontFamily<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		
		<span class="token comment">// 设置字体大小</span>
		<span class="token class-name">CTHpsMeasure</span> sz <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetSz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getSz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pRpr<span class="token punctuation">.</span><span class="token function">addNewSz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		sz<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>fontSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">CTHpsMeasure</span> szCs <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetSzCs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getSzCs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pRpr
				<span class="token punctuation">.</span><span class="token function">addNewSzCs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		szCs<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>fontSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>spacingValue <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 设置字符间距信息</span>
			<span class="token class-name">CTSignedTwipsMeasure</span> ctSTwipsMeasure <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr
					<span class="token punctuation">.</span><span class="token function">getSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pRpr<span class="token punctuation">.</span><span class="token function">addNewSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			ctSTwipsMeasure<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>spacingValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 为段落添加超链接
	 * 
	 * @Description: 添加超链接
	 * <span class="token keyword">@param</span> <span class="token parameter">position</span>
	 *            1磅=2
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">appendExternalHyperlink</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">,</span> <span class="token class-name">String</span> text<span class="token punctuation">,</span>
			<span class="token class-name">XWPFParagraph</span> paragraph<span class="token punctuation">,</span> <span class="token class-name">String</span> fontFamily<span class="token punctuation">,</span> <span class="token class-name">String</span> fontSize<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> isBlod<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isItalic<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isStrike<span class="token punctuation">,</span>
			<span class="token class-name">String</span> verticalAlign<span class="token punctuation">,</span> <span class="token class-name">String</span> position<span class="token punctuation">,</span> <span class="token class-name">String</span> spacingValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// Add the link as External relationship</span>
		<span class="token class-name">String</span> id <span class="token operator">=</span> paragraph
				<span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">getPackagePart</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token punctuation">.</span><span class="token function">addExternalRelationship</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>
						<span class="token class-name">XWPFRelation</span><span class="token punctuation">.</span><span class="token constant">HYPERLINK</span><span class="token punctuation">.</span><span class="token function">getRelation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// Append the link and bind it to the relationship</span>
		<span class="token class-name">CTHyperlink</span> cLink <span class="token operator">=</span> paragraph<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewHyperlink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		cLink<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// Create the linked text</span>
		<span class="token class-name">CTText</span> ctText <span class="token operator">=</span> <span class="token class-name">CTText<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctText<span class="token punctuation">.</span><span class="token function">setStringValue</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTR</span> ctr <span class="token operator">=</span> <span class="token class-name">CTR<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTRPr</span> rpr <span class="token operator">=</span> ctr<span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// 设置超链接样式</span>
		<span class="token class-name">CTColor</span> color <span class="token operator">=</span> <span class="token class-name">CTColor<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		color<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token string">&quot;0000FF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		rpr<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
		rpr<span class="token punctuation">.</span><span class="token function">addNewU</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STUnderline</span><span class="token punctuation">.</span><span class="token constant">SINGLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isBlod<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			rpr<span class="token punctuation">.</span><span class="token function">addNewB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STOnOff<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isItalic<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			rpr<span class="token punctuation">.</span><span class="token function">addNewI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STOnOff<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isStrike<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			rpr<span class="token punctuation">.</span><span class="token function">addNewStrike</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STOnOff<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>verticalAlign <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			rpr<span class="token punctuation">.</span><span class="token function">addNewVertAlign</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span>
					<span class="token class-name">STVerticalAlignRun<span class="token punctuation">.</span>Enum</span><span class="token punctuation">.</span><span class="token function">forString</span><span class="token punctuation">(</span>verticalAlign<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		rpr<span class="token punctuation">.</span><span class="token function">addNewPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// 设置字体</span>
		<span class="token class-name">CTFonts</span> fonts <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr
				<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span>fontFamily<span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span>fontFamily<span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span>fontFamily<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// 设置字体大小</span>
		<span class="token class-name">CTHpsMeasure</span> sz <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetSz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getSz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr<span class="token punctuation">.</span><span class="token function">addNewSz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		sz<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>fontSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">CTHpsMeasure</span> szCs <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetSzCs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr<span class="token punctuation">.</span><span class="token function">getSzCs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr<span class="token punctuation">.</span><span class="token function">addNewSzCs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		szCs<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>fontSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span>spacingValue <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 设置字符间距信息</span>
			<span class="token class-name">CTSignedTwipsMeasure</span> ctSTwipsMeasure <span class="token operator">=</span> rpr<span class="token punctuation">.</span><span class="token function">isSetSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> rpr
					<span class="token punctuation">.</span><span class="token function">getSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> rpr<span class="token punctuation">.</span><span class="token function">addNewSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			ctSTwipsMeasure<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>spacingValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		ctr<span class="token punctuation">.</span><span class="token function">setTArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CTText</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> ctText <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		cLink<span class="token punctuation">.</span><span class="token function">setRArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CTR</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> ctr <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 添加新页面
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">document</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">breakType</span>
	 *            addNewPage(document, BreakType.PAGE)
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addNewPage</span><span class="token punctuation">(</span><span class="token class-name">XWPFDocument</span> document<span class="token punctuation">,</span> <span class="token class-name">BreakType</span> breakType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">XWPFParagraph</span> xp <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createParagraph</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		xp<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addBreak</span><span class="token punctuation">(</span>breakType<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 设置页边距 设置页边距 1厘米约等于567
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">document</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">left</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">top</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">right</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">bottom</span>
	 *            setDocumentMargin(document, &quot;1797&quot;, &quot;1440&quot;, &quot;1797&quot;, &quot;1440&quot;);
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setDocumentMargin</span><span class="token punctuation">(</span><span class="token class-name">XWPFDocument</span> document<span class="token punctuation">,</span> <span class="token class-name">String</span> left<span class="token punctuation">,</span>
			<span class="token class-name">String</span> top<span class="token punctuation">,</span> <span class="token class-name">String</span> right<span class="token punctuation">,</span> <span class="token class-name">String</span> bottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTSectPr</span> sectPr <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetSectPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> document
				<span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSectPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewSectPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTPageMar</span> ctpagemar <span class="token operator">=</span> sectPr<span class="token punctuation">.</span><span class="token function">addNewPgMar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctpagemar<span class="token punctuation">.</span><span class="token function">setLeft</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctpagemar<span class="token punctuation">.</span><span class="token function">setTop</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>top<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctpagemar<span class="token punctuation">.</span><span class="token function">setRight</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		ctpagemar<span class="token punctuation">.</span><span class="token function">setBottom</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>bottom<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 保存文档
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">document</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">savePath</span>
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveDocument</span><span class="token punctuation">(</span><span class="token class-name">XWPFDocument</span> document<span class="token punctuation">,</span> <span class="token class-name">String</span> savePath<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token class-name">FileOutputStream</span> fos <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>savePath<span class="token punctuation">)</span><span class="token punctuation">;</span>
		document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>fos<span class="token punctuation">)</span><span class="token punctuation">;</span>
		fos<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 网安多级编号样式
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">doc</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">Level</span>
	 *            0一级 1二级
	 * <span class="token keyword">@param</span> <span class="token parameter">MutiLevelText</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createMutiLevel</span><span class="token punctuation">(</span><span class="token class-name">XWPFDocument</span> doc<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token class-name">Level</span><span class="token punctuation">,</span>
			<span class="token class-name">String</span> <span class="token class-name">MutiLevelText</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">XWPFParagraph</span> para2 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">createParagraph</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		para2<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//		para2.setNumID(BigInteger.valueOf(2));</span>
<span class="token comment">//		para2.getCTP().getPPr().getNumPr().addNewIlvl()</span>
<span class="token comment">//				.setVal(BigInteger.valueOf(Level));// 设置等级</span>
		<span class="token class-name">XWPFRun</span> run2 <span class="token operator">=</span> para2<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		run2<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token class-name">MutiLevelText</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		run2<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		run2<span class="token punctuation">.</span><span class="token function">setFontFamily</span><span class="token punctuation">(</span><span class="token string">&quot;黑体&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
	 * 网安多级编号样式
	 * 
	 * <span class="token keyword">@param</span> <span class="token parameter">doc</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">styleID</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">mutiLevelText</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">createMutiLevel</span><span class="token punctuation">(</span><span class="token class-name">XWPFDocument</span> doc<span class="token punctuation">,</span><span class="token class-name">String</span> styleID<span class="token punctuation">,</span> <span class="token class-name">String</span> mutiLevelText<span class="token punctuation">,</span><span class="token class-name">String</span> color<span class="token punctuation">,</span><span class="token class-name">String</span> font<span class="token punctuation">,</span><span class="token keyword">int</span> fontsize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">XWPFParagraph</span> para2 <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">createParagraph</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		para2<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span>styleID<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">XWPFRun</span> run2 <span class="token operator">=</span> para2<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		run2<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>mutiLevelText<span class="token punctuation">)</span><span class="token punctuation">;</span>
		run2<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token comment">// 设置字体大小</span>
				
		<span class="token keyword">if</span><span class="token punctuation">(</span>font<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
			run2<span class="token punctuation">.</span><span class="token function">setFontFamily</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		
		<span class="token keyword">if</span><span class="token punctuation">(</span>color<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
			run2<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
			run2<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span>fontsize<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/** 
     * 替换段落里面的变量 
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">doc</span>    要替换的文档 
     * <span class="token keyword">@param</span> <span class="token parameter">params</span> 参数 
     */</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">replaceInPara</span><span class="token punctuation">(</span><span class="token class-name">XWPFDocument</span> doc<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFParagraph</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">getParagraphsIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">XWPFParagraph</span> para<span class="token punctuation">;</span>  
        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            para <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">replaceInPara</span><span class="token punctuation">(</span>para<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token punctuation">}</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token doc-comment comment">/** 
     * 替换段落里面的变量 
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">para</span>   要替换的段落 
     * <span class="token keyword">@param</span> <span class="token parameter">params</span> 参数 
     */</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">replaceInPara</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> para<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFRun</span><span class="token punctuation">&gt;</span></span> runs<span class="token punctuation">;</span>  
        <span class="token class-name">Matcher</span> matcher<span class="token punctuation">;</span>  
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>para<span class="token punctuation">.</span><span class="token function">getParagraphText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            runs <span class="token operator">=</span> para<span class="token punctuation">.</span><span class="token function">getRuns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  
            <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
            <span class="token keyword">int</span> end <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>  
            <span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>  
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> runs<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                <span class="token class-name">XWPFRun</span> run <span class="token operator">=</span> runs<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>  
                <span class="token class-name">String</span> runText <span class="token operator">=</span> run<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token char">&#39;$&#39;</span> <span class="token operator">==</span> runText<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token char">&#39;{&#39;</span> <span class="token operator">==</span> runText<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                    start <span class="token operator">=</span> i<span class="token punctuation">;</span>  
                <span class="token punctuation">}</span>  
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>start <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                    str <span class="token operator">+=</span> runText<span class="token punctuation">;</span>  
                <span class="token punctuation">}</span>  
                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token char">&#39;}&#39;</span> <span class="token operator">==</span> runText<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>runText<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                        end <span class="token operator">=</span> i<span class="token punctuation">;</span>  
                        <span class="token keyword">break</span><span class="token punctuation">;</span>  
                    <span class="token punctuation">}</span>  
                <span class="token punctuation">}</span>  
            <span class="token punctuation">}</span>  
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                para<span class="token punctuation">.</span><span class="token function">removeRun</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>  
                i<span class="token operator">--</span><span class="token punctuation">;</span>  
                end<span class="token operator">--</span><span class="token punctuation">;</span>  
            <span class="token punctuation">}</span>  
  
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> key <span class="token operator">:</span> params<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                    para<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                    <span class="token keyword">break</span><span class="token punctuation">;</span>  
                <span class="token punctuation">}</span>  
            <span class="token punctuation">}</span>  
  
  
        <span class="token punctuation">}</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token doc-comment comment">/** 
     * 替换表格里面的变量 
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">doc</span>    要替换的文档 
     * <span class="token keyword">@param</span> <span class="token parameter">params</span> 参数 
     */</span>  
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">replaceInTable</span><span class="token punctuation">(</span><span class="token class-name">XWPFDocument</span> doc<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFTable</span><span class="token punctuation">&gt;</span></span> iterator <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">getTablesIterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">XWPFTable</span> table<span class="token punctuation">;</span>  
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFTableRow</span><span class="token punctuation">&gt;</span></span> rows<span class="token punctuation">;</span>  
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFTableCell</span><span class="token punctuation">&gt;</span></span> cells<span class="token punctuation">;</span>  
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFParagraph</span><span class="token punctuation">&gt;</span></span> paras<span class="token punctuation">;</span>  
        <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
            table <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            rows <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFTableRow</span> row <span class="token operator">:</span> rows<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                cells <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getTableCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFTableCell</span> cell <span class="token operator">:</span> cells<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                    paras <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">getParagraphs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> para <span class="token operator">:</span> paras<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
                        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">replaceInPara</span><span class="token punctuation">(</span>para<span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>  
                    <span class="token punctuation">}</span>  
                <span class="token punctuation">}</span>  
            <span class="token punctuation">}</span>  
        <span class="token punctuation">}</span>  
    <span class="token punctuation">}</span>  
  
    <span class="token doc-comment comment">/** 
     * 正则匹配字符串 
     * 
     * <span class="token keyword">@param</span> <span class="token parameter">str</span> 
     * <span class="token keyword">@return</span> 
     */</span>  
    <span class="token keyword">private</span> <span class="token class-name">Matcher</span> <span class="token function">matcher</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token class-name">Pattern</span> pattern <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\$\\\\{(.+?)\\\\}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token constant">CASE_INSENSITIVE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token class-name">Matcher</span> matcher <span class="token operator">=</span> pattern<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>  
        <span class="token keyword">return</span> matcher<span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>  
    
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTableBorders</span><span class="token punctuation">(</span><span class="token class-name">XWPFTable</span> table<span class="token punctuation">,</span> <span class="token class-name">CTBorder</span> left<span class="token punctuation">,</span> <span class="token class-name">CTBorder</span> top<span class="token punctuation">,</span>
			<span class="token class-name">CTBorder</span> right<span class="token punctuation">,</span> <span class="token class-name">CTBorder</span> bottom<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTTblBorders</span> tblBorders <span class="token operator">=</span> <span class="token function">getTableBorders</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			tblBorders<span class="token punctuation">.</span><span class="token function">setLeft</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>top <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			tblBorders<span class="token punctuation">.</span><span class="token function">setTop</span><span class="token punctuation">(</span>top<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>right <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			tblBorders<span class="token punctuation">.</span><span class="token function">setRight</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>bottom <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			tblBorders<span class="token punctuation">.</span><span class="token function">setBottom</span><span class="token punctuation">(</span>bottom<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
	 * @Description: 得到Table的边框,不存在则新建
	 */</span>
	<span class="token keyword">public</span> <span class="token class-name">CTTblBorders</span> <span class="token function">getTableBorders</span><span class="token punctuation">(</span><span class="token class-name">XWPFTable</span> table<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTTblPr</span> tblPr <span class="token operator">=</span> <span class="token function">getTableCTTblPr</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTTblBorders</span> tblBorders <span class="token operator">=</span> tblPr<span class="token punctuation">.</span><span class="token function">isSetTblBorders</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> tblPr
				<span class="token punctuation">.</span><span class="token function">getTblBorders</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> tblPr<span class="token punctuation">.</span><span class="token function">addNewTblBorders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> tblBorders<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token doc-comment comment">/**
	 * @Description: 得到Table的CTTblPr,不存在则新建
	 */</span>
	<span class="token keyword">public</span> <span class="token class-name">CTTblPr</span> <span class="token function">getTableCTTblPr</span><span class="token punctuation">(</span><span class="token class-name">XWPFTable</span> table<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTTbl</span> ttbl <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getCTTbl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTTblPr</span> tblPr <span class="token operator">=</span> ttbl<span class="token punctuation">.</span><span class="token function">getTblPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> ttbl<span class="token punctuation">.</span><span class="token function">addNewTblPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> ttbl
				<span class="token punctuation">.</span><span class="token function">getTblPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> tblPr<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
  
	<span class="token doc-comment comment">/**
	 * word插入图片
	 * 
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">insertImg</span><span class="token punctuation">(</span><span class="token class-name">XWPFDocument</span> doc<span class="token punctuation">,</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> picUrl<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
		<span class="token class-name">XWPFParagraph</span> p <span class="token operator">=</span> doc<span class="token punctuation">.</span><span class="token function">createParagraph</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">XWPFRun</span> r <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> imgFile <span class="token operator">:</span> picUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">int</span> format<span class="token punctuation">;</span>

			<span class="token keyword">if</span> <span class="token punctuation">(</span>imgFile<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.emf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				format <span class="token operator">=</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">.</span><span class="token constant">PICTURE_TYPE_EMF</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>imgFile<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.wmf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				format <span class="token operator">=</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">.</span><span class="token constant">PICTURE_TYPE_WMF</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>imgFile<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.pict&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				format <span class="token operator">=</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">.</span><span class="token constant">PICTURE_TYPE_PICT</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>imgFile<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.jpeg&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> imgFile<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				format <span class="token operator">=</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">.</span><span class="token constant">PICTURE_TYPE_JPEG</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>imgFile<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				format <span class="token operator">=</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">.</span><span class="token constant">PICTURE_TYPE_PNG</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>imgFile<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.dib&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				format <span class="token operator">=</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">.</span><span class="token constant">PICTURE_TYPE_DIB</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>imgFile<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.gif&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				format <span class="token operator">=</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">.</span><span class="token constant">PICTURE_TYPE_GIF</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>imgFile<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.tiff&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				format <span class="token operator">=</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">.</span><span class="token constant">PICTURE_TYPE_TIFF</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>imgFile<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.eps&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				format <span class="token operator">=</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">.</span><span class="token constant">PICTURE_TYPE_EPS</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>imgFile<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.bmp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				format <span class="token operator">=</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">.</span><span class="token constant">PICTURE_TYPE_BMP</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>imgFile<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.wpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				format <span class="token operator">=</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">.</span><span class="token constant">PICTURE_TYPE_WPG</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Unsupported picture: &quot;</span><span class="token operator">+</span> imgFile
								<span class="token operator">+</span> <span class="token string">&quot;. Expected emf|wmf|pict|jpeg|png|dib|gif|tiff|eps|bmp|wpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">continue</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// 200x200 pixels</span>
			r<span class="token punctuation">.</span><span class="token function">addPicture</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>imgFile<span class="token punctuation">)</span><span class="token punctuation">,</span> format<span class="token punctuation">,</span> imgFile<span class="token punctuation">,</span>
					<span class="token class-name">Units</span><span class="token punctuation">.</span><span class="token function">toEMU</span><span class="token punctuation">(</span><span class="token number">410</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Units</span><span class="token punctuation">.</span><span class="token function">toEMU</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			r<span class="token punctuation">.</span><span class="token function">addBreak</span><span class="token punctuation">(</span><span class="token class-name">BreakType</span><span class="token punctuation">.</span><span class="token constant">PAGE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>


	<span class="token punctuation">}</span>

	
	<span class="token doc-comment comment">/**
	 * @Description: 添加书签
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addParagraphContentBookmark</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> p<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">,</span>
			<span class="token class-name">BigInteger</span> markId<span class="token punctuation">,</span> <span class="token class-name">String</span> bookMarkName<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isInsert<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> isNewLine<span class="token punctuation">,</span> <span class="token class-name">String</span> fontFamily<span class="token punctuation">,</span> <span class="token class-name">String</span> fontSize<span class="token punctuation">,</span>
			<span class="token class-name">String</span> colorVal<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isBlod<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isUnderLine<span class="token punctuation">,</span>
			<span class="token class-name">String</span> underLineColor<span class="token punctuation">,</span> <span class="token class-name">STUnderline<span class="token punctuation">.</span>Enum</span> underStyle<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> isItalic<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isStrike<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isDStrike<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> isShadow<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isVanish<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isEmboss<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> isImprint<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isOutline<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isEm<span class="token punctuation">,</span>
			<span class="token class-name">STEm<span class="token punctuation">.</span>Enum</span> emType<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isHightLight<span class="token punctuation">,</span>
			<span class="token class-name">STHighlightColor<span class="token punctuation">.</span>Enum</span> hightStyle<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isShd<span class="token punctuation">,</span>
			<span class="token class-name">STShd<span class="token punctuation">.</span>Enum</span> shdStyle<span class="token punctuation">,</span> <span class="token class-name">String</span> shdColor<span class="token punctuation">,</span> <span class="token class-name">VerticalAlign</span> verticalAlign<span class="token punctuation">,</span>
			<span class="token keyword">int</span> position<span class="token punctuation">,</span> <span class="token keyword">int</span> spacingValue<span class="token punctuation">,</span> <span class="token keyword">int</span> indent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTBookmark</span> bookStart <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewBookmarkStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bookStart<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>markId<span class="token punctuation">)</span><span class="token punctuation">;</span>
		bookStart<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">XWPFRun</span> pRun <span class="token operator">=</span> <span class="token function">getOrAddParagraphFirstRun</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> isInsert<span class="token punctuation">,</span> isNewLine<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">setParagraphRunFontInfo</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> pRun<span class="token punctuation">,</span> content<span class="token punctuation">,</span> fontFamily<span class="token punctuation">,</span> fontSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">setParagraphTextStyleInfo</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> pRun<span class="token punctuation">,</span> colorVal<span class="token punctuation">,</span> isBlod<span class="token punctuation">,</span> isUnderLine<span class="token punctuation">,</span>
				underLineColor<span class="token punctuation">,</span> underStyle<span class="token punctuation">,</span> isItalic<span class="token punctuation">,</span> isStrike<span class="token punctuation">,</span> isDStrike<span class="token punctuation">,</span>
				isShadow<span class="token punctuation">,</span> isVanish<span class="token punctuation">,</span> isEmboss<span class="token punctuation">,</span> isImprint<span class="token punctuation">,</span> isOutline<span class="token punctuation">,</span> isEm<span class="token punctuation">,</span>
				emType<span class="token punctuation">,</span> isHightLight<span class="token punctuation">,</span> hightStyle<span class="token punctuation">,</span> isShd<span class="token punctuation">,</span> shdStyle<span class="token punctuation">,</span> shdColor<span class="token punctuation">,</span>
				verticalAlign<span class="token punctuation">,</span> position<span class="token punctuation">,</span> spacingValue<span class="token punctuation">,</span> indent<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">CTMarkupRange</span> bookEnd <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewBookmarkEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bookEnd<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>markId<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token class-name">XWPFRun</span> <span class="token function">getOrAddParagraphFirstRun</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> p<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isInsert<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> isNewLine<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">XWPFRun</span> pRun <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isInsert<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pRun <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">getRuns</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">.</span><span class="token function">getRuns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				pRun <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getRuns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
				pRun <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">createRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isNewLine<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pRun<span class="token punctuation">.</span><span class="token function">addBreak</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> pRun<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token doc-comment comment">/**
	 * @Description 设置字体信息
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setParagraphRunFontInfo</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> p<span class="token punctuation">,</span> <span class="token class-name">XWPFRun</span> pRun<span class="token punctuation">,</span>
			<span class="token class-name">String</span> content<span class="token punctuation">,</span> <span class="token class-name">String</span> fontFamily<span class="token punctuation">,</span> <span class="token class-name">String</span> fontSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTRPr</span> pRpr <span class="token operator">=</span> <span class="token function">getRunCTRPr</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> pRun<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pRun<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 设置字体</span>
		<span class="token class-name">CTFonts</span> fonts <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pRpr
				<span class="token punctuation">.</span><span class="token function">addNewRFonts</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setAscii</span><span class="token punctuation">(</span>fontFamily<span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setEastAsia</span><span class="token punctuation">(</span>fontFamily<span class="token punctuation">)</span><span class="token punctuation">;</span>
		fonts<span class="token punctuation">.</span><span class="token function">setHAnsi</span><span class="token punctuation">(</span>fontFamily<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token comment">// 设置字体大小</span>
		<span class="token class-name">CTHpsMeasure</span> sz <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetSz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getSz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pRpr<span class="token punctuation">.</span><span class="token function">addNewSz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		sz<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>fontSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">CTHpsMeasure</span> szCs <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetSzCs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getSzCs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pRpr
				<span class="token punctuation">.</span><span class="token function">addNewSzCs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		szCs<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>fontSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token doc-comment comment">/**
	 * @Description: 得到XWPFRun的CTRPr
	 */</span>
	<span class="token keyword">public</span> <span class="token class-name">CTRPr</span> <span class="token function">getRunCTRPr</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> p<span class="token punctuation">,</span> <span class="token class-name">XWPFRun</span> pRun<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTRPr</span> pRpr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>pRun<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pRpr <span class="token operator">=</span> pRun<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>pRpr <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				pRpr <span class="token operator">=</span> pRun<span class="token punctuation">.</span><span class="token function">getCTR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			pRpr <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewRPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> pRpr<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	
	<span class="token doc-comment comment">/**
	 * @Description: 设置段落文本样式(高亮与底纹显示效果不同)设置字符间距信息(CTSignedTwipsMeasure)
	 * <span class="token keyword">@param</span> <span class="token parameter">verticalAlign</span>
	 *            : SUPERSCRIPT上标 SUBSCRIPT下标
	 * <span class="token keyword">@param</span> <span class="token parameter">position</span>
	 *            :字符间距位置：&gt;0提升 &lt;0降低=磅值*2 如3磅=6
	 * <span class="token keyword">@param</span> <span class="token parameter">spacingValue</span>
	 *            :字符间距间距 &gt;0加宽 &lt;0紧缩 =磅值*20 如2磅=40
	 * <span class="token keyword">@param</span> <span class="token parameter">indent</span>
	 *            :字符间距缩进 &lt;100 缩
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setParagraphTextStyleInfo</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> p<span class="token punctuation">,</span> <span class="token class-name">XWPFRun</span> pRun<span class="token punctuation">,</span>
			<span class="token class-name">String</span> colorVal<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isBlod<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isUnderLine<span class="token punctuation">,</span>
			<span class="token class-name">String</span> underLineColor<span class="token punctuation">,</span> <span class="token class-name">STUnderline<span class="token punctuation">.</span>Enum</span> underStyle<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> isItalic<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isStrike<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isDStrike<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> isShadow<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isVanish<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isEmboss<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> isImprint<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isOutline<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isEm<span class="token punctuation">,</span>
			<span class="token class-name">STEm<span class="token punctuation">.</span>Enum</span> emType<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isHightLight<span class="token punctuation">,</span>
			<span class="token class-name">STHighlightColor<span class="token punctuation">.</span>Enum</span> hightStyle<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isShd<span class="token punctuation">,</span>
			<span class="token class-name">STShd<span class="token punctuation">.</span>Enum</span> shdStyle<span class="token punctuation">,</span> <span class="token class-name">String</span> shdColor<span class="token punctuation">,</span> <span class="token class-name">VerticalAlign</span> verticalAlign<span class="token punctuation">,</span>
			<span class="token keyword">int</span> position<span class="token punctuation">,</span> <span class="token keyword">int</span> spacingValue<span class="token punctuation">,</span> <span class="token keyword">int</span> indent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>pRun <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token class-name">CTRPr</span> pRpr <span class="token operator">=</span> <span class="token function">getRunCTRPr</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> pRun<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>colorVal <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pRun<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>colorVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 设置字体样式</span>
		<span class="token comment">// 加粗</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isBlod<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pRun<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span>isBlod<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 倾斜</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isItalic<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pRun<span class="token punctuation">.</span><span class="token function">setItalic</span><span class="token punctuation">(</span>isItalic<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 删除线</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isStrike<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pRun<span class="token punctuation">.</span><span class="token function">setStrike</span><span class="token punctuation">(</span>isStrike<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 双删除线</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isDStrike<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">CTOnOff</span> dsCtOnOff <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetDstrike</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getDstrike</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pRpr
					<span class="token punctuation">.</span><span class="token function">addNewDstrike</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			dsCtOnOff<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STOnOff</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 阴影</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isShadow<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">CTOnOff</span> shadowCtOnOff <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetShadow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getShadow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
					<span class="token operator">:</span> pRpr<span class="token punctuation">.</span><span class="token function">addNewShadow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			shadowCtOnOff<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STOnOff</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 隐藏</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isVanish<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">CTOnOff</span> vanishCtOnOff <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetVanish</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getVanish</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
					<span class="token operator">:</span> pRpr<span class="token punctuation">.</span><span class="token function">addNewVanish</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			vanishCtOnOff<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STOnOff</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 阳文</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isEmboss<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">CTOnOff</span> embossCtOnOff <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetEmboss</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getEmboss</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
					<span class="token operator">:</span> pRpr<span class="token punctuation">.</span><span class="token function">addNewEmboss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			embossCtOnOff<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STOnOff</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 阴文</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isImprint<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">CTOnOff</span> isImprintCtOnOff <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetImprint</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getImprint</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
					<span class="token operator">:</span> pRpr<span class="token punctuation">.</span><span class="token function">addNewImprint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			isImprintCtOnOff<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STOnOff</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 空心</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isOutline<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">CTOnOff</span> isOutlineCtOnOff <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetOutline</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getOutline</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
					<span class="token operator">:</span> pRpr<span class="token punctuation">.</span><span class="token function">addNewOutline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			isOutlineCtOnOff<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token class-name">STOnOff</span><span class="token punctuation">.</span><span class="token constant">TRUE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 着重号</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isEm<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">CTEm</span> em <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetEm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getEm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pRpr<span class="token punctuation">.</span><span class="token function">addNewEm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			em<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span>emType<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 设置下划线样式</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isUnderLine<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">CTUnderline</span> u <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetU</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getU</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pRpr<span class="token punctuation">.</span><span class="token function">addNewU</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>underStyle <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				u<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span>underStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>underLineColor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				u<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>underLineColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 设置突出显示文本</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isHightLight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>hightStyle <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">CTHighlight</span> hightLight <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetHighlight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr
						<span class="token punctuation">.</span><span class="token function">getHighlight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pRpr<span class="token punctuation">.</span><span class="token function">addNewHighlight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				hightLight<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span>hightStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>isShd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 设置底纹</span>
			<span class="token class-name">CTShd</span> shd <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetShd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getShd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pRpr<span class="token punctuation">.</span><span class="token function">addNewShd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>shdStyle <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				shd<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span>shdStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>shdColor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				shd<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>shdColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 上标下标</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>verticalAlign <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			pRun<span class="token punctuation">.</span><span class="token function">setSubscript</span><span class="token punctuation">(</span>verticalAlign<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// 设置文本位置</span>
		pRun<span class="token punctuation">.</span><span class="token function">setTextPosition</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>spacingValue <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// 设置字符间距信息</span>
			<span class="token class-name">CTSignedTwipsMeasure</span> ctSTwipsMeasure <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr
					<span class="token punctuation">.</span><span class="token function">getSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pRpr<span class="token punctuation">.</span><span class="token function">addNewSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			ctSTwipsMeasure
					<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>spacingValue<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>indent <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">CTTextScale</span> paramCTTextScale <span class="token operator">=</span> pRpr<span class="token punctuation">.</span><span class="token function">isSetW</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> pRpr<span class="token punctuation">.</span><span class="token function">getW</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> pRpr
					<span class="token punctuation">.</span><span class="token function">addNewW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			paramCTTextScale<span class="token punctuation">.</span><span class="token function">setVal</span><span class="token punctuation">(</span>indent<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	
	<span class="token doc-comment comment">/**
	 * @Description: 添加书签
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addParagraphContentBookmarkBasicStyle</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> p<span class="token punctuation">,</span>
			<span class="token class-name">String</span> content<span class="token punctuation">,</span> <span class="token class-name">BigInteger</span> markId<span class="token punctuation">,</span> <span class="token class-name">String</span> bookMarkName<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> isInsert<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isNewLine<span class="token punctuation">,</span> <span class="token class-name">String</span> fontFamily<span class="token punctuation">,</span>
			<span class="token class-name">String</span> fontSize<span class="token punctuation">,</span> <span class="token class-name">String</span> colorVal<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isBlod<span class="token punctuation">,</span>
			<span class="token keyword">boolean</span> isUnderLine<span class="token punctuation">,</span> <span class="token class-name">String</span> underLineColor<span class="token punctuation">,</span>
			<span class="token class-name">STUnderline<span class="token punctuation">.</span>Enum</span> underStyle<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isItalic<span class="token punctuation">,</span> <span class="token keyword">boolean</span> isStrike<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTBookmark</span> bookStart <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewBookmarkStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bookStart<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>markId<span class="token punctuation">)</span><span class="token punctuation">;</span>
		bookStart<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>bookMarkName<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">XWPFRun</span> pRun <span class="token operator">=</span> <span class="token function">getOrAddParagraphFirstRun</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> isInsert<span class="token punctuation">,</span> isNewLine<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">setParagraphRunFontInfo</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> pRun<span class="token punctuation">,</span> content<span class="token punctuation">,</span> fontFamily<span class="token punctuation">,</span> fontSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">setParagraphTextStyleInfo</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> pRun<span class="token punctuation">,</span> colorVal<span class="token punctuation">,</span> isBlod<span class="token punctuation">,</span> isUnderLine<span class="token punctuation">,</span>
				underLineColor<span class="token punctuation">,</span> underStyle<span class="token punctuation">,</span> isItalic<span class="token punctuation">,</span> isStrike<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
				<span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
				<span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		pRun<span class="token punctuation">.</span><span class="token function">addBreak</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTMarkupRange</span> bookEnd <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewBookmarkEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		bookEnd<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>markId<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token doc-comment comment">/**
	 * 创建页眉
	 * <span class="token keyword">@param</span> <span class="token parameter">docx</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">text</span>
	 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">createDefaultHeader</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">XWPFDocument</span> docx<span class="token punctuation">,</span> <span class="token keyword">final</span> <span class="token class-name">String</span> text<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">{</span>
	    <span class="token class-name">CTP</span> ctp <span class="token operator">=</span> <span class="token class-name">CTP<span class="token punctuation">.</span>Factory</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token class-name">XWPFParagraph</span> paragraph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFParagraph</span><span class="token punctuation">(</span>ctp<span class="token punctuation">,</span> docx<span class="token punctuation">)</span><span class="token punctuation">;</span>
	    ctp<span class="token punctuation">.</span><span class="token function">addNewR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setStringValue</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
	    ctp<span class="token punctuation">.</span><span class="token function">addNewR</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSpace</span><span class="token punctuation">(</span><span class="token class-name">SpaceAttribute<span class="token punctuation">.</span>Space</span><span class="token punctuation">.</span><span class="token constant">PRESERVE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token class-name">CTSectPr</span> sectPr <span class="token operator">=</span> docx<span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isSetSectPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> docx<span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSectPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> docx<span class="token punctuation">.</span><span class="token function">getDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addNewSectPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token class-name">XWPFHeaderFooterPolicy</span> policy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFHeaderFooterPolicy</span><span class="token punctuation">(</span>docx<span class="token punctuation">,</span> sectPr<span class="token punctuation">)</span><span class="token punctuation">;</span>
	    <span class="token class-name">XWPFHeader</span> header <span class="token operator">=</span> policy<span class="token punctuation">.</span><span class="token function">createHeader</span><span class="token punctuation">(</span><span class="token class-name">STHdrFtr</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">XWPFParagraph</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> paragraph <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	    header<span class="token punctuation">.</span><span class="token function">setXWPFDocument</span><span class="token punctuation">(</span>docx<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token doc-comment comment">/**
	 * 设置段落行高  一倍行高是240  1.5倍行高是360
	 * <span class="token keyword">@param</span> <span class="token parameter">line</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setParHeight</span><span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> p<span class="token punctuation">,</span><span class="token class-name">String</span> line<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">CTPPr</span> pPPr <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">getCTP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPPr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">CTSpacing</span> pSpacing <span class="token operator">=</span> pPPr<span class="token punctuation">.</span><span class="token function">getSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> pPPr<span class="token punctuation">.</span><span class="token function">getSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
				<span class="token operator">:</span> pPPr<span class="token punctuation">.</span><span class="token function">addNewSpacing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		pSpacing<span class="token punctuation">.</span><span class="token function">setLine</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
<span class="token punctuation">}</span>
</code></pre></div>`,7),c=[o];function e(u,l){return s(),a("div",null,c)}const i=n(p,[["render",e],["__file","world_poi.html.vue"]]);export{i as default};
