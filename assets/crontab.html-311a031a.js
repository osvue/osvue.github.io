import{_ as t,p as s,q as a,a1 as n}from"./framework-d81ad7e5.js";const e={},o=n(`<h2 id="crond" tabindex="-1"><a class="header-anchor" href="#crond" aria-hidden="true">#</a> crond</h2><ul><li>设置 crontab 开机自启：</li></ul><p><code>systemctl enable crond</code></p><ul><li><p>cron是服务名称</p></li><li><p>crond是后台进程</p></li><li><p>crontab是计划任务表</p></li><li><p>在 <strong>/etc目录下有一个crontab</strong> 文件，这个就是系统任务调度的配置文件</p></li></ul><h3 id="cron服务" tabindex="-1"><a class="header-anchor" href="#cron服务" aria-hidden="true">#</a> cron服务</h3><ul><li>cron是一个 Liunx 下 的定时执行工具，可以在无需人工干预的情况下运行作业。</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>systemctl start  crond    <span class="token comment">//启动服务</span>
systemctl stop  crond     <span class="token comment">//关闭服务</span>
systemctl restart  crond  <span class="token comment">//重启服务</span>
systemctl reload  crond   <span class="token comment">//重新载入配置</span>
systemctl status  crond   <span class="token comment">//查看服务状态 </span>
</code></pre></div><ul><li>在crontab文件中如何输入需要执行的命令和时间。</li><li>该文件中每行都包括六个域，其中前五个域是指定命令被执行的时间，最后一个域是要被执行的命令。</li><li>每个域之间使用空格或者制表符分隔。</li></ul><h3 id="创建cron脚本" tabindex="-1"><a class="header-anchor" href="#创建cron脚本" aria-hidden="true">#</a> 创建cron脚本</h3><ul><li>写cron脚本文件,命名为 <strong>mysqlRollBack.cron</strong></li><li><code>15,30,45,59 * * * * echo &quot;xgmtest.....&quot; &gt;&gt; xgmtest.txt</code> 表示，每隔15分钟，执行打印一次命令</li><li>添加定时任务。执行命令 “<strong>crontab crontest.cron</strong>”。</li><li>&quot;<strong>crontab -l</strong>&quot; 查看定时任务是否成功或者检测<code>/var/spool/cron</code>下是否生成对应cron脚本</li></ul><h4 id="注意-这操作是直接替换该用户下的crontab-而不是新增" tabindex="-1"><a class="header-anchor" href="#注意-这操作是直接替换该用户下的crontab-而不是新增" aria-hidden="true">#</a> 注意：这操作是直接<code>替换</code>该用户下的crontab，而不是新增</h4><ul><li><p><code>crontab file</code>：file是命令文件的名字，表示将file做为crontab的任务列表文件并载入crontab。如果在命令行中没有指定这个文件，crontab命令将接受标准输入（键盘）上键入的命令，并将它们载入crontab。</p></li><li><p><code>crontab [-u user] -e</code>：编辑某个用户的crontab文件内容。默认表示编辑当前用户的crontab文件内容。</p></li><li><p><code>crontab [-u user] -l</code>：显示某个用户的crontab文件内容。默认显示当前用户的crontab文件内容。</p></li><li><p><code>crontab [-u user] -[i]r</code>：从<code>/var/spool/cron</code>目录中删除某个用户的crontab文件，默认删除当前用户的crontab文件。-i参数指定在删除用户的crontab文件时是否给确认提示。</p></li><li><p>特殊字符：</p></li><li><ul><li>星号<code>（*）</code>：代表所有可能的值，例如month字段如果是星号，则表示在满足其它字段的制约条件后每月都执行该命令操作；</li><li>逗号<code>（,）</code>：可以用逗号隔开的值指定一个列表范围，例如，<code>“1,2,5,7,8,9”</code>；</li><li>中杠<code>（-）</code>：可以用整数之间的中杠表示一个整数范围，例如<code>“2-6”</code>表示<code>“2,3,4,5,6”</code>；</li><li>正斜线<code>（/）</code>：可以用正斜线指定时间的间隔频率，例如<code>“0-23/2”</code>表示每两小时执行一次。同时正斜线可以和星号一起使用，例如<code>*/10</code>，如果用在minute字段，表示每十分钟执行一次。</li></ul></li><li><p>使用示例:</p></li></ul><p>每周末，凌晨1-5点，每隔10分钟执行一次<code>auto-del-log.sh</code>,日志输出到<code>auto.log</code></p><p><code>*/10 1-5 * * 6,7 cd /data/prod/kafka_connect_tongji/logs; ./auto-del-log.sh &gt;&gt; auto.log 2&gt;&amp;1</code></p><blockquote><p><code>1表示标准输出，stdout</code>。 <code>2表示标准错误，stderr</code>。 <strong><code>2&gt;&amp;1</code></strong> 的意思就是将标准错误重定向到标准输出</p></blockquote><blockquote><p>linux中 <strong><code>&gt;</code></strong> 表示覆盖原文件内容，**<code>&gt;&gt;</code>**表示追加内容。</p></blockquote><table><thead><tr><th>格式</th><th>说明</th></tr></thead><tbody><tr><td>*/1 * * * * service httpd restart</td><td>每一分钟 重启httpd服务</td></tr><tr><td>0 */1 * * * service httpd restart</td><td>每一小时 重启httpd服务</td></tr><tr><td>30 21 * * * service httpd restart</td><td>每天 21：30 分 重启httpd服务</td></tr><tr><td>26 4 1,5,23,28 * * service httpd restart</td><td>每月的1号，5号 23 号 28 号 的4点26分，重启httpd服务</td></tr><tr><td>26 4 1-21 * * service httpd restart</td><td>每月的1号到21号 的4点26分，重启httpd服务</td></tr><tr><td>*/2 * * * * service httpd restart</td><td>每隔两分钟 执行，偶数分钟 重启httpd服务</td></tr><tr><td>1-59/2 * * * * service httpd restart</td><td>每隔两分钟 执行，奇数 重启httpd服务</td></tr><tr><td>0 23-7/1 * * * service httpd restart</td><td>每天的晚上11点到早上7点 每隔一个小时 重启httpd服务</td></tr><tr><td>0,30 18-23 * * * service httpd restart</td><td>每天18点到23点 每隔30分钟 重启httpd服务</td></tr><tr><td>0-59/30 18-23 * * * service httpd restart</td><td>每天18点到23点 每隔30分钟 重启httpd服务</td></tr></tbody></table><ul><li>服务器定时每天凌晨<code>3：00</code>自动重启。</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@osvue ~<span class="token punctuation">]</span><span class="token comment"># crontab -e</span>
* <span class="token number">3</span> * * * /usr/sbin/reboot
<span class="token punctuation">[</span>root@osvue ~<span class="token punctuation">]</span><span class="token comment"># systemctl restart crond</span>
</code></pre></div><ul><li>每隔10分钟定时备份/var/log/httpd下的日志文件，并将其保存至httpbackuplog目录中。</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@osvue cron.d<span class="token punctuation">]</span><span class="token comment"># touch httpbackuplog.sh</span>
<span class="token punctuation">[</span>root@osvue cron.d<span class="token punctuation">]</span><span class="token comment"># vim httpbackuplog.sh</span>
<span class="token comment">#!/bin/bash</span>
<span class="token assign-left variable">logusr</span><span class="token operator">=</span><span class="token string">&quot;/var/log/httpd&quot;</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;<span class="token variable">$httpbackuplog</span>&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token function">mkdir</span> /httpbackuplog
<span class="token keyword">fi</span>
<span class="token builtin class-name">cd</span> <span class="token variable">$logusr</span>
<span class="token function">tar</span> <span class="token parameter variable">-cvzf</span> <span class="token variable"><span class="token variable">$(</span>date+<span class="token string">&quot;%Y&quot;</span>&quot;%m<span class="token string">&quot;&quot;</span>%d<span class="token string">&quot;&quot;</span>%H<span class="token string">&quot;&quot;</span>%M&quot;<span class="token variable">)</span></span>httpdlog.tar.gz*
<span class="token function">mv</span> <span class="token variable"><span class="token variable">$(</span>date+<span class="token string">&quot;%Y&quot;</span>&quot;%m<span class="token string">&quot;&quot;</span>%d<span class="token string">&quot;&quot;</span>%H<span class="token string">&quot;&quot;</span>%M&quot;<span class="token variable">)</span></span>httpdlog.tar.gz/httpbackuplog
<span class="token punctuation">[</span>root@osvue cron.d<span class="token punctuation">]</span><span class="token comment">#</span>
<span class="token punctuation">[</span>root@osvue cron.d<span class="token punctuation">]</span><span class="token comment"># crontab -e</span>
*/10 * * * * /etc/cron.d/httpbackuplog.sh
<span class="token punctuation">[</span>root@osvue cron.d<span class="token punctuation">]</span><span class="token comment"># systemctl restart crond </span>
</code></pre></div><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><p>首先需要执行 <code>crondtab -e</code> 启用编辑。</p><ul><li><p>每天凌晨 1:30 分重启 docker 服务：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token number">30</span> <span class="token number">1</span> * * * systemctl restart docker.service
</code></pre></div></li><li><p>每月 1、10、20 日的 23:59 重启 docker 服务：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token number">59</span> <span class="token number">23</span> <span class="token number">1,10</span>,20 * * systemctl restart docker.service
</code></pre></div></li><li><p>每月 1 到 10 日的 4:45 重启 docker 服务：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token number">45</span> <span class="token number">4</span> <span class="token number">1</span>-10 * * systemctl restart docker.service
</code></pre></div></li><li><p>每隔两分钟重启 docker 服务：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>*/2 * * * * systemctl restart docker.service
</code></pre></div></li><li><p>每月 10 到 20 日每隔两日的 4:45 重启 docker 服务：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token number">45</span> <span class="token number">4</span> <span class="token number">10</span>-20/2 * * systemctl restart docker.service
</code></pre></div></li><li><p>晚上 11 点到早上 7 点之间每隔一个小时重启 docker 服务：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token number">0</span> <span class="token number">23</span>-7/1 * * * systemctl restart docker.service
</code></pre></div></li></ul>`,24),c=[o];function r(p,l){return s(),a("div",null,c)}const i=t(e,[["render",r],["__file","crontab.html.vue"]]);export{i as default};
