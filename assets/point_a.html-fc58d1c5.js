import{_ as n,p as s,q as a,a1 as t}from"./framework-d81ad7e5.js";const o={},p=t(`<div class="language-c" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> vb <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>
<span class="token comment">// 指针  常量  指针 </span>
<span class="token comment">// 定义 指向 地址</span>
<span class="token keyword">int</span><span class="token operator">*</span> pa <span class="token operator">=</span> <span class="token operator">&amp;</span>vb<span class="token punctuation">;</span>

cout <span class="token operator">&lt;&lt;</span> pa <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>pa <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;sizeof *pa     &quot;</span> <span class="token operator">&lt;&lt;</span>  <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token operator">*</span>pa<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>

</code></pre></div><h3 id="_1-常量指针-pointer-to-constant" tabindex="-1"><a class="header-anchor" href="#_1-常量指针-pointer-to-constant" aria-hidden="true">#</a> 1. <strong>常量指针（Pointer to Constant）</strong></h3><ul><li><p><strong>含义</strong>：指针指向的值是常量，不能通过指针修改这个值，但指针本身可以指向其他地址。</p></li><li><p><strong>语法</strong>：<code>const int* ptr;</code></p></li><li><p><strong>记忆技巧</strong>：<code>const</code> 在 <code>*</code> 前面，表示指向的值是常量。</p></li><li><p><strong>例子</strong>：</p><div class="language-cpp" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span><span class="token operator">*</span> ptr <span class="token operator">=</span> <span class="token operator">&amp;</span>a<span class="token punctuation">;</span>  <span class="token comment">// ptr 指向 a，a 的值是常量</span>
<span class="token comment">// *ptr = 30;  // 错误！不能通过 ptr 修改 a 的值</span>
ptr <span class="token operator">=</span> <span class="token operator">&amp;</span>b<span class="token punctuation">;</span>      <span class="token comment">// 正确！ptr 可以指向其他地址</span>
</code></pre></div></li></ul><h3 id="_2-指针常量-constant-pointer" tabindex="-1"><a class="header-anchor" href="#_2-指针常量-constant-pointer" aria-hidden="true">#</a> 2. <strong>指针常量（Constant Pointer）</strong></h3><ul><li><p><strong>含义</strong>：指针本身是常量，不能指向其他地址，但可以通过指针修改指向的值。</p></li><li><p><strong>语法</strong>：<code>int* const ptr;</code></p></li><li><p><strong>记忆技巧</strong>：<code>const</code> 在 <code>*</code> 后面，表示指针本身是常量。</p></li><li><p><strong>例子</strong>：</p><div class="language-cpp" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
<span class="token keyword">int</span><span class="token operator">*</span> <span class="token keyword">const</span> ptr <span class="token operator">=</span> <span class="token operator">&amp;</span>a<span class="token punctuation">;</span>  <span class="token comment">// ptr 是常量，只能指向 a</span>
<span class="token operator">*</span>ptr <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>            <span class="token comment">// 正确！可以通过 ptr 修改 a 的值</span>
<span class="token comment">// ptr = &amp;b;          // 错误！ptr 不能指向其他地址</span>
</code></pre></div></li></ul><h3 id="_3-常量指针常量-constant-pointer-to-constant" tabindex="-1"><a class="header-anchor" href="#_3-常量指针常量-constant-pointer-to-constant" aria-hidden="true">#</a> 3. <strong>常量指针常量（Constant Pointer to Constant）</strong></h3><ul><li><p><strong>含义</strong>：指针本身是常量，且指向的值也是常量。</p></li><li><p><strong>语法</strong>：<code>const int* const ptr;</code></p></li><li><p><strong>记忆技巧</strong>：两个 <code>const</code>，一个在 <code>*</code> 前面，一个在 <code>*</code> 后面。</p></li><li><p><strong>例子</strong>：</p><div class="language-cpp" data-ext="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span><span class="token operator">*</span> <span class="token keyword">const</span> ptr <span class="token operator">=</span> <span class="token operator">&amp;</span>a<span class="token punctuation">;</span>  <span class="token comment">// ptr 是常量，且指向的值也是常量</span>
<span class="token comment">// *ptr = 30;               // 错误！不能通过 ptr 修改 a 的值</span>
<span class="token comment">// ptr = &amp;b;                // 错误！ptr 不能指向其他地址</span>
</code></pre></div></li></ul><h3 id="_4-总结对比" tabindex="-1"><a class="header-anchor" href="#_4-总结对比" aria-hidden="true">#</a> 4. <strong>总结对比</strong></h3><table><thead><tr><th><strong>类型</strong></th><th><strong>语法</strong></th><th><strong>指针能否改变</strong></th><th><strong>指向的值能否改变</strong></th></tr></thead><tbody><tr><td>常量指针</td><td><code>const int* ptr;</code></td><td>可以</td><td>不可以</td></tr><tr><td>指针常量</td><td><code>int* const ptr;</code></td><td>不可以</td><td>可以</td></tr><tr><td>常量指针常量</td><td><code>const int* const ptr;</code></td><td>不可以</td><td>不可以</td></tr></tbody></table><h3 id="_5-记忆技巧" tabindex="-1"><a class="header-anchor" href="#_5-记忆技巧" aria-hidden="true">#</a> 5. <strong>记忆技巧</strong></h3><ul><li><strong><code>const</code> 在 <code>*</code> 前面</strong>：指向的值是常量（常量指针）。</li><li><strong><code>const</code> 在 <code>*</code> 后面</strong>：指针本身是常量（指针常量）。</li><li><strong>两个 <code>const</code></strong>：指针和指向的值都是常量（常量指针常量）。</li></ul><h3 id="_6-实际应用场景" tabindex="-1"><a class="header-anchor" href="#_6-实际应用场景" aria-hidden="true">#</a> 6. <strong>实际应用场景</strong></h3><ul><li><strong>常量指针</strong>：当你希望保护数据不被修改时使用。</li><li><strong>指针常量</strong>：当你希望指针固定指向某个地址时使用。</li><li><strong>常量指针常量</strong>：当你既希望指针固定，又希望数据不被修改时使用。</li></ul>`,13),e=[p];function c(r,l){return s(),a("div",null,e)}const i=n(o,[["render",c],["__file","point_a.html.vue"]]);export{i as default};
