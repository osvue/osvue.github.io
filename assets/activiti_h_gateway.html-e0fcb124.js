import{_ as n,p as s,q as a,a1 as t}from"./framework-d81ad7e5.js";const p="/assets/gateway1-90e61710.png",o={},c=t('<h3 id="排他网关-exclusivegateway" tabindex="-1"><a class="header-anchor" href="#排他网关-exclusivegateway" aria-hidden="true">#</a> 排他网关（ExclusiveGateWay）</h3><p><img src="'+p+`" alt="alt"> 说明：</p><ol><li>一个排他网关对应一个以上的顺序流</li><li>由排他网关流出的顺序流都有个<code>conditionExpression</code>元素，在内部维护返回boolean类型的决策结果。</li><li>决策网关只会返回一条结果。当流程执行到排他网关时，流程引擎会自动检索网关出口，从上到下检索如果发现第一条决策结果为true或者没有设置条件的(默认为成立) ，则流出。</li><li>如果没有任何一个出口符合条件，则抛出异常 使用流程变量，设置连线的条件，并按照连线的条件执行工作流，如果没有条件符合的条件，则以默认的连线离开</li></ol><h3 id="并行网关-parallelgateway" tabindex="-1"><a class="header-anchor" href="#并行网关-parallelgateway" aria-hidden="true">#</a> 并行网关(parallelGateWay)</h3><ul><li><strong>说明</strong>：</li></ul><ol><li>一个流程中流程实例只有1个，执行对象有多个</li><li>并行网关的功能是基于进入和外出的顺序流的： 分支(fork)： 并行后的所有外出顺序流，为每个顺序流都创建一个并发分支。 汇聚(join)： 所有到达并行网关，在此等待的进入分支， 直到所有进入顺序流的分支都到达以后， 流程就会通过汇聚网关。</li><li>并行网关的进入和外出都是使用相同节点标识</li><li>如果同一个并行网关有多个进入和多个外出顺序流， 它就同时具有分支和汇聚功能。 这时，网关会先汇聚所有进入的顺序流，然后再切分成多个并行分支。</li><li>并行网关不会解析条件。 即使顺序流中定义了条件，也会被忽略。 并行网关不需要是“平衡的”（比如， 对应并行网关的进入和外出节点数目不一定相等）。如图中标示是合法的：</li></ol><div class="language-java" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ParallelGateWayTest</span> <span class="token punctuation">{</span>

	<span class="token class-name">ProcessEngine</span> processEngine <span class="token operator">=</span> <span class="token class-name">ProcessEngines</span><span class="token punctuation">.</span><span class="token function">getDefaultProcessEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token doc-comment comment">/**部署流程定义（从inputStream）*/</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deploymentProcessDefinition_inputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">InputStream</span> inputStreamBpmn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;parallelGateWay.bpmn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">InputStream</span> inputStreamPng <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;parallelGateWay.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Deployment</span> deployment <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRepositoryService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//与流程定义和部署对象相关的Service</span>
						<span class="token punctuation">.</span><span class="token function">createDeployment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//创建一个部署对象</span>
						<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;并行网关&quot;</span><span class="token punctuation">)</span><span class="token comment">//添加部署的名称</span>
						<span class="token punctuation">.</span><span class="token function">addInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;parallelGateWay.bpmn&quot;</span><span class="token punctuation">,</span> inputStreamBpmn<span class="token punctuation">)</span><span class="token comment">//</span>
						<span class="token punctuation">.</span><span class="token function">addInputStream</span><span class="token punctuation">(</span><span class="token string">&quot;parallelGateWay.png&quot;</span><span class="token punctuation">,</span> inputStreamPng<span class="token punctuation">)</span><span class="token comment">//</span>
						<span class="token punctuation">.</span><span class="token function">deploy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//完成部署</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;部署ID：&quot;</span><span class="token operator">+</span>deployment<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;部署名称：&quot;</span><span class="token operator">+</span>deployment<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//</span>
	<span class="token punctuation">}</span>
	
	<span class="token doc-comment comment">/**启动流程实例*/</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startProcessInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">//流程定义的key</span>
		<span class="token class-name">String</span> processDefinitionKey <span class="token operator">=</span> <span class="token string">&quot;parallelGateWay&quot;</span><span class="token punctuation">;</span>
		<span class="token class-name">ProcessInstance</span> pi <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getRuntimeService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//与正在执行的流程实例和执行对象相关的Service</span>
						<span class="token punctuation">.</span><span class="token function">startProcessInstanceByKey</span><span class="token punctuation">(</span>processDefinitionKey<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//使用流程定义的key启动流程实例，key对应helloworld.bpmn文件中id的属性值，使用key值启动，默认是按照最新版本的流程定义启动</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例ID:&quot;</span><span class="token operator">+</span>pi<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//流程实例ID    101</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义ID:&quot;</span><span class="token operator">+</span>pi<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//流程定义ID   helloworld:1:4</span>
	<span class="token punctuation">}</span>
	
	<span class="token doc-comment comment">/**查询当前人的个人任务*/</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">findMyPersonalTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">String</span> assignee <span class="token operator">=</span> <span class="token string">&quot;商家&quot;</span><span class="token punctuation">;</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Task</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> processEngine<span class="token punctuation">.</span><span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//与正在执行的任务管理相关的Service</span>
						<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//创建任务查询对象</span>
						<span class="token doc-comment comment">/**查询条件（where部分）*/</span>
						<span class="token punctuation">.</span><span class="token function">taskAssignee</span><span class="token punctuation">(</span>assignee<span class="token punctuation">)</span><span class="token comment">//指定个人任务查询，指定办理人</span>
<span class="token comment">//						.taskCandidateUser(candidateUser)//组任务的办理人查询</span>
<span class="token comment">//						.processDefinitionId(processDefinitionId)//使用流程定义ID查询</span>
<span class="token comment">//						.processInstanceId(processInstanceId)//使用流程实例ID查询</span>
<span class="token comment">//						.executionId(executionId)//使用执行对象ID查询</span>
						<span class="token doc-comment comment">/**排序*/</span>
						<span class="token punctuation">.</span><span class="token function">orderByTaskCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//使用创建时间的升序排列</span>
						<span class="token doc-comment comment">/**返回结果集*/</span>
<span class="token comment">//						.singleResult()//返回惟一结果集</span>
<span class="token comment">//						.count()//返回结果集的数量</span>
<span class="token comment">//						.listPage(firstResult, maxResults);//分页查询</span>
						<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回列表</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>list<span class="token operator">!=</span><span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> list<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Task</span> task<span class="token operator">:</span>list<span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务ID:&quot;</span><span class="token operator">+</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务名称:&quot;</span><span class="token operator">+</span>task<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务的创建时间:&quot;</span><span class="token operator">+</span>task<span class="token punctuation">.</span><span class="token function">getCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;任务的办理人:&quot;</span><span class="token operator">+</span>task<span class="token punctuation">.</span><span class="token function">getAssignee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程实例ID：&quot;</span><span class="token operator">+</span>task<span class="token punctuation">.</span><span class="token function">getProcessInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;执行对象ID:&quot;</span><span class="token operator">+</span>task<span class="token punctuation">.</span><span class="token function">getExecutionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;流程定义ID:&quot;</span><span class="token operator">+</span>task<span class="token punctuation">.</span><span class="token function">getProcessDefinitionId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;########################################################&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	
	<span class="token doc-comment comment">/**完成我的任务*/</span>
	<span class="token annotation punctuation">@Test</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">completeMyPersonalTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">//任务ID</span>
		<span class="token class-name">String</span> taskId <span class="token operator">=</span> <span class="token string">&quot;4302&quot;</span><span class="token punctuation">;</span>
		processEngine<span class="token punctuation">.</span><span class="token function">getTaskService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//与正在执行的任务管理相关的Service</span>
					<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span>taskId<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;完成任务：任务ID：&quot;</span><span class="token operator">+</span>taskId<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre></div>`,7),e=[c];function u(l,i){return s(),a("div",null,e)}const r=n(o,[["render",u],["__file","activiti_h_gateway.html.vue"]]);export{r as default};
