import{_ as n,p as a,q as s,a1 as t}from"./framework-d81ad7e5.js";const p={},e=t(`<div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.1.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

</code></pre></div><h3 id="在mybatis核心配置文件中配置插件" tabindex="-1"><a class="header-anchor" href="#在mybatis核心配置文件中配置插件" aria-hidden="true">#</a> 在mybatis核心配置文件中配置插件</h3><div class="language-xml" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">configuration</span>
        <span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span>
        <span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 配置分页插件 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span> <span class="token attr-name">interceptor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.github.pagehelper.PageHelper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
 <span class="token comment">&lt;!-- 设置数据库类型 Oracle,Mysql,MariaDB,SQLite,Hsqldb,PostgreSQL六种数据库--&gt;</span>        
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>dialect<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>mysql<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="编写业务逻辑代码" tabindex="-1"><a class="header-anchor" href="#编写业务逻辑代码" aria-hidden="true">#</a> 编写业务逻辑代码</h3><blockquote><p>使用pagehelper非常的简单，只需要在你想要分页的查询逻辑前添加一行代码即可，代码：</p></blockquote><ul><li><p>[ ] PageHelper.startPage(pageNum, pageSize);</p></li><li><p>[ ] pageNum：页数（第几页）</p></li><li><p>[ ] pageSize：每页的数据行数</p></li><li><p>[ ] PageInfo &lt; UserLinkInfoResp &gt; page = new PageInfo &lt; &gt;(userLinkInfoRespList);</p></li><li><p>PageInfo其实是pagehelper 封装的一个类，里面有一些 分页表常用的属性</p><p>pageNum：当前为第几页</p><p>pageSize：每页的数据行数</p><p>startRow：当前页数据从第几条开始</p><p>endRow：当前页数据从第几条结束</p><p>pages：总页数</p><p>prePage：上一页页数</p><p>nextPage：下一页页数</p><p>hasPreviousPage：是否有上一页</p><p>hasNextPage：是否有下一页</p><p>navigatepageNums：所有页码的数组</p></li></ul><div class="language-java" data-ext="java"><pre class="language-java"><code> <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//分页处理，显示第一页的5条数据</span>
            <span class="token class-name">PageHelper</span><span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Country</span><span class="token punctuation">&gt;</span></span> countryList<span class="token operator">=</span>session<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span><span class="token string">&quot;selectAll&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            countryList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 取分页信息</span>
            <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Country</span><span class="token punctuation">&gt;</span></span> pageInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Country</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>countryList<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">long</span> total <span class="token operator">=</span> pageInfo<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//获取总记录数</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
            <span class="token comment">//关闭session</span>
            session<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

</code></pre></div><h3 id="spring-boot-配置pagehelper方言" tabindex="-1"><a class="header-anchor" href="#spring-boot-配置pagehelper方言" aria-hidden="true">#</a> spring boot 配置PageHelper方言</h3><blockquote><p>在项目配置文件application.properties配置pagehelper方言为mysql</p></blockquote><blockquote><p>pagehelper.helper-dialect=mysql</p></blockquote><h4 id="controller" tabindex="-1"><a class="header-anchor" href="#controller" aria-hidden="true">#</a> controller</h4><div class="language-java" data-ext="java"><pre class="language-java"><code>	<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/list&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token class-name">String</span> list <span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">&quot;asc&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> order<span class="token punctuation">,</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token keyword">int</span> offset<span class="token punctuation">,</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>defaultValue <span class="token operator">=</span> <span class="token string">&quot;10&quot;</span><span class="token punctuation">)</span><span class="token keyword">int</span> limit<span class="token punctuation">,</span><span class="token class-name">Model</span> model<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Account</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> accSrv<span class="token punctuation">.</span><span class="token function">findAllByPage</span><span class="token punctuation">(</span>offset<span class="token punctuation">,</span>limit<span class="token punctuation">,</span>order<span class="token punctuation">)</span><span class="token punctuation">;</span>
		model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">,</span> page<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token string">&quot;list&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>


	<span class="token keyword">public</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Account</span><span class="token punctuation">&gt;</span></span> <span class="token function">findAllByPage</span><span class="token punctuation">(</span><span class="token keyword">int</span> offset<span class="token punctuation">,</span> <span class="token keyword">int</span> limit<span class="token punctuation">,</span> <span class="token class-name">String</span> order<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		
		<span class="token class-name">PageHelper</span><span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span>offset<span class="token punctuation">,</span> limit<span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		<span class="token class-name">AccountExample</span> example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AccountExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		example<span class="token punctuation">.</span><span class="token function">setOrderByClause</span><span class="token punctuation">(</span><span class="token string">&quot;id &quot;</span> <span class="token operator">+</span> order<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Account</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example <span class="token punctuation">)</span><span class="token punctuation">;</span>
		
		
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Account</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre></div><h2 id="pagehelper-源码-threadlocal" tabindex="-1"><a class="header-anchor" href="#pagehelper-源码-threadlocal" aria-hidden="true">#</a> pagehelper 源码（ThreadLocal）</h2><ul><li><p>PageHelper会使用ThreadLocal获取到同一线程中的变量信息，各个线程之间的Threadlocal不会相互干扰，</p></li><li><p>也就是Thread1中的ThreadLocal1之后获取到Tread1中的变量的信息，不会获取到Thread2中的信息所以在多线程环境下，</p></li><li><p>各个Threadlocal之间相互隔离，可以实现，不同thread使用不同的数据源或不同的Thread中执行不同的SQL语句，</p></li><li><p>所以，PageHelper利用这一点通过拦截器获取到同一线程中的预编译好的SQL语句之后将SQL语句包装成具有分页功能的SQL语句，</p></li><li><p>并将其再次赋值给下一步操作，所以实际执行的SQL语句就是有了分页功能的SQL语句。</p></li><li><p>源码：找到startPage代码：</p></li></ul><div class="language-java" data-ext="java"><pre class="language-java"><code>	 <span class="token keyword">public</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TsysTables</span><span class="token punctuation">&gt;</span></span> <span class="token function">list</span><span class="token punctuation">(</span><span class="token class-name">Tablepar</span> tablepar<span class="token punctuation">,</span><span class="token class-name">String</span> searchText<span class="token punctuation">)</span><span class="token punctuation">{</span>
		 	<span class="token class-name">PageHelper</span><span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span>tablepar<span class="token punctuation">.</span><span class="token function">getPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tablepar<span class="token punctuation">.</span><span class="token function">getLimit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		 	<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TsysTables</span><span class="token punctuation">&gt;</span></span> list<span class="token operator">=</span>  generatorMapper<span class="token punctuation">.</span><span class="token function">queryList</span><span class="token punctuation">(</span>searchText<span class="token punctuation">)</span><span class="token punctuation">;</span>
		    <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TsysTables</span><span class="token punctuation">&gt;</span></span> pageInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TsysTables</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
		    <span class="token keyword">return</span> pageInfo<span class="token punctuation">;</span>
	 <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> <span class="token function">startPage</span><span class="token punctuation">(</span><span class="token keyword">int</span> pageNum<span class="token punctuation">,</span> <span class="token keyword">int</span> pageSize<span class="token punctuation">,</span> <span class="token keyword">boolean</span> count<span class="token punctuation">,</span> <span class="token class-name">Boolean</span> reasonable<span class="token punctuation">,</span> <span class="token class-name">Boolean</span> pageSizeZero<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token punctuation">(</span>pageNum<span class="token punctuation">,</span> pageSize<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>
        page<span class="token punctuation">.</span><span class="token function">setReasonable</span><span class="token punctuation">(</span>reasonable<span class="token punctuation">)</span><span class="token punctuation">;</span>
        page<span class="token punctuation">.</span><span class="token function">setPageSizeZero</span><span class="token punctuation">(</span>pageSizeZero<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">E</span><span class="token punctuation">&gt;</span></span> oldPage <span class="token operator">=</span> <span class="token function">getLocalPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>oldPage <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> oldPage<span class="token punctuation">.</span><span class="token function">isOrderByOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            page<span class="token punctuation">.</span><span class="token function">setOrderBy</span><span class="token punctuation">(</span>oldPage<span class="token punctuation">.</span><span class="token function">getOrderBy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">setLocalPage</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> page<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

</code></pre></div><ul><li>这里重要的代码： <strong>setLocalPage(page)</strong></li></ul><div class="language-java" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">PageMethod</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Page</span><span class="token punctuation">&gt;</span></span> <span class="token constant">LOCAL_PAGE</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadLocal</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Page</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token constant">DEFAULT_COUNT</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
 
    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">setLocalPage</span><span class="token punctuation">(</span><span class="token class-name">Page</span> page<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token constant">LOCAL_PAGE</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
 
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">getLocalPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token constant">LOCAL_PAGE</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li>所以PageHelper就是使用<strong>ThreadLocal</strong>存储了Page对象，在这个对象中有我们设置的pageNum、pageSize，也会查询返回的pages、total</li></ul><h4 id="json相关操作" tabindex="-1"><a class="header-anchor" href="#json相关操作" aria-hidden="true">#</a> JSON相关操作</h4><h5 id="对象转字符串" tabindex="-1"><a class="header-anchor" href="#对象转字符串" aria-hidden="true">#</a> 对象转字符串</h5><p>JSON.stringify(data)</p><h5 id="字符串转对象" tabindex="-1"><a class="header-anchor" href="#字符串转对象" aria-hidden="true">#</a> 字符串转对象</h5><p>JSON.parse(jsonBook);</p><h2 id="常见错误" tabindex="-1"><a class="header-anchor" href="#常见错误" aria-hidden="true">#</a> 常见错误</h2><h5 id="the-alias-generatedcriteria-is-already-mapped-to-the-value" tabindex="-1"><a class="header-anchor" href="#the-alias-generatedcriteria-is-already-mapped-to-the-value" aria-hidden="true">#</a> The alias &#39;GeneratedCriteria&#39; is already mapped to the value</h5><p>由<strong>mybatis.type-aliases-package=com.osvue.springboot.mapper</strong>引起</p><p>解决方法：把实体类和Example分开放</p>`,27),o=[e];function c(l,u){return a(),s("div",null,o)}const k=n(p,[["render",c],["__file","mybatis_c_limit.html.vue"]]);export{k as default};
