import{_ as l,p as i,q as r,a1 as t}from"./framework-d81ad7e5.js";const e={},a=t('<h3 id="mq-消息丢失问题" tabindex="-1"><a class="header-anchor" href="#mq-消息丢失问题" aria-hidden="true">#</a> MQ 消息丢失问题</h3><ul><li>引入 <strong>MQ 消息中间件实现系统解耦，会影响系统之间数据传输的一致性</strong>。 <ul><li>在分布式系统中，如果两个节点之间存在数据同步，就会带来数据一致性的问题。</li><li>要解决的就是：消息生产端和消息消费端的消息数据一致性问题（也就是如何确保消息不丢失）。</li></ul></li></ul><ul><li><p>如何知道有消息丢失？</p></li><li><p>哪些环节可能丢消息？</p></li><li><p>如何确保消息不丢失？</p></li><li><p>先让面试官知道你的<strong>分析思路</strong>，然后再提供解决方案 ：</p><ul><li>网络中的数据传输不可靠，想要解决如何不丢消息的问题，首先要知道<strong>哪些环节可能丢消息</strong>，以及我们<strong>如何知道消息是否丢失了</strong>，最后才是<strong>解决方案</strong>（而不是上来就直接说自己的解决方案）。</li><li>就好比“ <strong>架构设计</strong>” “架构”体现了架构师的思考过程，而 <strong>“设计”</strong> 才是最后的解决方案，两者缺一不可。</li></ul></li></ul><h4 id="消息丢失的环节" tabindex="-1"><a class="header-anchor" href="#消息丢失的环节" aria-hidden="true">#</a> 消息丢失的环节</h4><p>消息丢失的环节，一条消息从生产到消费完成这个过程，可以划分三个阶段，分别为</p><ol><li>消息生产阶段</li></ol><ul><li><strong>消息生产阶段</strong>： <ul><li>从消息被生产出来，然后提交给 MQ 的过程中，只要能正常收到 MQ Broker 的 ack 确认响应，就表示发送成功，所以只要处理好返回值和异常，这个阶段是不会出现消息丢失的。</li></ul></li></ul><ol start="2"><li>消息存储阶段</li></ol><ul><li><strong>消息存储阶段</strong>： <ul><li>这个阶段一般会直接交给 MQ 消息中间件来保证，但是你要了解它的原理，比如 Broker 会做副本，保证一条消息至少同步两个节点再返回 ack。</li></ul></li></ul><ol start="3"><li>消息消费阶段</li></ol><ul><li><strong>消息消费阶段</strong>： <ul><li>消费端从 Broker 上拉取消息，只要消费端在收到消息后，不立即发送消费确认给 Broker，而是等到执行完业务逻辑后，再发送消费确认，也能保证消息的不丢失。</li></ul></li></ul><h3 id="mq-消息重复问题" tabindex="-1"><a class="header-anchor" href="#mq-消息重复问题" aria-hidden="true">#</a> MQ 消息重复问题</h3><ul><li>换一种说法，就是如何解决消费端幂等性问题（幂等性，就是一条命令，任意多次执行所产生的影响均与一次执行的影响相同），</li><li>只要消费端具备了幂等性，那么重复消费消息的问题也就解决了</li></ul><h3 id="mq-消息积压问题" tabindex="-1"><a class="header-anchor" href="#mq-消息积压问题" aria-hidden="true">#</a> MQ 消息积压问题</h3><ul><li>引入 <strong>MQ 消息中间件解决流量控制 ， 会使消费端处理能力不足从而导致消息积压</strong>，</li></ul><p>这道题的考点就是如何通过 MQ 实现真正的高性能，回答的思路是，本着解决线上异常为最高优先级，然后通过监控和日志进行排查并优化业务逻辑，最后是扩容消费端和分片的数量。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ul><li>在回答问题的时候，你需要特别注意的是，让面试官了解到你的<strong>思维过程</strong>，这种<strong>解决问题的能力</strong>是面试官更为看中的，比你直接回答一道面试题更有价值。</li></ul>',18),n=[a];function o(s,u){return i(),r("div",null,n)}const d=l(e,[["render",o],["__file","index.html.vue"]]);export{d as default};
