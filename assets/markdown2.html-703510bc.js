import{_ as o,M as i,p,q as l,R as n,t as a,N as s,a1 as e}from"./framework-d81ad7e5.js";const c={},r=e(`<h1 id="markdown-demo" tabindex="-1"><a class="header-anchor" href="#markdown-demo" aria-hidden="true">#</a> Markdown Demo</h1><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.5.1/katex.min.css"><link rel="stylesheet" href="https://cdn.jsdelivr.net/github-markdown-css/2.2.1/github-markdown.css"><h2 id="行编辑" tabindex="-1"><a class="header-anchor" href="#行编辑" aria-hidden="true">#</a> 行编辑</h2><div class="language-markdown" data-ext="md"><pre class="language-markdown"><code><span class="token list punctuation">+</span> Create a list by starting a line with <span class="token code-snippet code keyword">\`+\`</span>, <span class="token code-snippet code keyword">\`-\`</span>, or <span class="token code-snippet code keyword">\`*\`</span>
<span class="token list punctuation">+</span> Sub-lists are made by indenting 2 spaces:
  <span class="token list punctuation">-</span> Marker character change forces new list start:
    <span class="token list punctuation">*</span> Ac tristique libero volutpat at
    <span class="token list punctuation">+</span> Facilisis in pretium nisl aliquet
    <span class="token list punctuation">-</span> Nulla volutpat aliquam velit
<span class="token list punctuation">+</span> Very easy!
</code></pre></div><h3 id="实际显示" tabindex="-1"><a class="header-anchor" href="#实际显示" aria-hidden="true">#</a> 实际显示</h3><ul><li>Create a list by starting a line with <code>+</code>, <code>-</code>, or <code>*</code></li><li>Sub-lists are made by indenting 2 spaces: <ul><li>Marker character change forces new list start: <ul><li>Ac tristique libero volutpat at</li></ul><ul><li>Facilisis in pretium nisl aliquet</li></ul><ul><li>Nulla volutpat aliquam velit</li></ul></li></ul></li><li>Very easy!</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">bar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> bar<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="插入链接" tabindex="-1"><a class="header-anchor" href="#插入链接" aria-hidden="true">#</a> 插入链接</h2><div class="language-markdown" data-ext="md"><pre class="language-markdown"><code><span class="token url">[<span class="token content">链接文字</span>](<span class="token url">链接网址</span> <span class="token string">&quot;标题&quot;</span>)</span>
</code></pre></div><div class="language-php" data-ext="php"><pre class="language-php"><code>当知道 <span class="token punctuation">[</span>搜狗<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> 可以搜索微信和知乎时，我慢慢爱上了 <span class="token punctuation">[</span>搜狗<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>。学术搜索还是用 <span class="token punctuation">[</span>Google<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> 靠谱。也会用 <span class="token punctuation">[</span>Bing<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> 和 <span class="token punctuation">[</span>百度<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>，毕竟各有所长。

<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span><span class="token comment">//www.google.com/ &quot;Google&quot;</span>
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span><span class="token comment">//www.sogou.com/ &quot;Sogou&quot;</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span><span class="token comment">//www.baidu.com/ &quot;Baidu Search&quot;</span>
<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span><span class="token comment">//cn.bing.com/ &quot;Bing Search&quot;</span>
</code></pre></div>`,11),u=n("strong",null,"实际显示",-1),d={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fwww.sogou.com%2F",target:"_blank",rel:"noopener noreferrer"},h={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fwww.sogou.com%2F",target:"_blank",rel:"noopener noreferrer"},k={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fwww.google.com%2F",target:"_blank",rel:"noopener noreferrer"},g={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fcn.bing.com%2F",target:"_blank",rel:"noopener noreferrer"},m={href:"https://links.jianshu.com/go?to=https%3A%2F%2Fwww.baidu.com%2F",target:"_blank",rel:"noopener noreferrer"},b=e(`<h1 id="h1-heading" tabindex="-1"><a class="header-anchor" href="#h1-heading" aria-hidden="true">#</a> h1 Heading 😎</h1><h2 id="h2-heading" tabindex="-1"><a class="header-anchor" href="#h2-heading" aria-hidden="true">#</a> h2 Heading</h2><h3 id="h3-heading" tabindex="-1"><a class="header-anchor" href="#h3-heading" aria-hidden="true">#</a> h3 Heading</h3><h4 id="h4-heading" tabindex="-1"><a class="header-anchor" href="#h4-heading" aria-hidden="true">#</a> h4 Heading</h4><h5 id="h5-heading" tabindex="-1"><a class="header-anchor" href="#h5-heading" aria-hidden="true">#</a> h5 Heading</h5><h6 id="h6-heading" tabindex="-1"><a class="header-anchor" href="#h6-heading" aria-hidden="true">#</a> h6 Heading</h6><h2 id="horizontal-rules" tabindex="-1"><a class="header-anchor" href="#horizontal-rules" aria-hidden="true">#</a> Horizontal Rules</h2><hr><hr><hr><h2 id="typographic-replacements" tabindex="-1"><a class="header-anchor" href="#typographic-replacements" aria-hidden="true">#</a> Typographic replacements</h2><p>Enable typographer option to see result.</p><p>(c) (C) (r) (R) (tm) (TM) (p) (P) +-</p><p>test.. test... test..... test?..... test!....</p><p>!!!!!! ???? ,, -- ---</p><p>&quot;Smartypants, double quotes&quot; and &#39;single quotes&#39;</p><h2 id="emphasis" tabindex="-1"><a class="header-anchor" href="#emphasis" aria-hidden="true">#</a> Emphasis</h2><p><strong>This is bold text</strong></p><p><strong>This is bold text</strong></p><p><em>This is italic text</em></p><p><em>This is italic text</em></p><p><s>Strikethrough</s></p><h2 id="blockquotes" tabindex="-1"><a class="header-anchor" href="#blockquotes" aria-hidden="true">#</a> Blockquotes</h2><blockquote><p>Blockquotes can also be nested...</p><blockquote><p>...by using additional greater-than signs right next to each other...</p><blockquote><p>...or with spaces between arrows.</p></blockquote></blockquote></blockquote><h2 id="lists" tabindex="-1"><a class="header-anchor" href="#lists" aria-hidden="true">#</a> Lists</h2><p>Unordered</p><ul><li>Create a list by starting a line with <code>+</code>, <code>-</code>, or <code>*</code></li><li>Sub-lists are made by indenting 2 spaces: <ul><li>Marker character change forces new list start: <ul><li>Ac tristique libero volutpat at</li></ul><ul><li>Facilisis in pretium nisl aliquet</li></ul><ul><li>Nulla volutpat aliquam velit</li></ul></li></ul></li><li>Very easy!</li></ul><p>Ordered</p><ol><li><p>Lorem ipsum dolor sit amet</p></li><li><p>Consectetur adipiscing elit</p></li><li><p>Integer molestie lorem at massa</p></li><li><p>You can use sequential numbers...</p></li><li><p>...or keep all the numbers as <code>1.</code></p></li></ol><p>Start numbering with offset:</p><ol start="57"><li>foo</li><li>bar</li></ol><h2 id="code" tabindex="-1"><a class="header-anchor" href="#code" aria-hidden="true">#</a> Code</h2><p>Inline <code>code</code></p><p>Indented code</p><pre><code>// Some comments
line 1 of code
line 2 of code
line 3 of code
</code></pre><p>Block code &quot;fences&quot;</p><div class="language-text" data-ext="text"><pre class="language-text"><code>Sample text here...
</code></pre></div><p>Syntax highlighting</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">bar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> bar<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="tables" tabindex="-1"><a class="header-anchor" href="#tables" aria-hidden="true">#</a> Tables</h2><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td>data</td><td>path to data files to supply the data that will be passed into templates.</td></tr><tr><td>engine</td><td>engine to be used for processing templates. Handlebars is the default.</td></tr><tr><td>ext</td><td>extension to be used for dest files.</td></tr></tbody></table><p>Right aligned columns</p><table><thead><tr><th style="text-align:right;">Option</th><th style="text-align:right;">Description</th></tr></thead><tbody><tr><td style="text-align:right;">data</td><td style="text-align:right;">path to data files to supply the data that will be passed into templates.</td></tr><tr><td style="text-align:right;">engine</td><td style="text-align:right;">engine to be used for processing templates. Handlebars is the default.</td></tr><tr><td style="text-align:right;">ext</td><td style="text-align:right;">extension to be used for dest files.</td></tr></tbody></table><h2 id="links" tabindex="-1"><a class="header-anchor" href="#links" aria-hidden="true">#</a> Links</h2>`,44),f={href:"http://dev.nodeca.com",target:"_blank",rel:"noopener noreferrer"},x={href:"http://nodeca.github.io/pica/demo/",title:"title text!",target:"_blank",rel:"noopener noreferrer"},w=e('<p>Autoconverted link https://github.com/nodeca/pica (enable linkify to see)</p><h2 id="images" tabindex="-1"><a class="header-anchor" href="#images" aria-hidden="true">#</a> Images</h2><p><img src="https://octodex.github.com/images/minion.png" alt="Minion"><img src="https://octodex.github.com/images/stormtroopocat.jpg" alt="Stormtroopocat" title="The Stormtroopocat"></p><p>Like links, Images also have a footnote style syntax</p><p><img src="https://octodex.github.com/images/dojocat.jpg" alt="Alt text" title="The Dojocat"></p><p>With a reference later in the document defining the URL location:</p>',6);function y(_,q){const t=i("ExternalLinkIcon");return p(),l("div",null,[r,n("p",null,[u,a(": 当知道 "),n("a",d,[a("搜狗"),s(t)]),a(" 可以搜索微信和知乎时，我慢慢爱上了 "),n("a",h,[a("搜狗"),s(t)]),a("。学术搜索还是用 "),n("a",k,[a("Google"),s(t)]),a(" 靠谱。也会用 "),n("a",g,[a("Bing"),s(t)]),a(" 和 "),n("a",m,[a("百度"),s(t)]),a("，毕竟各有所长。")]),b,n("p",null,[n("a",f,[a("link text"),s(t)])]),n("p",null,[n("a",x,[a("link with title"),s(t)])]),w])}const j=o(c,[["render",y],["__file","markdown2.html.vue"]]);export{j as default};
