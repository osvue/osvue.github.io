import{_ as a,p as e,q as t,a1 as s}from"./framework-d81ad7e5.js";const r={},i=s('<ul><li>axios.get不能用@RequestBody获取，能用@RequestParam获取。</li><li>axios.post 可以用@RequestBody获取且不需要qs.stringify序列化，直接传对象就可以了。</li><li>post请求后台用@RequestParam()获取的时候，前端需要用qs.stringify序列化所传递的参数</li></ul><p>复杂参数接收,功能实现; 单个参数就写个属性 有角标数组的就写个集合; 参数用对象的就 在对象中再建立一个对象;</p><h3 id="data-是作为请求主体被发送的数据" tabindex="-1"><a class="header-anchor" href="#data-是作为请求主体被发送的数据" aria-hidden="true">#</a> <code>data</code> 是作为请求主体被发送的数据</h3><h3 id="params-是即将与请求一起发送的-url-参数" tabindex="-1"><a class="header-anchor" href="#params-是即将与请求一起发送的-url-参数" aria-hidden="true">#</a> <code>params</code> 是即将与请求一起发送的 URL 参数</h3>',4),o=[i];function d(c,l){return e(),t("div",null,o)}const h=a(r,[["render",d],["__file","axiosb.html.vue"]]);export{h as default};
