import{_ as a,p as n,q as s,a1 as e}from"./framework-d81ad7e5.js";const t={},l=e(`<h2 id="flex-布局原理" tabindex="-1"><a class="header-anchor" href="#flex-布局原理" aria-hidden="true">#</a> flex 布局原理</h2><h4 id="flex布局原理就是-给父盒子添加flex属性-来控制子盒子的位置排-列方式从而实现flex布局" tabindex="-1"><a class="header-anchor" href="#flex布局原理就是-给父盒子添加flex属性-来控制子盒子的位置排-列方式从而实现flex布局" aria-hidden="true">#</a> Flex布局原理就是：给父盒子添加flex属性，来控制子盒子的位置排 列方式从而实现flex布局</h4><h4 id="当我们为父盒子设为-flex-布局以后-子元素的-float、clear-和-vertical-align-属性将失效。" tabindex="-1"><a class="header-anchor" href="#当我们为父盒子设为-flex-布局以后-子元素的-float、clear-和-vertical-align-属性将失效。" aria-hidden="true">#</a> 当我们为父盒子设为 flex 布局以后，子元素的 float、clear 和 vertical-align 属性将失效。</h4><h4 id="flex布局又叫伸缩布局、弹性布局、伸缩盒布局、弹性盒布局、flex-布局" tabindex="-1"><a class="header-anchor" href="#flex布局又叫伸缩布局、弹性布局、伸缩盒布局、弹性盒布局、flex-布局" aria-hidden="true">#</a> Flex布局又叫伸缩布局、弹性布局、伸缩盒布局、弹性盒布局、flex 布局</h4><hr><h2 id="flex-布局父项常见属性" tabindex="-1"><a class="header-anchor" href="#flex-布局父项常见属性" aria-hidden="true">#</a> flex 布局父项常见属性</h2><h3 id="改变主轴方向可通过设置flex-direction来改变" tabindex="-1"><a class="header-anchor" href="#改变主轴方向可通过设置flex-direction来改变" aria-hidden="true">#</a> 改变主轴方向可通过设置flex-direction来改变</h3><p>row（默认值）：主轴为水平方向，起点在左端。 row-reverse：主轴为水平方向，起点在右端。 column：主轴为垂直方向，起点在上沿。 column-reverse：主轴为垂直方向，起点在下沿。</p><hr><ul><li>Flex布局中默认的主轴是row，x轴</li><li>如果想改变主轴方向可通过设置flex-direction来改变</li><li>flex-direction:column;将主轴改为y轴，纵轴</li><li>flex-direction:row; 将主轴改为x轴，横轴</li><li>flex-direction:row- reverse;主轴为x轴，并且翻转</li><li>flex-direction:column- reverse;主轴为y轴，并且翻转</li></ul><h3 id="justify-content设置主轴子元素排列" tabindex="-1"><a class="header-anchor" href="#justify-content设置主轴子元素排列" aria-hidden="true">#</a> justify-content设置主轴子元素排列</h3><ul><li>通过justify-content能够设置主轴子元素排列形式</li><li>值为flex-start 所有子元素在主轴头部显示</li><li>值为flex-end 所有子元素在主轴尾部显示</li><li>值为flex-center 所有子元素在主轴居中对齐</li><li>值为space-around 所有子元素平分剩余空间</li><li>值为space-between 所有子元素先两边贴边在平分剩余空间</li></ul><h3 id="flex-wrap子元素是否换行" tabindex="-1"><a class="header-anchor" href="#flex-wrap子元素是否换行" aria-hidden="true">#</a> flex-wrap子元素是否换行</h3><ul><li>它可能取三个值。 （1）nowrap（默认）：不换行。 （2）wrap：换行，第一行在上方。 （3）wrap-reverse：换行，第一行在下方。</li></ul><ul><li>如果想要换行效果设置flex-wrap：wrap</li></ul><h3 id="align-items设置侧轴子元素排列" tabindex="-1"><a class="header-anchor" href="#align-items设置侧轴子元素排列" aria-hidden="true">#</a> align-items设置侧轴子元素排列</h3><ul><li>利用align-items能够设置侧轴元素对齐的方式在子项为单项（单行） 的时候使用</li><li>align-items的值为flex-start 表示从头开始</li><li>align-items的值为flex-end 表示从结尾开始</li><li>align-items的值为center 表示居中显示</li><li>align-items的值为stretch 会将子元素拉伸</li></ul><h3 id="align-content设置侧轴子元素排列" tabindex="-1"><a class="header-anchor" href="#align-content设置侧轴子元素排列" aria-hidden="true">#</a> align-content设置侧轴子元素排列</h3><ul><li><p>Align-content适应于换行（多行）的情况下（单行情况下无效）， 可以设置 上对齐、 下对齐、居中、拉伸以及平均分配剩余空间等属 性值</p></li><li><p>Align-item和align-content的区别单行找 align-items 多行找 align-content</p></li></ul><h3 id="flex-flow-就是flex-direction和flex-wrap的合写" tabindex="-1"><a class="header-anchor" href="#flex-flow-就是flex-direction和flex-wrap的合写" aria-hidden="true">#</a> flex-flow 就是flex-direction和flex-wrap的合写</h3><h2 id="flex-布局子项常见属性" tabindex="-1"><a class="header-anchor" href="#flex-布局子项常见属性" aria-hidden="true">#</a> flex 布局子项常见属性</h2><ul><li>order</li><li>flex-grow</li><li>flex-shrink</li><li>flex-basis</li><li>flex</li><li>align-self</li></ul><h3 id="flex用来设置分配剩余空间的比列的" tabindex="-1"><a class="header-anchor" href="#flex用来设置分配剩余空间的比列的" aria-hidden="true">#</a> flex用来设置分配剩余空间的比列的</h3><h3 id="flex-可以使用-百分比-来进行-标识-flex-20-配合换行元素-flex-wrap" tabindex="-1"><a class="header-anchor" href="#flex-可以使用-百分比-来进行-标识-flex-20-配合换行元素-flex-wrap" aria-hidden="true">#</a> flex 可以使用 百分比 来进行 标识 flex:20% (配合换行元素 flex-wrap)</h3><ul><li>剩余空间是指父盒子的宽度减去没有设置flex的盒子的宽度</li><li>在将剩余空间按占比分配给各个子盒子</li><li>比列计算：当前子盒子的flex数值/所有flex的总和</li></ul><h4 id="使用-flex-完成圣杯布局" tabindex="-1"><a class="header-anchor" href="#使用-flex-完成圣杯布局" aria-hidden="true">#</a> 使用 flex 完成圣杯布局</h4><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">.app</span> <span class="token punctuation">{</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span>
        <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">.ac</span> <span class="token punctuation">{</span>
        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
        <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span>
        <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token comment">/* 子类选择器  nth-child */</span>
    <span class="token selector">div span:nth-child(2)</span> <span class="token punctuation">{</span>
        <span class="token property">flex</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> #f2f2ff<span class="token punctuation">;</span>
        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
        
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ac<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 200 px<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ac<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>圣杯布局<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ac<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>333<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="align-self-控制子项目自己在侧轴上的排列方式" tabindex="-1"><a class="header-anchor" href="#align-self-控制子项目自己在侧轴上的排列方式" aria-hidden="true">#</a> align-self 控制子项目自己在侧轴上的排列方式;</h4><ul><li>flex-end</li><li>flex-start</li></ul><h4 id="order-排列顺序-默认为0" tabindex="-1"><a class="header-anchor" href="#order-排列顺序-默认为0" aria-hidden="true">#</a> order 排列顺序 默认为0</h4><ul><li>order: -1;</li></ul><h2 id="flex-grow属性" tabindex="-1"><a class="header-anchor" href="#flex-grow属性" aria-hidden="true">#</a> flex-grow属性</h2><p>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</p><div class="language-css" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-grow</span><span class="token punctuation">:</span> &lt;number&gt;<span class="token punctuation">;</span> <span class="token comment">/* default 0 */</span>
<span class="token punctuation">}</span>
</code></pre></div><blockquote><p>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p></blockquote><h3 id="flex-shrink属性" tabindex="-1"><a class="header-anchor" href="#flex-shrink属性" aria-hidden="true">#</a> flex-shrink属性</h3><p>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p><div class="language-css" data-ext="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span>
  <span class="token property">flex-shrink</span><span class="token punctuation">:</span> &lt;number&gt;<span class="token punctuation">;</span> <span class="token comment">/* default 1 */</span>
<span class="token punctuation">}</span>
</code></pre></div><blockquote><p>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。 负值对该属性无效。</p></blockquote><object data="/images/flexbox.pdf" type="application/pdf" width="700px" height="700px"><!-- &lt;embed src=&quot;/images/flexbox.pdf&quot;&gt; 
     This browser does not support PDFs. Please download the PDF to view it: &lt;a href=&quot;/images/flexbox.pdf&quot;&gt;Download PDF&lt;/a&gt;
    &lt;/embed&gt;  --></object><h4 id="容器-父元素" tabindex="-1"><a class="header-anchor" href="#容器-父元素" aria-hidden="true">#</a> 容器 父元素</h4><ul><li><p>容器的布局方向</p></li><li><p>容器的排列方向</p></li><li><p><strong>flex-direction</strong> 控制主轴是哪一根，控制主轴的方向 row; 从左往右的x轴 row-reverse;从右往左的x轴 column; 从上往下的y轴 column-reverse;从下往上的y轴</p></li><li><p><strong>富裕空间的管理</strong> 只决定富裕空间的位置，不会给项目区分配空间 主轴</p></li><li><p><strong>justify-content</strong> flex-start： 在主轴的正方向 flex-end: 在主轴的反方向 center： 在两边 space-between： 在项目之间 space-around： 在项目两边</p><pre><code>  侧轴
</code></pre></li><li><p><strong>align-items</strong> flex-start：在侧轴的正方向 flex-end： 在侧轴的反方向 center： 在两边 base#ne 基线对齐 stretch 等高布局（项目没有高度）</p></li></ul><h3 id="项目-子元素" tabindex="-1"><a class="header-anchor" href="#项目-子元素" aria-hidden="true">#</a> 项目 子元素</h3><pre><code>弹性空间管理
    flex-grow：弹性因子（默认值为0）
</code></pre><h3 id="新增特性" tabindex="-1"><a class="header-anchor" href="#新增特性" aria-hidden="true">#</a> 新增特性</h3><ul><li><strong>容器</strong> flex-wrap：控制的是侧轴的方向 nowrap 不换行 wrap 侧轴方向由上而下 （flex-shrink失效） wrap-reverse 侧轴方向由下而上 （flex-shrink失效）</li></ul><p>align-content：多行/列时侧轴富裕空间的管理（把多行/列看成一个整体）</p><p>flex-flow：flex-direction和flex-wrap的简写属性 本质上控制了主轴和侧轴分别是哪一根，以及他们的方向</p><ul><li><p><strong>项目</strong><code>order</code>：控制项目的排列顺序 <code>align-self</code>：项目自身富裕空间的管理 <code>flex-shrink</code>：收缩因子（默认值为1） <code>flex-basis</code>：伸缩规则计算的基准值（默认拿width或height的值）</p></li><li><p><strong>侧轴富裕空间的管理</strong> 单行单列 <code>align-items</code><code>align-self</code>（优先级高） 多行多列 <code>align-content</code></p></li><li><p><strong>flex的简写属性</strong><code>flex:1 (flex-basis:0% flex-grow:1 flex-shrink:1)</code> 等分布局</p></li></ul>`,49),p=[l];function o(c,i){return n(),s("div",null,p)}const u=a(t,[["render",o],["__file","sid_flex1.html.vue"]]);export{u as default};
