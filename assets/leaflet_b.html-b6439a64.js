import{_ as n,p as s,q as a,a1 as t}from"./framework-d81ad7e5.js";const p={},o=t(`<h3 id="leaflet创建图层的方式" tabindex="-1"><a class="header-anchor" href="#leaflet创建图层的方式" aria-hidden="true">#</a> Leaflet创建图层的方式</h3><p>主要使用的是栅格图层和GeoJson图层这两种图层</p><ul><li>在栅格图层里使用的是<code>TileLayer.WMS</code></li></ul><h3 id="tilelayer-wms的使用" tabindex="-1"><a class="header-anchor" href="#tilelayer-wms的使用" aria-hidden="true">#</a> TileLayer.WMS的使用</h3><p>官方文档里给我们介绍,这个方法有两个参数,第一个是路径,第二个是参数设置</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code> <span class="token constant">L</span><span class="token punctuation">.</span>tileLayer<span class="token punctuation">.</span><span class="token function">wms</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>layerUrl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/api/v1/geoserver/getwmts/</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">layers</span><span class="token operator">:</span> <span class="token string">&#39;db:geoserver_sarlayer&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">maxZoom</span><span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>
          <span class="token literal-property property">transparent</span><span class="token operator">:</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token string">&#39;1.1.0&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;image/png&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>layers</td><td>(必需)要显示的 WMS 图层的逗号分隔列表</td></tr><tr><td>maxZoom</td><td>此图层将显示的最大缩放级别（包括最大）</td></tr><tr><td>transparent</td><td>如果为 true，WMS 服务将返回具有透明度的图像</td></tr><tr><td>version</td><td>要使用的 WMS 服务的版本</td></tr><tr><td>format</td><td>WMS 图像格式 (对具有透明度的图层使用 ‘image/png’ for layers with transparency)</td></tr><tr><td>version</td><td>这个参数需要注意下,必须和你后端发图层服务的版本一样,我这里后端图层服务版本是1.1.0</td></tr></tbody></table><p>GeoJSON 图层的使用 官方文档里给我们介绍,这个方法有两个参数,第一个是路径,第二个是参数设置</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">geoJSON</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token punctuation">{</span>配置项<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><table><thead><tr><th>选择</th><th>类型</th><th>违约</th><th>描述</th></tr></thead><tbody><tr><td>crs</td><td>CRS</td><td>L.CRS.EPSG3857</td><td>要使用的坐标参考系。如果您不是，请不要更改此设置 确定这意味着什么。</td></tr><tr><td>center</td><td>LatLng</td><td>undefined</td><td>地图的初始地理中心</td></tr><tr><td>zoom</td><td>Number</td><td>undefined</td><td>初始地图缩放级别</td></tr><tr><td>minZoom</td><td>Number</td><td>*</td><td>地图的最小缩放级别。 如果未指定，并且地图中至少有一个网格图层或切片图层， 将改用他们最低的选项。minZoom</td></tr><tr><td>maxZoom</td><td>Number</td><td>*</td><td>地图的最大缩放级别。 如果未指定，并且地图中至少有一个网格图层或切片图层， 将改用他们最高的选项。maxZoom</td></tr><tr><td>layers</td><td>Layer[]</td><td>[]</td><td>最初将添加到地图的图层数组</td></tr><tr><td>maxBounds</td><td>LatLngBounds</td><td>null</td><td>设置此选项后，地图会将视图限制为给定的视图 地理边界，如果用户尝试平移，则会将用户弹回 视野外。若要动态设置限制，请使用 setMaxBounds 方法。</td></tr><tr><td>renderer</td><td>Renderer</td><td>*</td><td>在地图上绘制矢量图层的默认方法。默认情况下为 L.SVG 或 L.Canvas，具体取决于浏览器支持。</td></tr></tbody></table><h3 id="添加标记、圆等图形" tabindex="-1"><a class="header-anchor" href="#添加标记、圆等图形" aria-hidden="true">#</a> 添加标记、圆等图形</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>  <span class="token comment">//添加标记</span>
  <span class="token comment">//图上添加一个标记</span>
  <span class="token keyword">var</span> marker <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">marker</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">30.550317</span><span class="token punctuation">,</span> <span class="token number">114.309043</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTo</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
 


  <span class="token comment">//添加矩形</span>
  <span class="token keyword">var</span> circle <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">circle</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">30.570317</span><span class="token punctuation">,</span> <span class="token number">114.319043</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token comment">//边框色</span>
    <span class="token literal-property property">fillColor</span><span class="token operator">:</span> <span class="token string">&#39;#f03&#39;</span><span class="token punctuation">,</span> <span class="token comment">//填充色</span>
    <span class="token literal-property property">fillOpacity</span><span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token comment">//透明度</span>
    <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">500</span> <span class="token comment">//半径</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTo</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>


</code></pre></div><p>添加弹窗</p><p><strong>注意，当页面刷新时，会弹出最后渲染的弹窗</strong></p><p>bindPopup（弹窗中内容，解析为html）</p><p>openPopup()打开弹窗</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code> <span class="token comment">//添加弹窗</span>
  marker<span class="token punctuation">.</span><span class="token function">bindPopup</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;b&gt;Hello world!&lt;/b&gt;&lt;br&gt;黄鹤楼边上.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openPopup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><p>有的时候，弹窗无需依附对象</p><p>但是要注意，需要最后渲染，否则渲染不出来，具体原因查看文档</p><p>页面显示弹窗位置，而不是设置的中心位置</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code> <span class="token comment">//弹窗</span>
  <span class="token comment">// 弹出窗口用作图层，不依附与标记等对象</span>
  <span class="token comment">//在这里我们使用而不是因为它在打开新弹出窗口时处理以前打开的弹出窗口的自动关闭，这对可用性有好处。openOnaddTo</span>
  <span class="token keyword">var</span> popup <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">popup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">setLatLng</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">30.450317</span><span class="token punctuation">,</span> <span class="token number">114.309043</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;I am a standalone popup.&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">openOn</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><h3 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code> <span class="token comment">//处理事件</span>

  <span class="token comment">//事件</span>
   <span class="token keyword">function</span> <span class="token function">onMapClick</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//e为对象，触发事件的对象</span>
     <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;You clicked the map at &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>latlng<span class="token punctuation">)</span><span class="token punctuation">;</span>
     console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//对象本身有很多可以使用的属性，如latlng是经纬度layerpoint当前点击位置等</span>
   <span class="token punctuation">}</span>

   map<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> onMapClick<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//注册事件</span>


  <span class="token comment">//一下代码实现在点击位置显示弹窗</span>
  <span class="token keyword">var</span> popup <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">popup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">onMapClick</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    popup
      <span class="token punctuation">.</span><span class="token function">setLatLng</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>latlng<span class="token punctuation">)</span> <span class="token comment">//给弹窗添加坐标</span>
      <span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;b&gt;Hello world!&lt;/b&gt;&lt;br&gt;You clicked the map at &quot;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>latlng<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//弹窗内容，可以写html代码，能够渲染</span>
      <span class="token punctuation">.</span><span class="token function">openOn</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  map<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> onMapClick<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre></div><ul><li>创建地图(map)</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> map<span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token string">&#39;map&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">minZoom</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
  <span class="token literal-property property">maxZoom</span><span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span>
  <span class="token literal-property property">zoom</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span>
  <span class="token literal-property property">center</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">37.632111</span><span class="token punctuation">,</span> <span class="token number">114.91680237</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">attributionControl</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>options选项</p><ul><li><p>maxZoom：地图最大的缩放等级</p></li><li><p>minZoom：地图最小的缩放等级</p></li><li><p>zoom：地图默认的缩放等级</p></li><li><p>center：地图默认的中心点位置[纬度，经度]</p></li><li><p>attributionControl：是否将 attribution 版权控件添加到地图中</p></li><li><p>zoomControl：是否将zoom缩放控件添加到地图中</p></li><li><p>crs：地图使用的坐标系，默认使用的是EPSG3857坐标系</p></li><li><p>layers：添加到地图的图层</p></li><li><p>closePopupOnClick：用户点击图层时打开的弹框是否自动关闭</p></li><li><p>dragging：地图是否可以进行拖动，滑动</p></li><li><p>添加图层(tileLayer)</p></li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> tileLayer <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">tileLayer</span><span class="token punctuation">(</span><span class="token string">&#39;http://map.geoq.cn/ArcGIS/rest/services/.../&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
    <span class="token literal-property property">maxZoom</span><span class="token operator">:</span> <span class="token number">17</span><span class="token punctuation">,</span>
    <span class="token literal-property property">minZoom</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTo</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>   
</code></pre></div><h4 id="创建标记-marker" tabindex="-1"><a class="header-anchor" href="#创建标记-marker" aria-hidden="true">#</a> 创建标记(marker)</h4><p><code>let marker = L.marker([纬度，经度], { icon: 图标 })</code></p><p>icon:将创建的标记改为一个图标 title:鼠标移动到标记上时显示的标记 opacity:标记的不透明度</p><h6 id="注意-icon不定义就会使用leaflet自带的图标" tabindex="-1"><a class="header-anchor" href="#注意-icon不定义就会使用leaflet自带的图标" aria-hidden="true">#</a> 注意： icon不定义就会使用leaflet自带的图标</h6><ul><li>图标(icon/divIcon) icon图标：提供一个图片或图像代替标记</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> myIcon <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">icon</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">iconUrl</span><span class="token operator">:</span> <span class="token string">&#39;my-icon.png&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">iconSize</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">iconAnchor</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">94</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">popupAnchor</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">76</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">shadowUrl</span><span class="token operator">:</span> <span class="token string">&#39;my-icon-shadow.png&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">shadowSize</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">shadowAnchor</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">94</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>option选项</p><p>iconUrl:图标图像的地址（URL） iconSize:图标图像的尺寸，单位为像素（number） className：设置一个class自定义图标的CSS属性 popupAnchor：弹出的窗口的坐标，相对于图标的描点而言，将在这里打开弹框 （[0,0]） iconAnchor：图标相对其左上角的坐标，默认情况下，图标的左上角是标记的位置（[0,0]）</p><ul><li>divIcon图标：提供一个div元素作为图标代替标记</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> divIcon <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">divIcon</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
   <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div style=&quot;width:30px;height:30px;background:red;border- 
         radius:30px;text-align:center;line-height:30px;color:#ffffff&quot;&gt;
         北京&lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
   <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">&#39;icon&#39;</span><span class="token punctuation">,</span>   <span class="token comment">// 图标父节点的class属性</span>
   <span class="token literal-property property">popupAnchor</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 弹出框（popup）的坐标，相对于图标描点而言，将从该点打开</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>html:自定义HTML代码，放入div元素内 divIcon继承icon的option选项</p><h3 id="弹框-bindpopup" tabindex="-1"><a class="header-anchor" href="#弹框-bindpopup" aria-hidden="true">#</a> 弹框(bindPopup)</h3><p><code>marker.bindPopup(&quot;我是popup&quot;,options).openPopup();</code> options选项 maxWidth（最大宽度）：弹出框的最大宽度。 minWidth（最小宽度）：弹出框的最小宽度。 maxHeight（最大高度）：设置后，如果内容超过弹出窗口的给定高度则产生一个可以滚动的容器。 autoPan（自动平移）：如果你不想地图自动平移来适应打开的弹出框，就设置其为false。 closeButton（关闭按钮）：设置弹出窗口中是否出现关闭按钮。 offset（补偿值）：弹出窗口位置的补偿值。在同一图层中打开弹出窗口时对于控制锚点比较有用。 autoPanPadding（自动平移填补）：在地图视图自动平移产生后弹出窗口和地图视图之间的边缘。 zoomAnimation：决定是否在所在级别上弹出窗口。如果你在弹出窗口中有flash内容的最好将其设置为不可用。 closeOnClick：默认为true，如果不想用户点击地图时弹框自动关闭，就请设置为false className：设置一个class自定义弹出窗口的CSS属性 方法 addTo：将弹出窗口添加到地图上。 openOn：将弹出窗口添加到地图上并将之前的一个关闭。与map.oenPopup(popup)方法相同。 setLatLng：设置弹出窗口打开的地理上的点位。 setContent：设置弹出窗口的HTML内容。</p><ul><li><p>工具提示(bindTooltip)</p></li><li><p>使用示例</p></li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>marker<span class="token punctuation">.</span><span class="token function">bindTooltip</span><span class="token punctuation">(</span><span class="token string">&quot;my tooltip text&quot;</span>，options<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openTooltip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
options选项
direction：打开tooltip的方向，可以为left，right，bottom，top，center，auto
permanent：是永久打开tooltip还是只在鼠标移动时打开
sticky：如果为<span class="token boolean">true</span>，tooltip将跟随鼠标移动，而不是固定在特征中心
opacity：tooltip的透明度
</code></pre></div><p>窗格(pane)</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>map<span class="token punctuation">.</span><span class="token function">createPane</span><span class="token punctuation">(</span><span class="token string">&#39;pane&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建窗格</span>
map<span class="token punctuation">.</span><span class="token function">getPane</span><span class="token punctuation">(</span><span class="token string">&#39;pane&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>zIndex <span class="token operator">=</span> <span class="token number">999</span><span class="token punctuation">;</span>  <span class="token comment">// 设置窗格的层级</span>
<span class="token keyword">var</span> positronLabels <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">tileLayer</span><span class="token punctuation">(</span><span class="token string">&#39;https://{s}.basemaps.cartocdn.com/light_nolabels/{x}/{y}/{z}.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
        <span class="token literal-property property">attribution</span><span class="token operator">:</span> <span class="token string">&#39;©OpenStreetMap, ©CartoDB&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">pane</span><span class="token operator">:</span> <span class="token string">&#39;labels&#39;</span>   <span class="token comment">// 绑定窗格</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTo</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="常用方法和事件" tabindex="-1"><a class="header-anchor" href="#常用方法和事件" aria-hidden="true">#</a> 常用方法和事件</h3><ul><li>将给定的图层添加到地图中</li></ul><p><code>map.addLayer(this.tileLayer);</code></p><ul><li>遍历所有图层然后删除</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>map<span class="token punctuation">.</span><span class="token function">eachLayer</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">layer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    layer<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>// eachLayer()方法：遍历地图上所有图层</p><ul><li>删除地图上单个图层</li></ul><p><code>map.removeLayer(layer)</code></p><ul><li>设置地图的中心点和层级</li></ul><p><code>map.setView([lat: 30.890944, lng: 120.606944],10);</code></p><ul><li>获取地图当前缩放级别</li></ul><p><code>map.getZoom();</code></p><ul><li>获取当前地图中心点</li></ul><p><code>map.getCenter();</code></p><ul><li>设置地图的最小或最大缩放级别</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>map<span class="token punctuation">.</span><span class="token function">setMinZoom</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">setMaxZoom</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>判断地图上是否已存在某个图层</li></ul><p><code>map.hasLayer(this.tileLayer); </code></p><h3 id="leaflet限制地图拖动范围" tabindex="-1"><a class="header-anchor" href="#leaflet限制地图拖动范围" aria-hidden="true">#</a> leaflet限制地图拖动范围</h3><ul><li><p>在Leaflet默认的地图载模式中，假如没有对地图的一个范围进行限制，那就会带来一个问题，随着地图可以拖动，当地图往右拖动越多，每跨一屏（这里的一屏指地图投影后在页面上的平铺位置）经度会加360度。同理，如果往左边拖一屏，也是相应的嫌少-360度。这是目标点的一个定位问题。</p></li><li><p>第二个问题是，假如我们在,[120.146484,29.649869]这个点标一个marker，你会发现，当拖动一屏后，它并没有在同一个位置也标上这个点。如果把此时的地图给用户看的话，肯定会产生一种错觉。</p></li></ul><h3 id="地理信息系统" tabindex="-1"><a class="header-anchor" href="#地理信息系统" aria-hidden="true">#</a> 地理信息系统</h3><ul><li>在地理信息系统中，对地理范围是有一个明确的定义的。</li><li><strong>经度范围是0-180°，纬度范围是0-90°</strong>。 <ul><li>从0°经线算起，向东、向西各分作180°，</li><li>以东的180°属于东经，习惯上用“百E”作代号，以西的180°属于西经，习惯上用“W”作代号。</li></ul></li><li>我们通常说的纬度度指的是大地纬度。<strong>其数值在0至90度之间</strong>。 <ul><li>位于赤道以北的点的纬度叫北纬，记为N；位于赤道以南的点的纬度称南纬，记为S。</li><li>为了研究问题方便，人们把纬度分问为低、 中、高纬度。0°～30°为低纬度， 30°～ 60°为中纬度， 60～90°为高答纬度。</li></ul></li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>
<span class="token constant">L</span><span class="token punctuation">.</span><span class="token constant">CRS</span><span class="token punctuation">.</span>CustomEPSG4326 <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token constant">CRS</span><span class="token punctuation">.</span>Earth<span class="token punctuation">,</span> <span class="token punctuation">{</span>
		<span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token string">&#39;EPSG:4326&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">projection</span><span class="token operator">:</span> <span class="token constant">L</span><span class="token punctuation">.</span>Projection<span class="token punctuation">.</span>LonLat<span class="token punctuation">,</span>
		<span class="token literal-property property">transformation</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">L<span class="token punctuation">.</span>Transformation</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token function-variable function">scale</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">zoom</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token number">256</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> zoom <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
<span class="token comment">// 第一种设置方式，可行</span>
<span class="token comment">//限制地图的拖动范围是正负90到正负180，这样才合理。</span>
<span class="token keyword">var</span> corner1 <span class="token operator">=</span>  <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">latLng</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置左上角经纬度</span>
<span class="token keyword">var</span> corner2 <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">latLng</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">//设置右下点经纬度</span>
<span class="token keyword">var</span> bounds <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">latLngBounds</span><span class="token punctuation">(</span>corner1<span class="token punctuation">,</span> corner2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//构建视图限制范</span>
<span class="token keyword">var</span> mymap <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token string">&#39;mapid&#39;</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">crs</span><span class="token operator">:</span><span class="token constant">L</span><span class="token punctuation">.</span><span class="token constant">CRS</span><span class="token punctuation">.</span>CustomEPSG4326<span class="token punctuation">,</span><span class="token literal-property property">maxBounds</span><span class="token operator">:</span>bounds<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setView</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">29.052934</span><span class="token punctuation">,</span> <span class="token number">104.0625</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token keyword">var</span> corner1 <span class="token operator">=</span>  <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">latLng</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置左上角经纬度</span>
<span class="token keyword">var</span> corner2 <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">latLng</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">//设置右下点经纬度</span>
<span class="token keyword">var</span> bounds <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">latLngBounds</span><span class="token punctuation">(</span>corner1<span class="token punctuation">,</span> corner2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//构建视图限制范围</span>
</code></pre></div><ul><li><p>maxBounds参数设置为空。设置此选项后，地图会将视图限制在给定的地理范围内，如果用户试图在视图之外平移，则将用户弹回。</p></li><li><p>要动态设置限制，请使用 setMaxBounds方法。通过这种方式就能限制地图的最大范围。</p></li><li><p><strong>你必须使用 bounds 作为 L.tileLayer 的选项，而不是 maxBounds.</strong></p></li></ul><p>You must use bounds as an option of L.tileLayer, and not maxBounds.</p><p>边界参考 另外，您似乎在 JSFiddle 中为 leaflet.css 加载了错误的文件，正确的来源是:http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css 最后，避免在 JSFiddle 中使用百分比大小，而是使用像素大小.这是一个有效的 JSFiddle:http://jsfiddle.net/1zyL4q4a/4/</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 除了使用这种初始定义的方式，还可以使用setMaxBounds(args)这种函数调用来进行，效果是一样的，调用代码：</span>
mymap<span class="token punctuation">.</span><span class="token function">setMaxBounds</span><span class="token punctuation">(</span>bounds<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//这种方式对控制显得更灵活方便。</span>



 <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">tileLayer</span><span class="token punctuation">(</span><span class="token string">&#39;http://{s}.tile.osm.org/{z}/{x}/{y}.png&#39;</span> <span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">bounds</span><span class="token operator">:</span> mybounds<span class="token punctuation">,</span>
            <span class="token literal-property property">maxZoom</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>
            <span class="token literal-property property">minZoom</span><span class="token operator">:</span> <span class="token number">16</span> 
   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTo</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="vue-leaflet" tabindex="-1"><a class="header-anchor" href="#vue-leaflet" aria-hidden="true">#</a> vue leaflet</h3><div class="language-vue" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- &lt;div&gt;{{ ln }}&lt;/div&gt; --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>map_doma<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token constant">L</span> <span class="token keyword">from</span> <span class="token string">&quot;leaflet&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string">&quot;leaflet/dist/leaflet.css&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> map_doma <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> ln <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>

  <span class="token comment">//   L.Marker.prototype.options.icon = DefaultIcon;</span>
  <span class="token comment">//   var wmsLayer= L.tileLayer.wms(</span>
  <span class="token comment">//       &quot;http://127.0.0.1:8880/geoserver/zxhy/wms&quot;, { // 链接要改对应的</span>
  <span class="token comment">//           layers: &#39;zxhy:test&#39;,//需要加载的图层,就是我们刚刚新建的。map 和 图层名</span>
  <span class="token comment">//           format: &#39;image/png&#39;,//返回的数据格式</span>
  <span class="token comment">//           transparent: true</span>
  <span class="token comment">//       }</span>
  <span class="token comment">//   );</span>
  <span class="token comment">// let wmsLayer = L.tileLayer(</span>
  <span class="token comment">//   &quot;http://webrd01.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;scale=1&amp;style=7&amp;x={x}&amp;y={y}&amp;z={z}&quot;</span>
  <span class="token comment">// );</span>

  <span class="token keyword">let</span> wmsLayer <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">tileLayer</span><span class="token punctuation">(</span>
    <span class="token string">&quot;http://127.0.0.1/gda/{z}/{x}/{y}.png&quot;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// https://plugins.qgis.org/plugins/QMetaTiles/</span>
  <span class="token doc-comment comment">/**
   Leaflet中有两种表示坐标点的数据结构，一种是最常用的LatLng，另一种是Point。
  
  LatLng是是描述经纬度的坐标类，代表具有一定纬度和经度的地理点。
  
  LatLng有三个属性: lat 纬度（以度为单位）,lng 经度（以度为单位）,和 alt 海拔高度（米）（可选


    <span class="token punctuation">{</span>lat: Number, lng: Number, alt: Number<span class="token punctuation">}</span>
  54.62266
  70.21749
   */</span>

  <span class="token keyword">var</span> corner1 <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">latLng</span><span class="token punctuation">(</span><span class="token number">54.62266</span><span class="token punctuation">,</span> <span class="token number">70.21749</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置左上角经纬度</span>
  <span class="token keyword">var</span> corner2 <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">latLng</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">134</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">//设置右下点经纬度</span>
  <span class="token keyword">var</span> bounds <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">latLngBounds</span><span class="token punctuation">(</span>corner1<span class="token punctuation">,</span> corner2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//构建视图限制范围</span>

  <span class="token comment">// --------------------------------------------绘制经纬度网格线 Specify divisions every 10 degrees</span>

  <span class="token comment">//   let map_dom = wmsLayer.addTo(map_doma.value);</span>
  <span class="token keyword">let</span> map_dom <span class="token operator">=</span> <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>map_doma<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">center</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">36.421894</span><span class="token punctuation">,</span> <span class="token number">114.214961</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">zoom</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// 初始化缩放</span>
    <span class="token literal-property property">layers</span><span class="token operator">:</span> <span class="token punctuation">[</span>wmsLayer<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">zoomControl</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">maxBounds</span><span class="token operator">:</span> bounds<span class="token punctuation">,</span>
    <span class="token literal-property property">bounds</span><span class="token operator">:</span> bounds<span class="token punctuation">,</span>
    <span class="token literal-property property">attributionControl</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token constant">L</span><span class="token punctuation">.</span>control
    <span class="token punctuation">.</span><span class="token function">zoom</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">zoomInTitle</span><span class="token operator">:</span> <span class="token string">&quot;放大&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">zoomOutTitle</span><span class="token operator">:</span> <span class="token string">&quot;缩小&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">addTo</span><span class="token punctuation">(</span>map_dom<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/*
  var mousePositionControl = L.control({
    position: &#39;bottomleft&#39;
  });
  mousePositionControl.onAdd = function (map) {
    var div = L.DomUtil.create(&#39;div&#39;, &#39;mouse-position&#39;);
    div.innerHTML = &#39;经度: &#39; + 0 + &#39; 纬度: &#39; + 0;
    return div;
  };
  mousePositionControl.updatePosition = function ({ latlng }) {
    var lat = latlng.lat.toFixed(5);
    var lng = latlng.lng.toFixed(5);
    this._container.innerHTML = &#39;经度: &#39; + lng + &#39; 纬度: &#39; + lat;

    // lnd.innerHTML= &#39;经度: &#39; + lng + &#39; 纬度: &#39; + lat;
  };
  mousePositionControl.addTo(map_dom);


  map_dom.on(&#39;mousemove&#39;, function (latlng) {
    // 在此处编写获取经纬度和显示的代码
    mousePositionControl.updatePosition(latlng);

  });

  */</span>
  
    <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">polyline</span><span class="token punctuation">(</span>
      <span class="token punctuation">[</span>
        <span class="token punctuation">[</span><span class="token number">36.433698</span><span class="token punctuation">,</span> <span class="token number">114.21603</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">36.427757</span><span class="token punctuation">,</span> <span class="token number">114.231931</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">36.435255</span><span class="token punctuation">,</span> <span class="token number">114.227845</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&quot;green&quot;</span> <span class="token punctuation">}</span>
    <span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">addTo</span><span class="token punctuation">(</span>map_dom<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">bindPopup</span><span class="token punctuation">(</span><span class="token string">&quot;2020-06-30巡检路径&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">marker</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">36.433698</span><span class="token punctuation">,</span> <span class="token number">114.21603</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTo</span><span class="token punctuation">(</span>map_dom<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bindPopup</span><span class="token punctuation">(</span><span class="token string">&quot;1号巡检点&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">marker</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">36.427757</span><span class="token punctuation">,</span> <span class="token number">114.231931</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTo</span><span class="token punctuation">(</span>map_dom<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bindPopup</span><span class="token punctuation">(</span><span class="token string">&quot;2号巡检点&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token constant">L</span><span class="token punctuation">.</span><span class="token function">marker</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">36.435255</span><span class="token punctuation">,</span> <span class="token number">114.227845</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTo</span><span class="token punctuation">(</span>map_dom<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">bindPopup</span><span class="token punctuation">(</span><span class="token string">&quot;3号巡检点&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 


</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
 
</code></pre></div>`,74),e=[o];function c(l,u){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","leaflet_b.html.vue"]]);export{k as default};
