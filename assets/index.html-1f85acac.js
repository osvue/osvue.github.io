import{_ as a,p as n,q as s,a1 as e}from"./framework-d81ad7e5.js";const t={},o=e(`<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>limit 1,10 就是从第一条开始，取10 条users 的记录</p><p>收到客户端{pageNo:1,pagesize:10} <br> select * from table limit (pageNo-1)*pageSize, pageSize; <br></p><p>收到客户端{pageNo:5,pageSize:30}<br> select * from table limit (pageNo-1)*pageSize,pageSize;<br></p></div><h3 id="内部联结-join" tabindex="-1"><a class="header-anchor" href="#内部联结-join" aria-hidden="true">#</a> 内部联结 JOIN</h3><p>内部联结又称为等值联结，它基于两个表之间的相等测试。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	vend_name<span class="token punctuation">,</span>
  prod_name<span class="token punctuation">,</span>
  prod_price
<span class="token keyword">FROM</span> vendors v
<span class="token keyword">JOIN</span> products p
	<span class="token keyword">USING</span> <span class="token punctuation">(</span>vend_id<span class="token punctuation">)</span>
<span class="token keyword">ORDER</span> <span class="token keyword">BY</span> vend_name<span class="token punctuation">,</span> prod_name

<span class="token comment">-- 自联结</span>
<span class="token keyword">SELECT</span>
	p1<span class="token punctuation">.</span>prod_id<span class="token punctuation">,</span>
  p1<span class="token punctuation">.</span>prod_name
<span class="token keyword">FROM</span> products p1
<span class="token keyword">JOIN</span> products p2
	<span class="token keyword">ON</span> p1<span class="token punctuation">.</span>vend_id <span class="token operator">=</span> p2<span class="token punctuation">.</span>vend_id
	<span class="token operator">AND</span> p2<span class="token punctuation">.</span>prod_id <span class="token operator">=</span> <span class="token string">&#39;DTNTR&#39;</span>
</code></pre></div><h3 id="外部联结" tabindex="-1"><a class="header-anchor" href="#外部联结" aria-hidden="true">#</a> 外部联结</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	c<span class="token punctuation">.</span>cust_id<span class="token punctuation">,</span>
  o<span class="token punctuation">.</span>order_num
<span class="token keyword">FROM</span> customers c
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> orders o
	<span class="token keyword">ON</span> c<span class="token punctuation">.</span>cust_id <span class="token operator">=</span> o<span class="token punctuation">.</span>cust_id
</code></pre></div><h3 id="聚集函数" tabindex="-1"><a class="header-anchor" href="#聚集函数" aria-hidden="true">#</a> 聚集函数</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span>
	c<span class="token punctuation">.</span>cust_name<span class="token punctuation">,</span>
  c<span class="token punctuation">.</span>cust_id<span class="token punctuation">,</span>
  <span class="token function">count</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>order_num<span class="token punctuation">)</span> <span class="token keyword">as</span> num_ord
<span class="token keyword">FROM</span> customers c
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> orders o
	<span class="token keyword">ON</span> c<span class="token punctuation">.</span>cust_id <span class="token operator">=</span> o<span class="token punctuation">.</span>cust_id
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> c<span class="token punctuation">.</span>cust_id
</code></pre></div><h2 id="union" tabindex="-1"><a class="header-anchor" href="#union" aria-hidden="true">#</a> UNION</h2><p>在某种程度上 UNION 可以大幅简化 WHERE 子句。</p><p>UNION 中每个查询必须包含相同的列、表达式或聚集函数。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 指定 ALL 不会取消重复的行</span>
<span class="token keyword">SELECT</span>
	vend_id<span class="token punctuation">,</span>
  prod_id<span class="token punctuation">,</span>
  prod_price
<span class="token keyword">FROM</span> products
<span class="token keyword">WHERE</span> prod_price <span class="token operator">&lt;=</span> <span class="token number">5</span>
<span class="token keyword">UNION</span> <span class="token keyword">ALL</span>
<span class="token keyword">SELECT</span>
	vend_id<span class="token punctuation">,</span>
  prod_id<span class="token punctuation">,</span>
  prod_price
<span class="token keyword">FROM</span> products
<span class="token keyword">WHERE</span> vend_id <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">,</span> <span class="token number">1002</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="insert" tabindex="-1"><a class="header-anchor" href="#insert" aria-hidden="true">#</a> INSERT</h2><table><thead><tr><th>指令</th><th>已存在</th><th>不存在</th><th>举例</th></tr></thead><tbody><tr><td>insert</td><td>报错</td><td>插入</td><td>insert into names(name, age) values(“小明”, 23);</td></tr><tr><td>insert ignore</td><td>忽略</td><td>插入</td><td>insert ignore into names(name, age) values(“小明”, 24);</td></tr><tr><td>replace</td><td>替换</td><td>插入</td><td>replace into names(name, age) values(“小明”, 25);</td></tr></tbody></table><p>插入数据最好指定列名，可跳过默认取默认值的列且可更改顺序。</p><p>多行数据以 <code>,</code> 分隔。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> customers
	<span class="token punctuation">(</span>cust_name<span class="token punctuation">,</span> cust_address<span class="token punctuation">,</span> cust_city<span class="token punctuation">,</span> cust_state<span class="token punctuation">,</span> cust_zip<span class="token punctuation">,</span> cust_country<span class="token punctuation">)</span>
<span class="token keyword">VALUES</span>
	<span class="token punctuation">(</span><span class="token string">&#39;Pep E. LaPew&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;100 Main Street&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Los Angeles&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CA&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;90046&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;USA&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token string">&#39;M. Martian&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;42 Galaxy&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;New York&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;NY&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;11213&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;USA&#39;</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="update" tabindex="-1"><a class="header-anchor" href="#update" aria-hidden="true">#</a> UPDATE</h2><p>更新语句由三部分组成：</p><ul><li>要更新的表</li><li>列名和它们的新值</li><li>确定要更新行的过滤条件</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> customers
<span class="token keyword">SET</span> 
	cust_name <span class="token operator">=</span> <span class="token string">&#39;The Fudd&#39;</span><span class="token punctuation">,</span>
	cust_email <span class="token operator">=</span> <span class="token string">&#39;elmer@fudd.com&#39;</span>
<span class="token keyword">WHERE</span> cust_id <span class="token operator">=</span> <span class="token number">10005</span>
</code></pre></div><h2 id="delete" tabindex="-1"><a class="header-anchor" href="#delete" aria-hidden="true">#</a> DELETE</h2><p>注意检查 WHERE 有没有使用。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> customers
<span class="token keyword">WHERE</span> cust_id <span class="token operator">=</span> <span class="token number">10006</span>
</code></pre></div><h2 id="mysql常用命令" tabindex="-1"><a class="header-anchor" href="#mysql常用命令" aria-hidden="true">#</a> Mysql常用命令</h2><h2 id="数据定义语句-ddl" tabindex="-1"><a class="header-anchor" href="#数据定义语句-ddl" aria-hidden="true">#</a> 数据定义语句(DDL)</h2><h3 id="数据库操作" tabindex="-1"><a class="header-anchor" href="#数据库操作" aria-hidden="true">#</a> 数据库操作</h3><ul><li>登录数据库：mysql -uroot -proot</li><li>创建数据库：create database test</li><li>查看所有数据库：show databases</li><li>使用数据库：use test</li><li>查看所有数据表：show tables</li><li>删除数据库：drop database test</li></ul><h3 id="表操作" tabindex="-1"><a class="header-anchor" href="#表操作" aria-hidden="true">#</a> 表操作</h3><ul><li>创建表：create table emp(ename varchar(10),hiredate date,sal decimal(10,2),deptno int(2))<br> create table dept(deptno int(2),deptname varchar(10))</li><li>查看表的定义：desc emp</li><li>查看表定义（详细）：show create table emp \\G</li><li>删除表：drop table emp</li><li>修改表字段：alter table emp modify ename varchar(20)</li><li>添加表字段：alter table emp add column age int(3)</li><li>删除表字段：alter table emp drop column age</li><li>字段改名；alter table emp change age age1 int(4)</li><li>修改表名：alter table emp rename emp1</li></ul><h2 id="数据操纵语句-dml" tabindex="-1"><a class="header-anchor" href="#数据操纵语句-dml" aria-hidden="true">#</a> 数据操纵语句(DML)</h2><h3 id="插入记录" tabindex="-1"><a class="header-anchor" href="#插入记录" aria-hidden="true">#</a> 插入记录</h3><ul><li>指定名称插入：insert into emp (ename,hiredate,sal,deptno) values (&#39;zhangsan&#39;,&#39;2018-01-01&#39;,&#39;2000&#39;,1)</li><li>不指定名称插入：insert into emp values (&#39;lisi&#39;,&#39;2018-01-01&#39;,&#39;2000&#39;,1)</li><li>批量插入数据：insert into dept values(1,&#39;dept1&#39;),(2,&#39;dept2&#39;)</li></ul><h3 id="修改记录" tabindex="-1"><a class="header-anchor" href="#修改记录" aria-hidden="true">#</a> 修改记录</h3><p>update emp set sal=&#39;4000&#39;,deptno=2 where ename=&#39;zhangsan&#39;</p><h3 id="删除记录" tabindex="-1"><a class="header-anchor" href="#删除记录" aria-hidden="true">#</a> 删除记录</h3><p>delete from emp where ename=&#39;zhangsan&#39;</p><h3 id="查询记录" tabindex="-1"><a class="header-anchor" href="#查询记录" aria-hidden="true">#</a> 查询记录</h3><ul><li>查询所有记录：select * from emp</li><li>查询不重复的记录：select distinct deptno from emp</li><li>条件查询：select * from emp where deptno=1 and sal&lt;3000</li><li>排序和限制：select * from emp order by deptno desc limit 2</li><li>聚合(查询部门人数大于1的部门编号)：select deptno,count(1) from emp group by deptno having count(1) &gt; 1</li><li>连接查询：select * from emp e left join dept d on e.deptno=d.deptno</li><li>子查询：select * from emp where deptno in (select deptno from dept)</li><li>记录联合：select deptno from emp union select deptno from dept</li></ul><h2 id="数据控制语句-dcl" tabindex="-1"><a class="header-anchor" href="#数据控制语句-dcl" aria-hidden="true">#</a> 数据控制语句(DCL)</h2><ul><li>授予操作权限：grant select,insert on test.* to &#39;test&#39;@&#39;localhost&#39; identified by &#39;123&#39;</li><li>收回操作权限：revoke insert on test.* from &#39;test&#39;@&#39;localhost&#39;</li></ul><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><h3 id="字符集相关" tabindex="-1"><a class="header-anchor" href="#字符集相关" aria-hidden="true">#</a> 字符集相关</h3><ul><li>查看字符集：show variables like &#39;character%&#39;</li><li>创建数据库时指定字符集：create database mall character set utf8</li></ul><h3 id="修改时区" tabindex="-1"><a class="header-anchor" href="#修改时区" aria-hidden="true">#</a> 修改时区</h3><ul><li>修改mysql全局时区为北京时间，即我们所在的东8区：<code>set global time_zone = &#39;+8:00&#39;</code>;</li><li>修改当前会话时区：<code>set time_zone = &#39;+8:00&#39;</code></li><li>立即生效：<code>flush privileges</code></li></ul><h3 id="权限相关" tabindex="-1"><a class="header-anchor" href="#权限相关" aria-hidden="true">#</a> 权限相关</h3><ul><li>授予所有数据库的所有权限：<code>grant all privileges on *.* to user_name@localhost identified by &#39;123&#39;</code></li><li>授予所有数据库的所有权限(包括grant)：<code>grant all privileges on *.* to user_name@localhost with grant option</code></li><li>授予SUPER PROCESS FILE权限：<code>grant super,process,file on *.* to user_name@localhost</code></li><li>只授予登录权限：<code>grant usage on *.* to user_name@localhost</code></li><li>查看账号权限：<code>show grants for user_name@localhost</code></li><li>修改自己的密码：<code>set password = password(&#39;123&#39;)</code></li><li>管理员修改他人密码：<code>set password for &#39;user_name&#39;@&#39;localhost&#39; = password(&#39;123&#39;)</code></li><li>删除账号：<code>drop user user_name@localhost</code></li></ul>`,48),p=[o];function l(c,i){return n(),s("div",null,p)}const r=a(t,[["render",l],["__file","index.html.vue"]]);export{r as default};
