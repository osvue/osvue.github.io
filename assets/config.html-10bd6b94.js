import{_ as e,p as a,q as t,a1 as n}from"./framework-d81ad7e5.js";const r={},c=n(`<h4 id="导入的数据和我自己生成的表不对应-自己生成的表名有下滑杠连接符-。" tabindex="-1"><a class="header-anchor" href="#导入的数据和我自己生成的表不对应-自己生成的表名有下滑杠连接符-。" aria-hidden="true">#</a> 导入的数据和我自己生成的表不对应 自己生成的表名有下滑杠连接符”。</h4><p>这个问题主要是JPA的命名策略不一致导致的。</p><p>有这么一个配置：</p><p><code>spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.DefaultNamingStrategy</code></p><p>这里的值有两个可选的配置：</p><ul><li>第一：<code>org.hibernate.cfg.ImprovedNamingStrategy</code></li><li>第二：<code>org.hibernate.cfg.DefaultNamingStrategy</code></li></ul><p>以上两个的区别是：</p><div class="language-text" data-ext="text"><pre class="language-text"><code>DefaultNamingStrategy这个直接映射，不会做过多的处理（前提没有设置@Table，@Column等属性的时候）。
ImprovedNamingStrategy 表名，字段为小写，当有大写字母的时候会转换为分隔符号“_”。
</code></pre></div>`,8),o=[c];function i(d,g){return a(),t("div",null,o)}const s=e(r,[["render",i],["__file","config.html.vue"]]);export{s as default};
