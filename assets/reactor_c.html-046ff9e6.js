import{_ as e,p as r,q as a,a1 as t}from"./framework-d81ad7e5.js";const i="/assets/remanythread-bef0dbe1.png",l={},c=t('<h2 id="multithreaded-designs" tabindex="-1"><a class="header-anchor" href="#multithreaded-designs" aria-hidden="true">#</a> Multithreaded Designs</h2><p>多线程模型 <img src="'+i+'" alt="alt"></p><h3 id="流程说明" tabindex="-1"><a class="header-anchor" href="#流程说明" aria-hidden="true">#</a> 流程说明</h3><ol><li>Reactor 对象通过select 监控客户端请求\v事件, 收到事件后，通过dispatch进行分发</li><li>如果建立连接请求, 则由 <strong>Acceptor</strong> 通过\vaccept 处理连接请求, 然后创建一个Handler对象处理完成连接后的各种事件</li><li>如果不是连接请求，则由reactor分发调用连接对应的handler 来处理</li><li>handler 只负责响应事件，不做具体的业务处理, 通过read 读取数据后，会分发给后面的worker线程池的某个线程处理业务</li><li>worker 线程池会分配独立线程完成真正的业务，并将结果返回给handler</li><li>handler收到响应后，通过send 将结果返回给client</li></ol>',4),d=[c];function s(n,o){return r(),a("div",null,d)}const _=e(l,[["render",s],["__file","reactor_c.html.vue"]]);export{_ as default};
