import{_ as n,p as s,q as a,a1 as t}from"./framework-d81ad7e5.js";const p={},e=t(`<h2 id="流程变量-variables" tabindex="-1"><a class="header-anchor" href="#流程变量-variables" aria-hidden="true">#</a> 流程变量 Variables</h2><p>在 Activiti 中，流程变量（Process Variables）是流程实例或任务级别的数据，可以在流程的不同阶段设置和访问。以下是几种设置流程变量的方式及其区别、优先级和覆盖规则：</p><hr><h3 id="_1-设置流程变量的方式" tabindex="-1"><a class="header-anchor" href="#_1-设置流程变量的方式" aria-hidden="true">#</a> 1. <strong>设置流程变量的方式</strong></h3><h4 id="_1-1-启动流程时设置流程变量" tabindex="-1"><a class="header-anchor" href="#_1-1-启动流程时设置流程变量" aria-hidden="true">#</a> 1.1 启动流程时设置流程变量</h4><p>使用 <code>runtimeService.startProcessInstanceByKey</code> 或 <code>runtimeService.startProcessInstanceById</code> 启动流程时，可以传入流程变量。</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> variables <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

runtimeService<span class="token punctuation">.</span><span class="token function">startProcessInstanceByKey</span><span class="token punctuation">(</span><span class="token string">&quot;myProcess&quot;</span><span class="token punctuation">,</span> businessKey<span class="token punctuation">,</span> variables<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li><strong>作用范围</strong>：这些变量属于流程实例级别，可以在整个流程实例中访问。</li><li><strong>优先级</strong>：启动时设置的变量是初始变量，优先级最低（可以被后续设置的变量覆盖）。</li></ul><hr><h4 id="_1-2-办理任务时设置流程变量" tabindex="-1"><a class="header-anchor" href="#_1-2-办理任务时设置流程变量" aria-hidden="true">#</a> 1.2 办理任务时设置流程变量</h4><p>使用 <code>taskService.complete(taskId, variables)</code> 完成任务时，可以传入流程变量。</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> variables <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
variables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key3&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

taskService<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span>taskId<span class="token punctuation">,</span> variables<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li><strong>作用范围</strong>：这些变量属于流程实例级别，可以在整个流程实例中访问。</li><li><strong>优先级</strong>：完成任务时设置的变量会覆盖之前同名的流程变量。</li></ul><hr><h4 id="_1-3-使用-taskservice-setvariable-设置任务变量" tabindex="-1"><a class="header-anchor" href="#_1-3-使用-taskservice-setvariable-设置任务变量" aria-hidden="true">#</a> 1.3 使用 <code>taskService.setVariable</code> 设置任务变量</h4><p>使用 <code>taskService.setVariable</code> 可以在任务执行过程中设置流程变量。</p><div class="language-java" data-ext="java"><pre class="language-java"><code>taskService<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span>taskId<span class="token punctuation">,</span> <span class="token string">&quot;key4&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li><strong>作用范围</strong>：这些变量属于流程实例级别，可以在整个流程实例中访问。</li><li><strong>优先级</strong>：与完成任务时设置的变量相同，会覆盖之前同名的流程变量。</li></ul><hr><h4 id="_1-4-使用-taskservice-setvariablelocal-设置任务本地变量" tabindex="-1"><a class="header-anchor" href="#_1-4-使用-taskservice-setvariablelocal-设置任务本地变量" aria-hidden="true">#</a> 1.4 使用 <code>taskService.setVariableLocal</code> 设置任务本地变量</h4><p>使用 <code>taskService.setVariableLocal</code> 可以设置任务本地变量。</p><div class="language-java" data-ext="java"><pre class="language-java"><code>taskService<span class="token punctuation">.</span><span class="token function">setVariableLocal</span><span class="token punctuation">(</span>taskId<span class="token punctuation">,</span> <span class="token string">&quot;key5&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li><strong>作用范围</strong>：这些变量属于任务级别，只能在当前任务中访问。</li><li><strong>优先级</strong>：任务本地变量不会覆盖流程实例级别的变量，两者是独立的。</li></ul><hr><h3 id="_2-变量优先级和覆盖规则" tabindex="-1"><a class="header-anchor" href="#_2-变量优先级和覆盖规则" aria-hidden="true">#</a> 2. <strong>变量优先级和覆盖规则</strong></h3><h4 id="_2-1-流程实例变量-vs-任务本地变量" tabindex="-1"><a class="header-anchor" href="#_2-1-流程实例变量-vs-任务本地变量" aria-hidden="true">#</a> 2.1 流程实例变量 vs 任务本地变量</h4><ul><li><strong>流程实例变量</strong>：在整个流程实例中共享，优先级较低（可以被后续设置的流程实例变量覆盖）。</li><li><strong>任务本地变量</strong>：仅在当前任务中有效，优先级较高（不会覆盖流程实例变量，也不会被流程实例变量覆盖）。</li></ul><h4 id="_2-2-变量覆盖规则" tabindex="-1"><a class="header-anchor" href="#_2-2-变量覆盖规则" aria-hidden="true">#</a> 2.2 变量覆盖规则</h4><ul><li>如果使用 <code>taskService.complete(taskId, variables)</code> 或 <code>taskService.setVariable</code> 设置变量，会覆盖同名的流程实例变量。</li><li>如果使用 <code>taskService.setVariableLocal</code> 设置变量，不会影响流程实例变量，任务本地变量仅在当前任务中有效。</li></ul><h4 id="_2-3-变量查询规则" tabindex="-1"><a class="header-anchor" href="#_2-3-变量查询规则" aria-hidden="true">#</a> 2.3 变量查询规则</h4><ul><li>使用 <code>runtimeService.getVariable</code> 查询变量时，只能查询流程实例变量。</li><li>使用 <code>taskService.getVariable</code> 查询变量时，会先查询任务本地变量，如果不存在，则查询流程实例变量。</li><li>使用 <code>taskService.getVariableLocal</code> 查询变量时，只能查询任务本地变量。</li></ul><hr><h3 id="_3-示例代码" tabindex="-1"><a class="header-anchor" href="#_3-示例代码" aria-hidden="true">#</a> 3. <strong>示例代码</strong></h3><p>以下是一个完整的示例，展示不同方式设置变量的行为：</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token comment">// 启动流程时设置变量</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> startVariables <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
startVariables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
startVariables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ProcessInstance</span> processInstance <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">startProcessInstanceByKey</span><span class="token punctuation">(</span><span class="token string">&quot;myProcess&quot;</span><span class="token punctuation">,</span> businessKey<span class="token punctuation">,</span> startVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 查询流程实例变量</span>
<span class="token class-name">String</span> value1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> runtimeService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>processInstance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;key1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;value1&quot;</span>
<span class="token class-name">Integer</span> value2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> runtimeService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>processInstance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;key2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 100</span>

<span class="token comment">// 办理任务时设置变量</span>
<span class="token class-name">Task</span> task <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">processInstanceId</span><span class="token punctuation">(</span>processInstance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> completeVariables <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
completeVariables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key2&quot;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
completeVariables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;key3&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
taskService<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> completeVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 查询更新后的流程实例变量</span>
value2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> runtimeService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>processInstance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;key2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 200</span>
<span class="token class-name">Boolean</span> value3 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span> runtimeService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>processInstance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;key3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token comment">// 使用 setVariable 设置变量</span>
<span class="token class-name">Task</span> newTask <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">processInstanceId</span><span class="token punctuation">(</span>processInstance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
taskService<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span>newTask<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;key4&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 查询更新后的流程实例变量</span>
<span class="token class-name">String</span> value4 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> runtimeService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>processInstance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;key4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;value4&quot;</span>

<span class="token comment">// 使用 setVariableLocal 设置任务本地变量</span>
taskService<span class="token punctuation">.</span><span class="token function">setVariableLocal</span><span class="token punctuation">(</span>newTask<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;key5&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;value5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 查询任务本地变量</span>
<span class="token class-name">String</span> value5 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> taskService<span class="token punctuation">.</span><span class="token function">getVariableLocal</span><span class="token punctuation">(</span>newTask<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;key5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;value5&quot;</span>
<span class="token class-name">String</span> value5Global <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> runtimeService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>processInstance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;key5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null</span>
</code></pre></div><hr><h3 id="_4-总结" tabindex="-1"><a class="header-anchor" href="#_4-总结" aria-hidden="true">#</a> 4. <strong>总结</strong></h3><table><thead><tr><th><strong>设置方式</strong></th><th><strong>作用范围</strong></th><th><strong>优先级</strong></th><th><strong>覆盖规则</strong></th></tr></thead><tbody><tr><td><code>runtimeService.startProcessInstanceByKey</code></td><td>流程实例级别</td><td>低</td><td>可以被后续设置的流程实例变量覆盖</td></tr><tr><td><code>taskService.complete(taskId, variables)</code></td><td>流程实例级别</td><td>高</td><td>覆盖同名的流程实例变量</td></tr><tr><td><code>taskService.setVariable</code></td><td>流程实例级别</td><td>高</td><td>覆盖同名的流程实例变量</td></tr><tr><td><code>taskService.setVariableLocal</code></td><td>任务级别</td><td>独立</td><td>不影响流程实例变量</td></tr></tbody></table><ul><li><strong>流程实例变量</strong>：在整个流程中共享，优先级较低。</li><li><strong>任务本地变量</strong>：仅在当前任务中有效，优先级较高，且独立于流程实例变量。</li><li><strong>覆盖规则</strong>：后设置的变量会覆盖同名的流程实例变量，任务本地变量不会覆盖流程实例变量。</li></ul><p>在 Activiti 中，<code>taskService.complete(taskId, variables)</code> 和 <code>taskService.setVariable(taskId, &quot;flag&quot;, 0)</code> 都是设置流程变量的方式，但它们的行为和优先级有所不同。以下是对它们的详细解释：</p><hr><h3 id="_1-taskservice-complete-taskid-variables" tabindex="-1"><a class="header-anchor" href="#_1-taskservice-complete-taskid-variables" aria-hidden="true">#</a> 1. <strong><code>taskService.complete(taskId, variables)</code></strong></h3><ul><li><strong>作用</strong>：完成任务并设置流程变量。</li><li><strong>行为</strong>： <ul><li>完成任务后，流程会继续执行到下一个节点。</li><li>传入的变量会作为流程实例变量保存。</li></ul></li><li><strong>优先级</strong>： <ul><li>这些变量会在任务完成时设置，覆盖之前同名的流程实例变量。</li><li>如果任务完成后流程进入下一个节点，这些变量会立即生效。</li></ul></li></ul><hr><h3 id="_2-taskservice-setvariable-taskid-flag-0" tabindex="-1"><a class="header-anchor" href="#_2-taskservice-setvariable-taskid-flag-0" aria-hidden="true">#</a> 2. <strong><code>taskService.setVariable(taskId, &quot;flag&quot;, 0)</code></strong></h3><ul><li><strong>作用</strong>：在当前任务执行过程中设置流程变量。</li><li><strong>行为</strong>： <ul><li>设置的变量会立即生效，但不会触发任务完成或流程流转。</li><li>这些变量会覆盖之前同名的流程实例变量。</li></ul></li><li><strong>优先级</strong>： <ul><li>设置的变量会立即覆盖同名的流程实例变量。</li></ul></li></ul><hr><h3 id="_3-优先级和覆盖规则" tabindex="-1"><a class="header-anchor" href="#_3-优先级和覆盖规则" aria-hidden="true">#</a> 3. <strong>优先级和覆盖规则</strong></h3><ul><li><strong>优先级</strong>： <ul><li><code>taskService.setVariable(taskId, &quot;flag&quot;, 0)</code> 的优先级高于 <code>taskService.complete(taskId, variables)</code>。</li><li>这是因为 <code>setVariable</code> 是立即生效的，而 <code>complete</code> 是在任务完成时才生效。</li></ul></li><li><strong>覆盖规则</strong>： <ul><li>如果在调用 <code>taskService.complete(taskId, variables)</code> 之前调用了 <code>taskService.setVariable(taskId, &quot;flag&quot;, 0)</code>，那么 <code>setVariable</code> 设置的变量会立即覆盖同名的流程实例变量。</li><li>如果在 <code>complete</code> 中传入了同名的变量，那么 <code>complete</code> 中的变量会覆盖 <code>setVariable</code> 设置的变量。</li></ul></li></ul><hr><h3 id="_4-示例代码" tabindex="-1"><a class="header-anchor" href="#_4-示例代码" aria-hidden="true">#</a> 4. <strong>示例代码</strong></h3><p>以下是一个示例，展示两者的优先级和覆盖行为：</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token comment">// 启动流程</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> startVariables <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
startVariables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;flag&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ProcessInstance</span> processInstance <span class="token operator">=</span> runtimeService<span class="token punctuation">.</span><span class="token function">startProcessInstanceByKey</span><span class="token punctuation">(</span><span class="token string">&quot;myProcess&quot;</span><span class="token punctuation">,</span> startVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 查询任务</span>
<span class="token class-name">Task</span> task <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">processInstanceId</span><span class="token punctuation">(</span>processInstance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 使用 setVariable 设置变量</span>
taskService<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;flag&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 查询变量</span>
<span class="token class-name">Integer</span> flagValue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> runtimeService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>processInstance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;flag&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;After setVariable, flag = &quot;</span> <span class="token operator">+</span> flagValue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: 0</span>

<span class="token comment">// 使用 complete 完成任务并设置变量</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> completeVariables <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
completeVariables<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;flag&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
taskService<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> completeVariables<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 查询变量</span>
flagValue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> runtimeService<span class="token punctuation">.</span><span class="token function">getVariable</span><span class="token punctuation">(</span>processInstance<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;flag&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;After complete, flag = &quot;</span> <span class="token operator">+</span> flagValue<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出: 2</span>
</code></pre></div><hr><h3 id="_5-总结" tabindex="-1"><a class="header-anchor" href="#_5-总结" aria-hidden="true">#</a> 5. <strong>总结</strong></h3><table><thead><tr><th><strong>操作</strong></th><th><strong>行为</strong></th><th><strong>优先级</strong></th><th><strong>覆盖规则</strong></th></tr></thead><tbody><tr><td><code>taskService.setVariable(taskId, &quot;flag&quot;, 0)</code></td><td>立即设置流程变量，覆盖同名变量。</td><td>高</td><td>立即覆盖同名变量。</td></tr><tr><td><code>taskService.complete(taskId, variables)</code></td><td>完成任务并设置流程变量，变量在任务完成时生效。</td><td>低</td><td>覆盖 <code>setVariable</code> 设置的变量。</td></tr></tbody></table><ul><li><strong>优先级</strong>：<code>setVariable</code> 的优先级高于 <code>complete</code>。</li><li><strong>覆盖规则</strong>： <ul><li><code>setVariable</code> 会立即覆盖同名变量。</li><li><code>complete</code> 会在任务完成时覆盖 <code>setVariable</code> 设置的变量。</li></ul></li></ul><p>因此，如果你在任务完成前调用了 <code>setVariable</code>，那么 <code>setVariable</code> 的值会立即生效；如果在 <code>complete</code> 中传入了同名变量，那么 <code>complete</code> 的值会覆盖 <code>setVariable</code> 的值。</p>`,58),o=[e];function c(l,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","bpmn_variables.html.vue"]]);export{k as default};
