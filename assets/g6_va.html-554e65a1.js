import{_ as p,M as o,p as l,q as c,R as n,t,N as s,a1 as e}from"./framework-d81ad7e5.js";const r={},i=n("h2",{id:"初始化-实例化图",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#初始化-实例化图","aria-hidden":"true"},"#"),t(" 初始化/实例化图")],-1),u=n("code",null,"new G6.Graph(config)",-1),d=n("code",null,"config",-1),k={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/graph#%E5%89%8D%E6%8F%90%E4%BB%A3%E7%A0%81",target:"_blank",rel:"noopener noreferrer"},g=e(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">&#39;mountNode&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 指定图画布的容器 id，与第 9 行的容器对应</span>
  <span class="token comment">// 画布宽高</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="必要配置项" tabindex="-1"><a class="header-anchor" href="#必要配置项" aria-hidden="true">#</a> 必要配置项</h3><p>上面代码中实例化 Graph 的部分使用了三个必要的配置项：</p><ul><li><code>container</code></li></ul><p>类型：String | Object。图的 DOM 容器。可以是 String，为 DOM 容器的 <code>id</code>。也可以是 Object ，为 DOM 对象。</p><ul><li><code>width</code>、<code>height</code></li></ul><p>类型：Number。图的画布的宽度和高度。</p><h3 id="常用配置项" tabindex="-1"><a class="header-anchor" href="#常用配置项" aria-hidden="true">#</a> 常用配置项</h3>`,8),h={href:"https://antv-g6.gitee.io/zh/docs/api/Graph",target:"_blank",rel:"noopener noreferrer"},y=n("h4",{id:"使用-canvas-或-svg-渲染",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用-canvas-或-svg-渲染","aria-hidden":"true"},"#"),t(" 使用 canvas 或 svg 渲染")],-1),f=n("ul",null,[n("li",null,[n("code",null,"renderer")])],-1),m=n("em",null,"除 V3.3.x 外其他版本均支持。",-1),x=n("code",null,"'dom'",-1),_={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/custom-node#5-%E4%BD%BF%E7%94%A8-dom-%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8A%82%E7%82%B9",target:"_blank",rel:"noopener noreferrer"},b=e('<h4 id="自适应画布" tabindex="-1"><a class="header-anchor" href="#自适应画布" aria-hidden="true">#</a> 自适应画布</h4><ul><li><code>fitView</code></li></ul><p>类型：Boolean；默认：&#39;false&#39;。图是否自适应画布。</p><ul><li><code>fitViewPadding</code></li></ul><p>类型：Number | Array；默认：0。图自适应画布时的四周留白像素值。<code>fitView</code> 为 <code>true</code> 时生效。</p><ul><li><code>fitCenter</code></li></ul><p>类型：Boolean；默认：&#39;false&#39;。是否平移图使其中心对齐到画布中心。<em>v3.5.1 后支持。</em></p><h4 id="全局元素配置" tabindex="-1"><a class="header-anchor" href="#全局元素配置" aria-hidden="true">#</a> 全局元素配置</h4><ul><li><code>defaultNode</code></li></ul>',9),A={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/defaultNode",target:"_blank",rel:"noopener noreferrer"},v=n("ul",null,[n("li",null,[n("code",null,"defaultEdge")])],-1),w={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/edges/defaultEdge",target:"_blank",rel:"noopener noreferrer"},j=n("ul",null,[n("li",null,[n("code",null,"nodeStateStyles")])],-1),S={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/states/state",target:"_blank",rel:"noopener noreferrer"},E=n("ul",null,[n("li",null,[n("code",null,"edgeStateStyles")])],-1),z={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/states/state",target:"_blank",rel:"noopener noreferrer"},B=n("h4",{id:"布局相关",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#布局相关","aria-hidden":"true"},"#"),t(" 布局相关")],-1),G=n("ul",null,[n("li",null,[n("code",null,"layout")])],-1),N={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/layout/graph-layout",target:"_blank",rel:"noopener noreferrer"},C={href:"https://antv-g6.gitee.io/zh/docs/api/graphLayout/guide",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://antv-g6.gitee.io/zh/docs/api/treeGraphLayout/guide",target:"_blank",rel:"noopener noreferrer"},D=n("h4",{id:"交互行为相关",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#交互行为相关","aria-hidden":"true"},"#"),t(" 交互行为相关")],-1),q=n("ul",null,[n("li",null,[n("code",null,"modes")])],-1),O={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/states/mode",target:"_blank",rel:"noopener noreferrer"},R=n("h4",{id:"动画相关",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#动画相关","aria-hidden":"true"},"#"),t(" 动画相关")],-1),I=n("ul",null,[n("li",null,[n("code",null,"animate")])],-1),P=n("p",null,"类型：Boolean；默认：'false'。是否启用全局动画。启用后，布局变化时将会以动画形式变换节点位置。",-1),M=n("ul",null,[n("li",null,[n("code",null,"animateCfg")])],-1),F={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/animation",target:"_blank",rel:"noopener noreferrer"},T=n("h4",{id:"插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#插件","aria-hidden":"true"},"#"),t(" 插件")],-1),L=n("ul",null,[n("li",null,[n("code",null,"plugins")])],-1),W={href:"https://antv-g6.gitee.io/zh/docs/manual/tutorial/plugins",target:"_blank",rel:"noopener noreferrer"},V=e(`<h2 id="常用函数" tabindex="-1"><a class="header-anchor" href="#常用函数" aria-hidden="true">#</a> 常用函数</h2><p>在前面的代码中使用了两个必要的函数：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 读取数据</span>
graph<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 渲染图</span>
graph<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li><code>data(data)</code>：读取数据源 <code>data</code> 到图实例 <code>graph</code> 中。</li><li>render()：渲染图。</li></ul>`,4),X={href:"https://antv-g6.gitee.io/zh/docs/api/Graph",target:"_blank",rel:"noopener noreferrer"},Y=n("h1",{id:"图元素总览",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#图元素总览","aria-hidden":"true"},"#"),t(" 图元素总览")],-1),Z=n("strong",null,"Combo",-1),H={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/shape/shape-keyshape",target:"_blank",rel:"noopener noreferrer"},J=n("li",null,"G6 内置了一系列具有不同基本图形样式的节点/边/ Combo，例如，节点可以是圆形、矩形、图片等。",-1),$={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/defaultNode",target:"_blank",rel:"noopener noreferrer"},K={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/edges/defaultEdge",target:"_blank",rel:"noopener noreferrer"},U={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/combos/defaultCombo",target:"_blank",rel:"noopener noreferrer"},nn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/custom-node",target:"_blank",rel:"noopener noreferrer"},tn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/edges/custom-edge",target:"_blank",rel:"noopener noreferrer"},an={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/combos/custom-combo",target:"_blank",rel:"noopener noreferrer"},sn=n("p",null,"图元素具有公共的通用属性和通用方法。图元素的属性包括：",-1),en=n("code",null,"style",-1),pn=n("code",null,"fill",-1),on=n("code",null,"stroke",-1),ln={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/states/state",target:"_blank",rel:"noopener noreferrer"},cn=n("code",null,"id",-1),rn=n("code",null,"type",-1),un={href:"https://antv-g6.gitee.io/zh/docs/api/graphFunc/item#graphupdateitemitem-model-stack",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://antv-g6.gitee.io/zh/docs/api/Items/itemProperties",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://antv-g6.gitee.io/zh/docs/api/Items/itemMethods",target:"_blank",rel:"noopener noreferrer"},gn={href:"https://antv-g6.gitee.io/zh/docs/api/Graph",target:"_blank",rel:"noopener noreferrer"},hn=e('<h1 id="图形-shape-与-keyshape" tabindex="-1"><a class="header-anchor" href="#图形-shape-与-keyshape" aria-hidden="true">#</a> 图形 Shape 与 keyShape</h1><p>阅读时间约 2 分钟</p><h2 id="图形-shape" tabindex="-1"><a class="header-anchor" href="#图形-shape" aria-hidden="true">#</a> 图形 Shape</h2><p>Shape 指 G6 中的图形、形状，它可以是圆形、矩形、路径等。它一般与 G6 中的节点、边、Combo 相关。<strong>G6 中的每一种节点/边/ Combo 由一个或多个 Shape 组成。节点、边、Combo、标签文本的配置都会被体现到对应的图形上。</strong></p><h3 id="keyshape" tabindex="-1"><a class="header-anchor" href="#keyshape" aria-hidden="true">#</a> KeyShape</h3><p>如上所述，每一种节点/边/ Combo 都有一个唯一的关键图形 keyShape。keyShape 是在节点/边/ Combo 的 <code>draw()</code> 方法或 <code>drawShape()</code> 方法中返回的图形对象。它有两个主要特点：</p><h3 id="响应样式" tabindex="-1"><a class="header-anchor" href="#响应样式" aria-hidden="true">#</a> 响应样式</h3>',7),yn=n("code",null,"style",-1),fn=n("code",null,"nodeStateStyles",-1),mn=n("code",null,"edgeStateStyles",-1),xn=n("code",null,"comboStateStyles",-1),_n=n("code",null,"stateStyles",-1),bn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/states/state#%E9%85%8D%E7%BD%AE-state-%E6%A0%B7%E5%BC%8F",target:"_blank",rel:"noopener noreferrer"},An={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/custom-node",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/edges/custom-edge",target:"_blank",rel:"noopener noreferrer"},wn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/combos/custom-combo",target:"_blank",rel:"noopener noreferrer"},jn=n("h3",{id:"shape-的生命周期",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#shape-的生命周期","aria-hidden":"true"},"#"),t(" Shape 的生命周期")],-1),Sn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/custom-node",target:"_blank",rel:"noopener noreferrer"},En={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/edges/custom-edge",target:"_blank",rel:"noopener noreferrer"},zn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/combos/custom-combo",target:"_blank",rel:"noopener noreferrer"},Bn=e("<p>从整体来看，Shape 的生命周期分为：</p><ul><li>初始化渲染；</li><li>更新；</li><li>操作；</li><li>销毁。</li></ul><p>Shape 作为 Graph 上的核心元素，这几个阶段都需要考虑，但是销毁可以交给 Graph 来处理，所以在定义 Shape 时不需要考虑，仅需要考虑三个阶段即可：</p><ul><li>绘制：从无到有的绘制 Shape 及文本；</li><li>更新：数据发生改变导致 Shape 及文本发生变化；</li><li>操作：给 Shape 添加状态，如：selected，active 等。</li></ul><p>所以我们在设计自定义节点/边/ Combo 时，定义了三个方法，若需要自定义节点/边/ Combo ，需要有选择性地复写它们：</p><ul><li><code>draw(cfg, group)</code>: 绘制，提供了绘制的配置项（数据定义时透传过来）和图形容器，<strong>必须</strong>返回合理的图形作为 keyShape；</li><li><code>update(cfg, n)</code>: 更新，更新时的配置项（更新的字段和原始字段的合并）和元素对象；</li><li><code>setState(name, value, item)</code>: 响应节点/边/ Combo 状态的变化。</li></ul>",6),Gn={href:"https://antv-g6.gitee.io/zh/docs/api/registerItem",target:"_blank",rel:"noopener noreferrer"},Nn=n("strong",null,"由一个或多个",-1),Cn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/shape/shape-keyshape",target:"_blank",rel:"noopener noreferrer"},Qn=n("strong",null,"图形 Shape",-1),Dn=n("strong",null,"组成",-1),qn=n("code",null,"draw",-1),On=n("code",null,"group.addShape",-1),Rn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/shape/shape-and-properties#%E5%9C%86%E5%9B%BE%E5%BD%A2-circle",target:"_blank",rel:"noopener noreferrer"},In={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/shape/shape-and-properties#%E7%9F%A9%E5%BD%A2%E5%9B%BE%E5%BD%A2-rect",target:"_blank",rel:"noopener noreferrer"},Pn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/shape/shape-and-properties#%E6%A4%AD%E5%9C%86%E5%9B%BE%E5%BD%A2-ellipse",target:"_blank",rel:"noopener noreferrer"},Mn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/shape/shape-and-properties#%E5%A4%9A%E8%BE%B9%E5%BD%A2%E5%9B%BE%E5%BD%A2-polygon",target:"_blank",rel:"noopener noreferrer"},Fn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/shape/shape-and-properties#%E6%89%87%E5%BD%A2%E5%9B%BE%E5%BD%A2-fan",target:"_blank",rel:"noopener noreferrer"},Tn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/shape/shape-and-properties#%E5%9B%BE%E7%89%87%E5%9B%BE%E5%BD%A2-image",target:"_blank",rel:"noopener noreferrer"},Ln={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/shape/shape-and-properties#%E6%A0%87%E8%AE%B0%E5%9B%BE%E5%BD%A2-marker",target:"_blank",rel:"noopener noreferrer"},Wn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/shape/shape-and-properties#%E8%B7%AF%E5%BE%84-path",target:"_blank",rel:"noopener noreferrer"},Vn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/shape/shape-and-properties#%E6%96%87%E6%9C%AC-text",target:"_blank",rel:"noopener noreferrer"},Xn={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/shape/shape-and-properties#dom-svg",target:"_blank",rel:"noopener noreferrer"},Yn=n("code",null,"renderer",-1),Zn=n("code",null,"'svg'",-1),Hn=n("h2",{id:"各图形-shape-的通用属性",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#各图形-shape-的通用属性","aria-hidden":"true"},"#"),t(" 各图形 Shape 的通用属性")],-1),Jn=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"属性名"),n("th",{style:{"text-align":"left"}},"含义"),n("th",{style:{"text-align":"left"}},"备注")])],-1),$n=n("tr",null,[n("td",{style:{"text-align":"left"}},"fill"),n("td",{style:{"text-align":"left"}},"设置用于填充绘画的颜色、渐变或模式"),n("td",{style:{"text-align":"left"}},[t("对应 Canvas 属性 "),n("code",null,"fillStyle")])],-1),Kn=n("tr",null,[n("td",{style:{"text-align":"left"}},"stroke"),n("td",{style:{"text-align":"left"}},"设置用于笔触的颜色、渐变或模式"),n("td",{style:{"text-align":"left"}},[t("对应 Canvas 属性 "),n("code",null,"strokeStyle")])],-1),Un=n("tr",null,[n("td",{style:{"text-align":"left"}},"lineWidth"),n("td",{style:{"text-align":"left"}},"描边宽度"),n("td",{style:{"text-align":"left"}})],-1),nt=n("tr",null,[n("td",{style:{"text-align":"left"}},"lineDash"),n("td",{style:{"text-align":"left"}},"描边虚线"),n("td",{style:{"text-align":"left"}},"Number[] 类型代表实、虚长度")],-1),tt=n("tr",null,[n("td",{style:{"text-align":"left"}},"shadowColor"),n("td",{style:{"text-align":"left"}},"设置用于阴影的颜色"),n("td",{style:{"text-align":"left"}})],-1),at=n("tr",null,[n("td",{style:{"text-align":"left"}},"shadowBlur"),n("td",{style:{"text-align":"left"}},"设置用于阴影的模糊级别"),n("td",{style:{"text-align":"left"}},"数值越大，越模糊")],-1),st=n("tr",null,[n("td",{style:{"text-align":"left"}},"shadowOffsetX"),n("td",{style:{"text-align":"left"}},"设置阴影距形状的水平距离"),n("td",{style:{"text-align":"left"}})],-1),et=n("tr",null,[n("td",{style:{"text-align":"left"}},"shadowOffsetY"),n("td",{style:{"text-align":"left"}},"设置阴影距形状的垂直距离"),n("td",{style:{"text-align":"left"}})],-1),pt=n("tr",null,[n("td",{style:{"text-align":"left"}},"opacity"),n("td",{style:{"text-align":"left"}},"设置绘图的当前 alpha 或透明值"),n("td",{style:{"text-align":"left"}},[t("对应 Canvas 属性 "),n("code",null,"globalAlpha")])],-1),ot=n("tr",null,[n("td",{style:{"text-align":"left"}},"fillOpacity"),n("td",{style:{"text-align":"left"}},"设置填充的 alpha 或透明值"),n("td",{style:{"text-align":"left"}})],-1),lt=n("td",{style:{"text-align":"left"}},"cursor",-1),ct={style:{"text-align":"left"}},rt={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/cursor",target:"_blank",rel:"noopener noreferrer"},it=n("td",{style:{"text-align":"left"}},null,-1),ut=e(`<h3 id="用法" tabindex="-1"><a class="header-anchor" href="#用法" aria-hidden="true">#</a> 用法</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>group<span class="token punctuation">.</span><span class="token function">addShape</span><span class="token punctuation">(</span><span class="token string">&#39;rect&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">shadowOffsetX</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token literal-property property">shadowOffsetY</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token literal-property property">shadowColor</span><span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">shadowBlur</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0.8</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// must be assigned in G6 3.3 and later versions. it can be any value you want</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;rect-shape&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="各图形-shape-的通用方法" tabindex="-1"><a class="header-anchor" href="#各图形-shape-的通用方法" aria-hidden="true">#</a> 各图形 Shape 的通用方法</h2><h3 id="attr" tabindex="-1"><a class="header-anchor" href="#attr" aria-hidden="true">#</a> attr()</h3><p>设置或获取实例的绘图属性。</p><h3 id="attr-name" tabindex="-1"><a class="header-anchor" href="#attr-name" aria-hidden="true">#</a> attr(name)</h3><p>获取实例的属性值。</p><div class="language-text" data-ext="text"><pre class="language-text"><code>const width = shape.attr(&#39;width&#39;);
</code></pre></div><h3 id="attr-name-value" tabindex="-1"><a class="header-anchor" href="#attr-name-value" aria-hidden="true">#</a> attr(name, value)</h3><p>更新实例的单个绘图属性。</p><h3 id="attr-1" tabindex="-1"><a class="header-anchor" href="#attr-1" aria-hidden="true">#</a> attr({...})</h3><p>批量更新实例绘图属性。</p><div class="language-text" data-ext="text"><pre class="language-text"><code>rect.attr({
    fill: &#39;#999&#39;,
    stroke: &#39;#666&#39;
});
</code></pre></div><h2 id="圆图形-circle" tabindex="-1"><a class="header-anchor" href="#圆图形-circle" aria-hidden="true">#</a> 圆图形 Circle</h2><h3 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h3><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:left;">x</td><td style="text-align:left;">圆心的 x 坐标</td></tr><tr><td style="text-align:left;">y</td><td style="text-align:left;">圆心的 y 坐标</td></tr><tr><td style="text-align:left;">r</td><td style="text-align:left;">圆的半径</td></tr></tbody></table><h3 id="用法-1" tabindex="-1"><a class="header-anchor" href="#用法-1" aria-hidden="true">#</a> 用法</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>group<span class="token punctuation">.</span><span class="token function">addShape</span><span class="token punctuation">(</span><span class="token string">&#39;circle&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">r</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// must be assigned in G6 3.3 and later versions. it can be any value you want</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;circle-shape&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="矩形图形-rect" tabindex="-1"><a class="header-anchor" href="#矩形图形-rect" aria-hidden="true">#</a> 矩形图形 Rect</h2><h3 id="属性-1" tabindex="-1"><a class="header-anchor" href="#属性-1" aria-hidden="true">#</a> 属性</h3><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">含义</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">x</td><td style="text-align:left;">矩形左上角的 x 坐标</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">y</td><td style="text-align:left;">矩形左上角的 y 坐标</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">width</td><td style="text-align:left;">矩形的宽度</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">height</td><td style="text-align:left;">矩形的高度</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">radius</td><td style="text-align:left;">定义圆角</td><td style="text-align:left;">支持整数或数组形式， 分别对应左上、右上、右下、左下角的半径： - radius 缩写为 1 或 [ 1 ] 相当于 [ 1, 1, 1, 1 ] - radius 缩写为 [ 1, 2 ] 相当于 [ 1, 2, 1, 2 ] - radius 缩写为 [ 1, 2, 3 ] 相当于 [ 1, 2, 3, 2 ]</td></tr></tbody></table><h3 id="用法-2" tabindex="-1"><a class="header-anchor" href="#用法-2" aria-hidden="true">#</a> 用法</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>group<span class="token punctuation">.</span><span class="token function">addShape</span><span class="token punctuation">(</span><span class="token string">&#39;rect&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span>
    <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// must be assigned in G6 3.3 and later versions. it can be any value you want</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;rect-shape&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="椭圆图形-ellipse" tabindex="-1"><a class="header-anchor" href="#椭圆图形-ellipse" aria-hidden="true">#</a> 椭圆图形 Ellipse</h2><h3 id="属性-2" tabindex="-1"><a class="header-anchor" href="#属性-2" aria-hidden="true">#</a> 属性</h3><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:left;">x</td><td style="text-align:left;">圆心的 x 坐标</td></tr><tr><td style="text-align:left;">y</td><td style="text-align:left;">圆心的 y 坐标</td></tr><tr><td style="text-align:left;">rx</td><td style="text-align:left;">水平半径</td></tr><tr><td style="text-align:left;">ry</td><td style="text-align:left;">垂直半径</td></tr></tbody></table><h3 id="用法-3" tabindex="-1"><a class="header-anchor" href="#用法-3" aria-hidden="true">#</a> 用法</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>group<span class="token punctuation">.</span><span class="token function">addShape</span><span class="token punctuation">(</span><span class="token string">&#39;ellipse&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rx</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ry</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// must be assigned in G6 3.3 and later versions. it can be any value you want</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ellipse-shape&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="多边形图形-polygon" tabindex="-1"><a class="header-anchor" href="#多边形图形-polygon" aria-hidden="true">#</a> 多边形图形 Polygon</h2><h3 id="属性-3" tabindex="-1"><a class="header-anchor" href="#属性-3" aria-hidden="true">#</a> 属性</h3><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">含义</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">points</td><td style="text-align:left;">多边形的所有端点坐标</td><td style="text-align:left;">数组形式</td></tr></tbody></table><h3 id="用法-4" tabindex="-1"><a class="header-anchor" href="#用法-4" aria-hidden="true">#</a> 用法</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>group<span class="token punctuation">.</span><span class="token function">addShape</span><span class="token punctuation">(</span><span class="token string">&#39;polygon&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">points</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// must be assigned in G6 3.3 and later versions. it can be any value you want</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;polygon-shape&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="图片图形-image" tabindex="-1"><a class="header-anchor" href="#图片图形-image" aria-hidden="true">#</a> 图片图形 Image</h2><h3 id="属性-4" tabindex="-1"><a class="header-anchor" href="#属性-4" aria-hidden="true">#</a> 属性</h3><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">含义</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">x</td><td style="text-align:left;">图片左上角的 x 坐标</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">y</td><td style="text-align:left;">图片左上角的 y 坐标</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">width</td><td style="text-align:left;">图片宽度</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">height</td><td style="text-align:left;">图片高度</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">img</td><td style="text-align:left;">图片源</td><td style="text-align:left;">G6 支持多种格式的图片：url、ImageData、Image、canvas</td></tr></tbody></table><h3 id="用法-5" tabindex="-1"><a class="header-anchor" href="#用法-5" aria-hidden="true">#</a> 用法</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>group<span class="token punctuation">.</span><span class="token function">addShape</span><span class="token punctuation">(</span><span class="token string">&#39;image&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">img</span><span class="token operator">:</span> <span class="token string">&#39;https://g.alicdn.com/cm-design/arms-trace/1.0.155/styles/armsTrace/images/TAIR.png&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// must be assigned in G6 3.3 and later versions. it can be any value you want</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;image-shape&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="路径-path" tabindex="-1"><a class="header-anchor" href="#路径-path" aria-hidden="true">#</a> 路径 Path</h2><p><strong>⚠️ 注意:</strong> 当边太细交互不易命中时，请设置 <code>lineAppendWidth</code> 属性值。</p><h3 id="属性-5" tabindex="-1"><a class="header-anchor" href="#属性-5" aria-hidden="true">#</a> 属性</h3><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">含义</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">path</td><td style="text-align:left;">线条路径</td><td style="text-align:left;">可以是 String 形式，也可以是线段的数组。</td></tr><tr><td style="text-align:left;">startArrow</td><td style="text-align:left;">起始端的箭头</td><td style="text-align:left;">为 <code>true</code> 时在边的结束端绘制默认箭头，为 <code>false</code> 时不绘制结束端箭头。也可以是一个通过 path 自定义的箭头</td></tr><tr><td style="text-align:left;">endArrow</td><td style="text-align:left;">末尾端的箭头</td><td style="text-align:left;">为 <code>true</code> 时在边的开始端绘制默认箭头，为 <code>false</code> 时不绘制开始端箭头。也可以是一个通过 path 自定义的箭头</td></tr><tr><td style="text-align:left;">lineAppendWidth</td><td style="text-align:left;">边的击中范围</td><td style="text-align:left;">提升边的击中范围，扩展响应范围，数值越大，响应范围越广</td></tr><tr><td style="text-align:left;">lineCap</td><td style="text-align:left;">设置线条的结束端点样式</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">lineJoin</td><td style="text-align:left;">设置两条线相交时，所创建的拐角形状</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">lineWidth</td><td style="text-align:left;">设置当前的线条宽度</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">miterLimit</td><td style="text-align:left;">设置最大斜接长度</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">lineDash</td><td style="text-align:left;">设置线的虚线样式，可以指定一个数组</td><td style="text-align:left;">一组描述交替绘制线段和间距（坐标空间单位）长度的数字。 如果数组元素的数量是奇数， 数组的元素会被复制并重复。例如， [5, 15, 25] 会变成 [5, 15, 25, 5, 15, 25]。</td></tr></tbody></table><h3 id="用法-6" tabindex="-1"><a class="header-anchor" href="#用法-6" aria-hidden="true">#</a> 用法</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>group<span class="token punctuation">.</span><span class="token function">addShape</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">startArrow</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 自定义箭头指向(0, 0)，尾部朝向 x 轴正方向的 path</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;M 0,0 L 20,10 L 20,-10 Z&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// 箭头的偏移量，负值代表向 x 轴正方向移动</span>
      <span class="token comment">// d: -10,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">endArrow</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 自定义箭头指向(0, 0)，尾部朝向 x 轴正方向的 path</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;M 0,0 L 20,10 L 20,-10 Z&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// 箭头的偏移量，负值代表向 x 轴正方向移动</span>
      <span class="token comment">// d: -10,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">[</span><span class="token string">&#39;M&#39;</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span><span class="token string">&#39;L&#39;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;#000&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lineWidth</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lineAppendWidth</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// must be assigned in G6 3.3 and later versions. it can be any value you want</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;path-shape&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="文本-text" tabindex="-1"><a class="header-anchor" href="#文本-text" aria-hidden="true">#</a> 文本 Text</h2><h3 id="属性-6" tabindex="-1"><a class="header-anchor" href="#属性-6" aria-hidden="true">#</a> 属性</h3><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">含义</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">fill</td><td style="text-align:left;">设置用于填充绘画的颜色、渐变或模式</td><td style="text-align:left;">对应 Canvas 属性 <code>fillStyle</code></td></tr><tr><td style="text-align:left;">stroke</td><td style="text-align:left;">设置用于笔触的颜色、渐变或模式</td><td style="text-align:left;">对应 Canvas 属性 <code>strokeStyle</code></td></tr><tr><td style="text-align:left;">shadowColor</td><td style="text-align:left;">设置用于阴影的颜色</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">shadowBlur</td><td style="text-align:left;">设置用于阴影的模糊级别</td><td style="text-align:left;">数值越大，越模糊</td></tr><tr><td style="text-align:left;">shadowOffsetX</td><td style="text-align:left;">设置阴影距形状的水平距离</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">shadowOffsetY</td><td style="text-align:left;">设置阴影距形状的垂直距离</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">opacity</td><td style="text-align:left;">设置绘图的当前 alpha 或透明值</td><td style="text-align:left;">对应 Canvas 属性 <code>globalAlpha</code></td></tr><tr><td style="text-align:left;">textAlign</td><td style="text-align:left;">设置文本内容的当前对齐方式</td><td style="text-align:left;">支持的属性：<code>center</code> / <code>end</code> / <code>left</code> / <code>right</code> / <code>start</code>，默认值为 <code>start</code></td></tr><tr><td style="text-align:left;">textBaseline</td><td style="text-align:left;">设置在绘制文本时使用的当前文本基线</td><td style="text-align:left;">支持的属性: <code>top</code> / <code>middle</code> / <code>bottom</code> / <code>alphabetic</code> / <code>hanging</code>。默认值为 <code>bottom</code></td></tr><tr><td style="text-align:left;">fontStyle</td><td style="text-align:left;">字体样式</td><td style="text-align:left;">对应 <code>font-style</code></td></tr><tr><td style="text-align:left;">fontVariant</td><td style="text-align:left;">设置为小型大写字母字体</td><td style="text-align:left;">对应 <code>font-variant</code></td></tr><tr><td style="text-align:left;">fontWeight</td><td style="text-align:left;">字体粗细</td><td style="text-align:left;">对应 <code>font-weight</code></td></tr><tr><td style="text-align:left;">fontSize</td><td style="text-align:left;">字体大小</td><td style="text-align:left;">对应 <code>font-size</code></td></tr><tr><td style="text-align:left;">fontFamily</td><td style="text-align:left;">字体系列</td><td style="text-align:left;">对应 <code>font-family</code></td></tr><tr><td style="text-align:left;">lineHeight</td><td style="text-align:left;">行高</td><td style="text-align:left;">对应 <code>line-height</code></td></tr></tbody></table><h3 id="用法-7" tabindex="-1"><a class="header-anchor" href="#用法-7" aria-hidden="true">#</a> 用法</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>group<span class="token punctuation">.</span><span class="token function">addShape</span><span class="token punctuation">(</span><span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&#39;test text&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span>
    <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">&#39;left&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">textBaseline</span><span class="token operator">:</span> <span class="token string">&#39;middle&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;#0000D9&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// must be assigned in G6 3.3 and later versions. it can be any value you want</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;text-shape&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="dom-svg" tabindex="-1"><a class="header-anchor" href="#dom-svg" aria-hidden="true">#</a> DOM svg</h2><ul><li>仅在 Graph 的 <code>renderer</code> 为 <code>&#39;svg&#39;</code> 时可以使用。</li></ul><p><strong>⚠️ 注意:</strong></p><ul><li>只支持原生 HTML DOM，不支持各类 react、vue 组件；</li><li>使用 dom 进行自定义的节点或边，不支持 G6 的交互事件，请使用原生 DOM 的交互事件。</li></ul><h3 id="特殊属性" tabindex="-1"><a class="header-anchor" href="#特殊属性" aria-hidden="true">#</a> 特殊属性</h3><table><thead><tr><th style="text-align:left;">属性名</th><th style="text-align:left;">含义</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">html</td><td style="text-align:left;">DOM 的 html 值</td><td style="text-align:left;"></td></tr></tbody></table><h3 id="用法-8" tabindex="-1"><a class="header-anchor" href="#用法-8" aria-hidden="true">#</a> 用法</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>group<span class="token punctuation">.</span><span class="token function">addShape</span><span class="token punctuation">(</span><span class="token string">&#39;dom&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">width</span><span class="token operator">:</span> cfg<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">height</span><span class="token operator">:</span> cfg<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// DOM&#39;s html</span>
    <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    &lt;div style=&quot;background-color: #fff; border: 2px solid #5B8FF9; border-radius: 5px; width: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
      cfg<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">5</span>
    <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px; height: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cfg<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px; display: flex;&quot;&gt;
      &lt;div style=&quot;height: 100%; width: 33%; background-color: #CDDDFD&quot;&gt;
        &lt;img alt=&quot;img&quot; style=&quot;line-height: 100%; padding-top: 6px; padding-left: 8px;&quot; src=&quot;https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*Q_FQT6nwEC8AAAAAAAAAAABkARQnAQ&quot; width=&quot;20&quot; height=&quot;20&quot; /&gt;  
      &lt;/div&gt;
      &lt;span style=&quot;margin:auto; padding:auto; color: #5B8FF9&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cfg<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span&gt;
    &lt;/div&gt;
      </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// must be assigned in G6 3.3 and later versions. it can be any value you want</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;dom-shape&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">draggable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="内置节点类型说明" tabindex="-1"><a class="header-anchor" href="#内置节点类型说明" aria-hidden="true">#</a> 内置节点类型说明</h2><p>下面表格中显示了内置的各类节点，同时对一些特殊的字段进行了说明：</p>`,59),dt=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"描述"),n("th",{style:{"text-align":"left"}},"默认示例")])],-1),kt=n("td",{style:{"text-align":"left"}},"circle",-1),gt={style:{"text-align":"left"}},ht=n("code",null,"size",-1),yt=n("code",null,"color",-1),ft={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/built-in/circle",target:"_blank",rel:"noopener noreferrer"},mt=n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*H9TrTIiUEegAAAAAAAAAAABkARQnAQ",alt:"img"})],-1),xt=n("td",{style:{"text-align":"left"}},"rect",-1),_t={style:{"text-align":"left"}},bt=n("code",null,"size",-1),At=n("code",null,"color",-1),vt={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/built-in/rect",target:"_blank",rel:"noopener noreferrer"},wt=n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*SrlHQ5dcCoMAAAAAAAAAAABkARQnAQ",alt:"img"})],-1),jt=n("td",{style:{"text-align":"left"}},"ellipse",-1),St={style:{"text-align":"left"}},Et=n("code",null,"size",-1),zt=n("code",null,"color",-1),Bt={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/built-in/ellipse",target:"_blank",rel:"noopener noreferrer"},Gt=n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*RjdlRbuocDIAAAAAAAAAAABkARQnAQ",alt:"img"})],-1),Nt=n("td",{style:{"text-align":"left"}},"diamond",-1),Ct={style:{"text-align":"left"}},Qt=n("code",null,"size",-1),Dt=n("code",null,"color",-1),qt={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/built-in/diamond",target:"_blank",rel:"noopener noreferrer"},Ot=n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*EjiPRJacFTEAAAAAAAAAAABkARQnAQ",alt:"img"})],-1),Rt=n("td",{style:{"text-align":"left"}},"triangle",-1),It={style:{"text-align":"left"}},Pt=n("code",null,"size",-1),Mt=n("code",null,"color",-1),Ft={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/built-in/triangle",target:"_blank",rel:"noopener noreferrer"},Tt=n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*_HqXTadbhzAAAAAAAAAAAABkARQnAQ",alt:"img"})],-1),Lt=n("td",{style:{"text-align":"left"}},"star",-1),Wt={style:{"text-align":"left"}},Vt=n("code",null,"size",-1),Xt=n("code",null,"color",-1),Yt={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/built-in/star",target:"_blank",rel:"noopener noreferrer"},Zt=n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*_euwQpARvhMAAAAAAAAAAABkARQnAQ",alt:"img"})],-1),Ht=n("td",{style:{"text-align":"left"}},"image",-1),Jt={style:{"text-align":"left"}},$t=n("code",null,"size",-1),Kt=n("code",null,"img",-1),Ut=n("code",null,"style",-1),na=n("code",null,"color",-1),ta={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/built-in/image",target:"_blank",rel:"noopener noreferrer"},aa=n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*gtNxQY2RvMwAAAAAAAAAAABkARQnAQ",alt:"img"})],-1),sa=n("td",{style:{"text-align":"left"}},"modelRect",-1),ea={style:{"text-align":"left"}},pa=n("code",null,"size",-1),oa=n("code",null,"color",-1),la=n("code",null,"description",-1),ca=n("code",null,"description",-1),ra={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/built-in/modelRect",target:"_blank",rel:"noopener noreferrer"},ia=n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*MqR9QKfimxUAAAAAAAAAAABkARQnAQ",alt:"img"}),t(),n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*9HKrSKtmNGQAAAAAAAAAAABkARQnAQ",alt:"img"})],-1),ua=n("td",{style:{"text-align":"left"}},"donut",-1),da={style:{"text-align":"left"}},ka=n("code",null,"size",-1),ga=n("code",null,"color",-1),ha=n("code",null,"donutAttrs",-1),ya={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/built-in/donut",target:"_blank",rel:"noopener noreferrer"},fa=n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*NRJ7RpkMPNsAAAAAAAAAAAAAARQnAQ",alt:"img"})],-1),ma=e('<h2 id="节点的通用属性" tabindex="-1"><a class="header-anchor" href="#节点的通用属性" aria-hidden="true">#</a> 节点的通用属性</h2><p>所有内置的节点支持的通用属性：</p><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">是否必须</th><th style="text-align:left;">类型</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">id</td><td style="text-align:left;">true</td><td style="text-align:left;">String</td><td style="text-align:left;">节点唯一 ID，<strong>必须</strong>是唯一的 string</td></tr><tr><td style="text-align:left;">x</td><td style="text-align:left;">false</td><td style="text-align:left;">Number</td><td style="text-align:left;">x 坐标</td></tr><tr><td style="text-align:left;">y</td><td style="text-align:left;">false</td><td style="text-align:left;">Number</td><td style="text-align:left;">y 坐标</td></tr><tr><td style="text-align:left;">type</td><td style="text-align:left;">false</td><td style="text-align:left;">String</td><td style="text-align:left;">指定节点类型，内置节点类型名称或自定义节点的名称。默认为 <code>&#39;circle&#39;</code></td></tr><tr><td style="text-align:left;">size</td><td style="text-align:left;">false</td><td style="text-align:left;">Number / Array</td><td style="text-align:left;">节点的大小</td></tr><tr><td style="text-align:left;">anchorPoints</td><td style="text-align:left;">false</td><td style="text-align:left;">Array</td><td style="text-align:left;">指定边连入节点的连接点的位置（相对于该节点而言），可以为空。例如: <code>[0, 0]</code>，代表节点左上角的锚点，<code>[1, 1]</code>,代表节点右下角的锚点</td></tr><tr><td style="text-align:left;">style</td><td style="text-align:left;">false</td><td style="text-align:left;">Object</td><td style="text-align:left;">节点的样式属性。</td></tr><tr><td style="text-align:left;">label</td><td style="text-align:left;">false</td><td style="text-align:left;">String</td><td style="text-align:left;">文本文字</td></tr><tr><td style="text-align:left;">labelCfg</td><td style="text-align:left;">false</td><td style="text-align:left;">Object</td><td style="text-align:left;">文本配置项</td></tr></tbody></table><h3 id="样式属性-style" tabindex="-1"><a class="header-anchor" href="#样式属性-style" aria-hidden="true">#</a> 样式属性 style</h3><p>Object 类型。通过 <code>style</code> 配置来修改节点的填充色、边框颜色、阴影等属性。下表是 <code>style</code> 对象中常用的配置项：</p>',5),xa=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"是否必须"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"备注")])],-1),_a=n("tr",null,[n("td",{style:{"text-align":"left"}},"fill"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"String"),n("td",{style:{"text-align":"left"}},"节点填充色")],-1),ba=n("tr",null,[n("td",{style:{"text-align":"left"}},"stroke"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"String"),n("td",{style:{"text-align":"left"}},"节点的描边颜色")],-1),Aa=n("tr",null,[n("td",{style:{"text-align":"left"}},"lineWidth"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"描边宽度")],-1),va=n("tr",null,[n("td",{style:{"text-align":"left"}},"lineDash"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number[]"),n("td",{style:{"text-align":"left"}},"描边虚线，数组代表实、虚长度")],-1),wa=n("tr",null,[n("td",{style:{"text-align":"left"}},"shadowColor"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"String"),n("td",{style:{"text-align":"left"}},"阴影颜色")],-1),ja=n("tr",null,[n("td",{style:{"text-align":"left"}},"shadowBlur"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"阴影范围")],-1),Sa=n("tr",null,[n("td",{style:{"text-align":"left"}},"shadowOffsetX"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"阴影 x 方向偏移量")],-1),Ea=n("tr",null,[n("td",{style:{"text-align":"left"}},"shadowOffsetY"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"阴影 y 方向偏移量")],-1),za=n("tr",null,[n("td",{style:{"text-align":"left"}},"opacity"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"设置绘图的当前 alpha 或透明值")],-1),Ba=n("tr",null,[n("td",{style:{"text-align":"left"}},"fillOpacity"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"设置填充的 alpha 或透明值")],-1),Ga=n("td",{style:{"text-align":"left"}},"cursor",-1),Na=n("td",{style:{"text-align":"left"}},"false",-1),Ca=n("td",{style:{"text-align":"left"}},"String",-1),Qa={style:{"text-align":"left"}},Da={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/cursor",target:"_blank",rel:"noopener noreferrer"},qa=e(`<p>下面代码演示在实例化图时全局配置方法中配置 <code>style</code>：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">&#39;mountNode&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultNode</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ... 其他属性</span>
    <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;#steelblue&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;#eaff8f&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">lineWidth</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
      <span class="token comment">// ... 其他属性</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="标签文本-label-及其配置-labelcfg" tabindex="-1"><a class="header-anchor" href="#标签文本-label-及其配置-labelcfg" aria-hidden="true">#</a> 标签文本 label 及其配置 labelCfg</h3><p><code>label</code> String 类型。标签文本的文字内容。 <code>labelCfg</code> Object 类型。配置标签文本。下面是 <code>labelCfg</code> 对象中的常用配置项：</p><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">是否必须</th><th style="text-align:left;">类型</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">position</td><td style="text-align:left;">false</td><td style="text-align:left;">String</td><td style="text-align:left;">文本相对于节点的位置，目前支持的位置有：<code>&#39;center&#39;</code>，<code>&#39;top&#39;</code>，<code>&#39;left&#39;</code>，<code>&#39;right&#39;</code>，<code>&#39;bottom&#39;</code>。默认为 <code>&#39;center&#39;</code>。modelRect 节点不支持该属性</td></tr><tr><td style="text-align:left;">offset</td><td style="text-align:left;">false</td><td style="text-align:left;">Number</td><td style="text-align:left;">文本的偏移，<code>position</code> 为 <code>&#39;bottom&#39;</code> 时，文本的上方偏移量；<code>position</code> 为 <code>&#39;left&#39;</code> 时，文本的右方偏移量；以此类推在其他 <code>position</code> 时的情况。modelRect 节点的 <code>offset</code> 为左边距</td></tr><tr><td style="text-align:left;">style</td><td style="text-align:left;">false</td><td style="text-align:left;">Object</td><td style="text-align:left;">标签的样式属性。</td></tr></tbody></table><p>上表中的标签的样式属性 <code>style</code> 的常用配置项如下：</p>`,6),Oa=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"是否必须"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"备注")])],-1),Ra=n("tr",null,[n("td",{style:{"text-align":"left"}},"fill"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"String"),n("td",{style:{"text-align":"left"}},"文本颜色")],-1),Ia=n("tr",null,[n("td",{style:{"text-align":"left"}},"stroke"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"String"),n("td",{style:{"text-align":"left"}},"文本描边颜色")],-1),Pa=n("tr",null,[n("td",{style:{"text-align":"left"}},"lineWidth"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"文本描边粗细")],-1),Ma=n("tr",null,[n("td",{style:{"text-align":"left"}},"opacity"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"文本透明度")],-1),Fa=n("tr",null,[n("td",{style:{"text-align":"left"}},"fontFamily"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"String"),n("td",{style:{"text-align":"left"}},"文本字体")],-1),Ta=n("tr",null,[n("td",{style:{"text-align":"left"}},"fontSize"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"文本字体大小")],-1),La={style:{"text-align":"left"}},Wa={href:"https://antv-g6.gitee.io/zh/docs/api/shapeProperties/#%E6%96%87%E6%9C%AC-text",target:"_blank",rel:"noopener noreferrer"},Va=n("td",{style:{"text-align":"left"}},null,-1),Xa=n("td",{style:{"text-align":"left"}},null,-1),Ya=n("td",{style:{"text-align":"left"}},null,-1),Za=e(`<p>下面代码演示在实例化图时全局配置方法中配置 <code>label</code> 和 <code>labelCfg</code>。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">&#39;mountNode&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultNode</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ... 其他属性</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;node-label&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">labelCfg</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">&#39;bottom&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">offset</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
      <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;#666&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="节点的配置方法" tabindex="-1"><a class="header-anchor" href="#节点的配置方法" aria-hidden="true">#</a> 节点的配置方法</h2><p>配置节点的方式有三种：实例化图时全局配置，在数据中动态配置，使用 <code>graph.node(nodeFn)</code> 函数配置。这几种配置方法可以同时使用，优先级：</p><p>使用 <code>graph.node(nodeFn)</code> 配置 &gt; 数据中动态配置 &gt; 实例化图时全局配置</p><p>即有相同的配置项时，优先级高的方式将会覆盖优先级低的。</p>`,6),Ha=n("strong",null,"⚠️ 注意:",-1),Ja=n("code",null,"id",-1),$a=n("code",null,"label",-1),Ka={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/defaultNode#%E8%8A%82%E7%82%B9%E7%9A%84%E9%80%9A%E7%94%A8%E5%B1%9E%E6%80%A7",target:"_blank",rel:"noopener noreferrer"},Ua=e(`<h3 id="实例化图时全局配置" tabindex="-1"><a class="header-anchor" href="#实例化图时全局配置" aria-hidden="true">#</a> 实例化图时全局配置</h3><p>用户在实例化 Graph 时候可以通过 <code>defaultNode</code> 配置节点，这里的配置是全局的配置，将会在所有节点上生效。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">&#39;mountNode&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultNode</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;circle&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// 其他配置</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="在数据中动态配置" tabindex="-1"><a class="header-anchor" href="#在数据中动态配置" aria-hidden="true">#</a> 在数据中动态配置</h3><p>如果需要为不同节点进行不同的配置，可以将配置写入到节点数据中。这种配置方式可以通过下面代码的形式直接写入数据，也可以通过遍历数据的方式写入。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">nodes</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;node0&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;rect&#39;</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>    <span class="token comment">// 其他属性</span>
    <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>  <span class="token comment">// 样式属性，每种节点的详细样式属性参见各节点文档</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;node1&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;ellipse&#39;</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>    <span class="token comment">// 其他属性</span>
    <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>  <span class="token comment">// 样式属性，每种节点的详细样式属性参见各节点文档</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token operator">...</span> <span class="token comment">// 其他节点</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">edges</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token operator">...</span> <span class="token comment">// 边</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><h1 id="节点的连接点-anchorpoint" tabindex="-1"><a class="header-anchor" href="#节点的连接点-anchorpoint" aria-hidden="true">#</a> 节点的连接点 anchorPoint</h1>`,7),ns={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/shape/shape-keyshape",target:"_blank",rel:"noopener noreferrer"},ts=n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*EJTyR4j9VN4AAAAAAAAAAABkARQnAQ",alt:"img"},null,-1),as=e(`<p>节点中有了 anchorPoints 之后，相关边可以分别选择连入起始点、结束点的哪一个 anchorPoint。当需要在节点之间连多条线时，这种机制能够使边的连入更美观。</p><p>边可以通过指定 <code>sourceAnchor</code> 和 <code>targetAnchor</code> 分别选择起始点、结束点的 anchorPoint。<code>sourceAnchor</code> 和 <code>targetAnchor</code> 取的值是相对应节点上 anchorPoints 数组的索引值。</p><p>下面数据演示了如何在节点上配置连接点、在边上指定连接点：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">nodes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;node1&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;node1&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
      <span class="token comment">// 该节点可选的连接点集合，该点有两个可选的连接点</span>
      <span class="token literal-property property">anchorPoints</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;rect&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;node2&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;node2&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">400</span><span class="token punctuation">,</span>
      <span class="token comment">// 该节点可选的连接点集合，该点有两个可选的连接点</span>
      <span class="token literal-property property">anchorPoints</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;rect&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">edges</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token string">&#39;node1&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;node2&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// 该边连入 source 点的第 0 个 anchorPoint，</span>
      <span class="token literal-property property">sourceAnchor</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token comment">// 该边连入 target 点的第 0 个 anchorPoint，</span>
      <span class="token literal-property property">targetAnchor</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">endArrow</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token string">&#39;node2&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;node1&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// 该边连入 source 点的第 1 个 anchorPoint，</span>
      <span class="token literal-property property">sourceAnchor</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token comment">// 该边连入 source 点的第 1 个 anchorPoint，</span>
      <span class="token literal-property property">targetAnchor</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">endArrow</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h1 id="自定义节点" tabindex="-1"><a class="header-anchor" href="#自定义节点" aria-hidden="true">#</a> 自定义节点</h1><p><code>G6.registerNode(typeName: string, nodeDefinition: object, extendedTypeName?: string)</code> 进行自定义节点，方便用户开发更加定制化的节点，包括含有复杂图形的节点、复杂交互的节点、带有动画的节点等。其参数：</p>`,6),ss=n("li",null,[n("code",null,"typeName"),t("：该新节点类型名称；")],-1),es=n("li",null,[n("code",null,"extendedTypeName"),t("：被继承的节点类型，可以是内置节点类型名，也可以是其他自定义节点的类型名。"),n("code",null,"extendedTypeName"),t(" 未指定时代表不继承其他类型的节点；")],-1),ps=n("code",null,"nodeDefinition",-1),os={href:"https://antv-g6.gitee.io/zh/docs/api/registerItem#g6registernodenodename-options-extendednodename",target:"_blank",rel:"noopener noreferrer"},ls=n("code",null,"extendedTypeName",-1),cs=n("code",null,"extendedTypeName",-1),rs=e(`<h2 id="使用-dom-自定义节点" tabindex="-1"><a class="header-anchor" href="#使用-dom-自定义节点" aria-hidden="true">#</a> 使用 DOM 自定义节点</h2><blockquote><p>SVG 与 DOM 图形在 V3.3.x 中不支持。 仅在 Graph 的 <code>renderer</code> 为 <code>&#39;svg&#39;</code> 时可以使用 DOM 自定义节点。</p></blockquote><p>这里，我们演示使用 DOM 自定义一个名为 <code>&#39;dom-node&#39;</code> 的节点。在 <code>draw</code> 方法中使用 <code>group.addShape</code> 增加一个 <code>&#39;dom&#39;</code> 类型的图形，并设置其 <code>html</code> 为 DOM 的 <code>html</code> 值。</p><p><img src="https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*VgQlQK1MdbIAAAAAAAAAAABkARQnAQ" alt="img"></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token constant">G6</span><span class="token punctuation">.</span><span class="token function">registerNode</span><span class="token punctuation">(</span>
  <span class="token string">&#39;dom-node&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">draw</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">cfg</span><span class="token operator">:</span> ModelConfig<span class="token punctuation">,</span> <span class="token literal-property property">group</span><span class="token operator">:</span> Group</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> group<span class="token punctuation">.</span><span class="token function">addShape</span><span class="token punctuation">(</span><span class="token string">&#39;dom&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">width</span><span class="token operator">:</span> cfg<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token literal-property property">height</span><span class="token operator">:</span> cfg<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token comment">// 传入 DOM 的 html</span>
          <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
        &lt;div style=&quot;background-color: #fff; border: 2px solid #5B8FF9; border-radius: 5px; width: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
          cfg<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">5</span>
        <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px; height: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cfg<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px; display: flex;&quot;&gt;
          &lt;div style=&quot;height: 100%; width: 33%; background-color: #CDDDFD&quot;&gt;
            &lt;img alt=&quot;img&quot; style=&quot;line-height: 100%; padding-top: 6px; padding-left: 8px;&quot; src=&quot;https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*Q_FQT6nwEC8AAAAAAAAAAABkARQnAQ&quot; width=&quot;20&quot; height=&quot;20&quot; /&gt;  
          &lt;/div&gt;
          &lt;span style=&quot;margin:auto; padding:auto; color: #5B8FF9&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cfg<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span&gt;
        &lt;/div&gt;
          </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">draggable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string">&#39;single-node&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>上面的代码自定义了一个名为 <code>&#39;dom-node&#39;</code> 的带有 DOM 的节点。值得注意的是，G6 3.3 需要用户为自定义节点中的图形设置 <code>name</code> 和 <code>draggable</code>。其中，<code>name</code> 可以是不唯一的任意值。<code>draggable</code> 为 <code>true</code> 是表示允许该图形响应鼠标的拖拽事件，只有 <code>draggable: true</code> 时，图上的交互行为 <code>&#39;drag-node&#39;</code> 才能在该图形上生效。</p><p>现在，我们使用下面的数据输入就会绘制出带有 <code>&#39;dom-node&#39;</code> 节点的图。</p><p><img src="https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*coxYTo3zEecAAAAAAAAAAABkARQnAQ" alt="img"></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">nodes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;node1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;node2&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">edges</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>source<span class="token operator">:</span> <span class="token string">&#39;node1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>target<span class="token operator">:</span> <span class="token string">&#39;node2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">&#39;mountNode&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultNode</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;dom-node&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
graph<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
graph<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>⚠️ 注意:</strong> G6 的节点/边事件不支持 DOM 类型的图形。如果需要为 DOM 节点绑定事件，请使用原生 DOM 事件。例如：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token constant">G6</span><span class="token punctuation">.</span><span class="token function">registerNode</span><span class="token punctuation">(</span>
  <span class="token string">&#39;dom-node&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function-variable function">draw</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">cfg</span><span class="token operator">:</span> ModelConfig<span class="token punctuation">,</span> <span class="token literal-property property">group</span><span class="token operator">:</span> Group</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> group<span class="token punctuation">.</span><span class="token function">addShape</span><span class="token punctuation">(</span><span class="token string">&#39;dom&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">width</span><span class="token operator">:</span> cfg<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token literal-property property">height</span><span class="token operator">:</span> cfg<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token comment">// 传入 DOM 的 html，带有原生 onclick 事件</span>
          <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
        &lt;div onclick=&quot;alert(&#39;Hi&#39;)&quot; style=&quot;background-color: #fff; border: 2px solid #5B8FF9; border-radius: 5px; width: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>
          cfg<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">5</span>
        <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px; height: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cfg<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">5</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px; display: flex;&quot;&gt;
          &lt;div style=&quot;height: 100%; width: 33%; background-color: #CDDDFD&quot;&gt;
            &lt;img alt=&quot;img&quot; style=&quot;line-height: 100%; padding-top: 6px; padding-left: 8px;&quot; src=&quot;https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*Q_FQT6nwEC8AAAAAAAAAAABkARQnAQ&quot; width=&quot;20&quot; height=&quot;20&quot; /&gt;  
          &lt;/div&gt;
          &lt;span style=&quot;margin:auto; padding:auto; color: #5B8FF9&quot;&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cfg<span class="token punctuation">.</span>label<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span&gt;
        &lt;/div&gt;
          </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token literal-property property">draggable</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string">&#39;single-node&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h1 id="边总览" tabindex="-1"><a class="header-anchor" href="#边总览" aria-hidden="true">#</a> 边总览</h1><p>G6 提供了 9 种内置边：</p><ul><li>line：直线，不支持控制点；</li><li>polyline：折线，支持多个控制点；</li><li>arc：圆弧线；</li><li>quadratic：二阶贝塞尔曲线；</li><li>cubic：三阶贝塞尔曲线；</li><li>cubic-vertical：垂直方向的三阶贝塞尔曲线，不考虑用户从外部传入的控制点；</li><li>cubic-horizontal：水平方向的三阶贝塞尔曲线，不考虑用户从外部传入的控制点；</li><li>loop：自环。</li></ul><h2 id="内置边类型说明" tabindex="-1"><a class="header-anchor" href="#内置边类型说明" aria-hidden="true">#</a> 内置边类型说明</h2><p>下面表格中显示了内置的各类边，同时对一些特殊的字段进行了说明：</p>`,16),is=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"描述"),n("th",{style:{"text-align":"left"}})])],-1),us=n("tr",null,[n("td",{style:{"text-align":"left"}},"line"),n("td",{style:{"text-align":"left"}},[t("连接两个节点的直线： - "),n("code",null,"controlPoints"),t(" 不生效 - 更多配置详见 line 边的配置")]),n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*-LM-RJnlI20AAAAAAAAAAABkARQnAQ",alt:"img"})])],-1),ds=n("td",{style:{"text-align":"left"}},"polyline",-1),ks={style:{"text-align":"left"}},gs=n("code",null,"controlPoints",-1),hs={href:"https://www.yuque.com/antv/blog/eyi70n",target:"_blank",rel:"noopener noreferrer"},ys=n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*q2pIQ6h622IAAAAAAAAAAABkARQnAQ",alt:"img"})],-1),fs=n("tr",null,[n("td",{style:{"text-align":"left"}},"arc"),n("td",{style:{"text-align":"left"}},[t("连接两个节点的一段圆弧： - "),n("code",null,"controlPoints"),t(" 不生效 - 使用 curveOffset 指定弧的弯曲程度，其正负影响弧弯曲的方向 - 更多配置详见 arc 边的配置")]),n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*SmS8QZjTlEkAAAAAAAAAAABkARQnAQ",alt:"img"})])],-1),ms=n("tr",null,[n("td",{style:{"text-align":"left"}},"quadratic"),n("td",{style:{"text-align":"left"}},[t("只有一个控制点的曲线： - "),n("code",null,"controlPoints"),t(" 不指定时，会默认线的一半处弯曲 - 更多配置详见 quadratic 边的配置")]),n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*IADsTq4eH50AAAAAAAAAAABkARQnAQ",alt:"img"})])],-1),xs=n("tr",null,[n("td",{style:{"text-align":"left"}},"cubic"),n("td",{style:{"text-align":"left"}},[t("有两个控制点的曲线： - "),n("code",null,"controlPoints"),t(" 不指定时，会默认线的 1/3, 2/3 处弯曲 - 更多配置详见 cubic 边的配置")]),n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*ldiCT7xnrM4AAAAAAAAAAABkARQnAQ",alt:"img"})])],-1),_s=n("tr",null,[n("td",{style:{"text-align":"left"}},"cubic-vertical"),n("td",{style:{"text-align":"left"}},"垂直方向的三阶贝塞尔曲线，不考虑用户从外部传入的控制点"),n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*WtNPRKSZv1kAAAAAAAAAAABkARQnAQ",alt:"img"})])],-1),bs=n("tr",null,[n("td",{style:{"text-align":"left"}},"cubic-horizontal"),n("td",{style:{"text-align":"left"}},"水平方向的三阶贝塞尔曲线，不考虑用户从外部传入的控制点"),n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*iNiVRIsov4MAAAAAAAAAAABkARQnAQ",alt:"img"})])],-1),As=n("tr",null,[n("td",{style:{"text-align":"left"}},"loop"),n("td",{style:{"text-align":"left"}},"自环。更多配置详见 loop 边的配置"),n("td",{style:{"text-align":"left"}},[n("img",{src:"https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*sPBIR40KLOkAAAAAAAAAAABkARQnAQ",alt:"img"})])],-1),vs=e('<h2 id="边的通用属性" tabindex="-1"><a class="header-anchor" href="#边的通用属性" aria-hidden="true">#</a> 边的通用属性</h2><p>所有内置的边支持的通用属性：</p><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">是否必须</th><th style="text-align:left;">类型</th><th style="text-align:left;">备注</th><th style="text-align:left;"></th></tr></thead><tbody><tr><td style="text-align:left;">id</td><td style="text-align:left;">false</td><td style="text-align:left;">String</td><td style="text-align:left;">边唯一 ID，<strong>必须</strong>是唯一的 string</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">source</td><td style="text-align:left;">true</td><td style="text-align:left;">String</td><td style="text-align:left;">Number</td><td style="text-align:left;">起始点 id</td></tr><tr><td style="text-align:left;">target</td><td style="text-align:left;">true</td><td style="text-align:left;">String</td><td style="text-align:left;">结束点 id</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">type</td><td style="text-align:left;">false</td><td style="text-align:left;">String</td><td style="text-align:left;">指定边的类型，可以是内置边的类型名称，也可以是自定义边的名称。默认为 <code>&#39;line&#39;</code></td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">sourceAnchor</td><td style="text-align:left;">false</td><td style="text-align:left;">Number</td><td style="text-align:left;">边的起始节点上的锚点的索引值</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">targetAnchor</td><td style="text-align:left;">false</td><td style="text-align:left;">Number</td><td style="text-align:left;">边的终止节点上的锚点的索引值</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">style</td><td style="text-align:left;">false</td><td style="text-align:left;">Object</td><td style="text-align:left;">边的样式属性</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">label</td><td style="text-align:left;">false</td><td style="text-align:left;">String</td><td style="text-align:left;">文本文字，如果没有则不会显示</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">labelCfg</td><td style="text-align:left;">false</td><td style="text-align:left;">Object</td><td style="text-align:left;">文本配置项</td><td style="text-align:left;"></td></tr></tbody></table><h3 id="样式属性-style-1" tabindex="-1"><a class="header-anchor" href="#样式属性-style-1" aria-hidden="true">#</a> 样式属性 style</h3><p>Object 类型。通过 <code>style</code> 配置来修改边的颜色、线宽等属性。下表是 <code>style</code> 对象中常用的配置项：</p>',5),ws=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"是否必须"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"备注")])],-1),js=n("tr",null,[n("td",{style:{"text-align":"left"}},"stroke"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"String"),n("td",{style:{"text-align":"left"}},"边的颜色")],-1),Ss=n("tr",null,[n("td",{style:{"text-align":"left"}},"lineWidth"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"边宽度")],-1),Es=n("tr",null,[n("td",{style:{"text-align":"left"}},"lineAppendWidth"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},[t("边响应鼠标事件时的检测宽度，当 "),n("code",null,"lineWidth"),t(" 太小而不易选中时，可以通过该参数提升击中范围")])],-1),zs=n("td",{style:{"text-align":"left"}},"endArrow",-1),Bs=n("td",{style:{"text-align":"left"}},"false",-1),Gs=n("td",{style:{"text-align":"left"}},"Boolean / Object",-1),Ns={style:{"text-align":"left"}},Cs=n("code",null,"true",-1),Qs=n("code",null,"false",-1),Ds={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/edges/defaultEdge",target:"_blank",rel:"noopener noreferrer"},qs=n("td",{style:{"text-align":"left"}},"startArrow",-1),Os=n("td",{style:{"text-align":"left"}},"false",-1),Rs=n("td",{style:{"text-align":"left"}},"Boolean / Object",-1),Is={style:{"text-align":"left"}},Ps=n("code",null,"true",-1),Ms=n("code",null,"false",-1),Fs={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/edges/defaultEdge",target:"_blank",rel:"noopener noreferrer"},Ts=n("tr",null,[n("td",{style:{"text-align":"left"}},"strokeOpacity"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"边透明度")],-1),Ls=n("tr",null,[n("td",{style:{"text-align":"left"}},"shadowColor"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"String"),n("td",{style:{"text-align":"left"}},"阴影颜色")],-1),Ws=n("tr",null,[n("td",{style:{"text-align":"left"}},"shadowBlur"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"阴影模糊程度")],-1),Vs=n("tr",null,[n("td",{style:{"text-align":"left"}},"shadowOffsetX"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"阴影 x 方向偏移量")],-1),Xs=n("tr",null,[n("td",{style:{"text-align":"left"}},"shadowOffsetY"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"阴影 y 方向偏移量")],-1),Ys=n("tr",null,[n("td",{style:{"text-align":"left"}},"lineDash"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Array"),n("td",{style:{"text-align":"left"}},"设置线的虚线样式，可以指定一个数组。一组描述交替绘制线段和间距（坐标空间单位）长度的数字。 如果数组元素的数量是奇数， 数组的元素会被复制并重复。例如， [5, 15, 25] 会变成 [5, 15, 25, 5, 15, 25]。")],-1),Zs=n("td",{style:{"text-align":"left"}},"cursor",-1),Hs=n("td",{style:{"text-align":"left"}},"false",-1),Js=n("td",{style:{"text-align":"left"}},"String",-1),$s={style:{"text-align":"left"}},Ks={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/cursor",target:"_blank",rel:"noopener noreferrer"},Us=e(`<p>下面代码演示在实例化图时全局配置方法中配置 <code>style</code>：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">&#39;mountNode&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultEdge</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ... 其他属性</span>
    <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;#eaff8f&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">lineWidth</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
      <span class="token comment">// ... 其他样式属性</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="标签文本-label-及其配置-labelcfg-1" tabindex="-1"><a class="header-anchor" href="#标签文本-label-及其配置-labelcfg-1" aria-hidden="true">#</a> 标签文本 label 及其配置 labelCfg</h3><p><code>label</code> String 类型。标签文本的文字内容。 <code>labelCfg</code> Object 类型。配置标签文本。下面是 <code>labelCfg</code> 对象中的常用配置项：</p><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">是否必须</th><th style="text-align:left;">类型</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">refX</td><td style="text-align:left;">false</td><td style="text-align:left;">Number</td><td style="text-align:left;">标签在 x 方向的偏移量</td></tr><tr><td style="text-align:left;">refY</td><td style="text-align:left;">false</td><td style="text-align:left;">Number</td><td style="text-align:left;">标签在 y 方向的偏移量</td></tr><tr><td style="text-align:left;">position</td><td style="text-align:left;">false</td><td style="text-align:left;">String</td><td style="text-align:left;">文本相对于边的位置，目前支持的位置有：<code>&#39;start&#39;</code>，<code>&#39;middle&#39;</code>，<code>&#39;end&#39;</code>。默认为<code>&#39;middle&#39;</code>。</td></tr><tr><td style="text-align:left;">autoRotate</td><td style="text-align:left;">false</td><td style="text-align:left;">Boolean</td><td style="text-align:left;">标签文字是否跟随边旋转，默认 <code>false</code></td></tr><tr><td style="text-align:left;">style</td><td style="text-align:left;">false</td><td style="text-align:left;">Object</td><td style="text-align:left;">标签的样式属性</td></tr></tbody></table><p>上表中的标签的样式属性 <code>style</code> 的常用配置项如下：</p>`,6),ne=n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"名称"),n("th",{style:{"text-align":"left"}},"是否必须"),n("th",{style:{"text-align":"left"}},"类型"),n("th",{style:{"text-align":"left"}},"备注")])],-1),te=n("tr",null,[n("td",{style:{"text-align":"left"}},"fill"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"String"),n("td",{style:{"text-align":"left"}},"文本颜色")],-1),ae=n("tr",null,[n("td",{style:{"text-align":"left"}},"stroke"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"String"),n("td",{style:{"text-align":"left"}},"文本描边颜色")],-1),se=n("tr",null,[n("td",{style:{"text-align":"left"}},"lineWidth"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"文本描边粗细")],-1),ee=n("tr",null,[n("td",{style:{"text-align":"left"}},"opacity"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"文本透明度")],-1),pe=n("tr",null,[n("td",{style:{"text-align":"left"}},"fontFamily"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"String"),n("td",{style:{"text-align":"left"}},"文本字体")],-1),oe=n("tr",null,[n("td",{style:{"text-align":"left"}},"fontSize"),n("td",{style:{"text-align":"left"}},"false"),n("td",{style:{"text-align":"left"}},"Number"),n("td",{style:{"text-align":"left"}},"文本字体大小")],-1),le={style:{"text-align":"left"}},ce={href:"https://antv-g6.gitee.io/zh/docs/api/shapeProperties/#%E6%96%87%E6%9C%AC-text",target:"_blank",rel:"noopener noreferrer"},re=n("td",{style:{"text-align":"left"}},null,-1),ie=n("td",{style:{"text-align":"left"}},null,-1),ue=n("td",{style:{"text-align":"left"}},null,-1),de=e(`<p>下面代码演示在实例化图时全局配置方法中配置 <code>label</code> 和 <code>labelCfg</code>。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">&#39;mountNode&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultEdge</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// ... 其他属性</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;edge-label&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">labelCfg</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">refY</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span>
      <span class="token literal-property property">refX</span><span class="token operator">:</span> <span class="token number">60</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="边的配置方法" tabindex="-1"><a class="header-anchor" href="#边的配置方法" aria-hidden="true">#</a> 边的配置方法</h2><p>配置边的方式有三种：实例化图时全局配置，在数据中动态配置，使用 <code>graph.edge(edgeFn)</code> 函数配置。这几种配置方法可以同时使用，优先级：</p><p>使用 graph.edge(edgeFn) 配置 &gt; 数据中动态配置 &gt; 实例化图时全局配置</p><p>即有相同的配置项时，优先级高的方式将会覆盖优先级低的。</p>`,6),ke=n("code",null,"id",-1),ge=n("code",null,"source",-1),he=n("code",null,"target",-1),ye=n("code",null,"label",-1),fe={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/edges/defaultEdge#%E8%BE%B9%E7%9A%84%E9%80%9A%E7%94%A8%E5%B1%9E%E6%80%A7",target:"_blank",rel:"noopener noreferrer"},me=e(`<h3 id="实例化图时全局配置-1" tabindex="-1"><a class="header-anchor" href="#实例化图时全局配置-1" aria-hidden="true">#</a> 实例化图时全局配置</h3><p>用户在实例化 Graph 时候可以通过 <code>defaultEdge</code> 配置边，这里的配置是全局的配置，将会在所有边上生效。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">&#39;mountNode&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultEdge</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;line&#39;</span><span class="token punctuation">,</span>
    <span class="token comment">// ... 其他配置</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="在数据中动态配置-1" tabindex="-1"><a class="header-anchor" href="#在数据中动态配置-1" aria-hidden="true">#</a> 在数据中动态配置</h3><p>如果需要使不同边有不同的配置，可以将配置写入到边数据中。这种配置方式可以通过下面代码的形式直接写入数据，也可以通过遍历数据的方式写入。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">nodes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token operator">...</span> <span class="token comment">// 节点</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">edges</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
    <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token string">&#39;node0&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;node1&#39;</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;polyline&#39;</span><span class="token punctuation">,</span>
    <span class="token operator">...</span> <span class="token comment">// 其他配置</span>
    <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>  <span class="token comment">// 样式属性，每种边的详细样式属性参见各边文档</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
    <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token string">&#39;node1&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;node2&#39;</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;cubic&#39;</span><span class="token punctuation">,</span>
    <span class="token operator">...</span> <span class="token comment">// 其他配置</span>
    <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token operator">...</span>  <span class="token comment">// 样式属性，每种边的详细样式属性参见各边文档</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token operator">...</span> <span class="token comment">// 其他边</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="使用-graph-edge" tabindex="-1"><a class="header-anchor" href="#使用-graph-edge" aria-hidden="true">#</a> 使用 graph.edge()</h3><p>该方法可以为不同边进行不同的配置。 提示：</p><ul><li>该方法必须<strong>在 render 之前调用</strong>，否则不起作用；</li><li>由于该方法优先级最高，将覆盖其他地方对边的配置，这可能将造成一些其他配置不生效的疑惑；</li><li>该方法在增加元素、更新元素时会被调用，如果数据量大、每条边上需要更新的内容多时，可能会有性能问题。</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// const data = ...</span>
<span class="token comment">// const graph = ...</span>
graph<span class="token punctuation">.</span><span class="token function">edge</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">edge</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">id</span><span class="token operator">:</span> edge<span class="token punctuation">.</span>id<span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;polyline&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;steelblue&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

graph<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
graph<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="默认箭头" tabindex="-1"><a class="header-anchor" href="#默认箭头" aria-hidden="true">#</a> 默认箭头</h2><p><img src="https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*fthFSoNbmeAAAAAAAAAAAABkARQnAQ" alt="img"></p><h3 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h3><p>在边的样式属性 <code>style</code> 中将 <code>endArrow</code> 或 <code>startArrow</code> 配置为 <code>true</code> 即可：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">endArrow</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">startArrow</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="内置箭头" tabindex="-1"><a class="header-anchor" href="#内置箭头" aria-hidden="true">#</a> 内置箭头</h2><p>v3.5.8 后支持。</p><h3 id="各箭头概览" tabindex="-1"><a class="header-anchor" href="#各箭头概览" aria-hidden="true">#</a> 各箭头概览</h3><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">参数</th><th style="text-align:left;">使用方法</th><th style="text-align:left;">效果</th></tr></thead><tbody><tr><td style="text-align:left;">triangle</td><td style="text-align:left;">依次为箭头宽度（默认 10）、长度（默认 15）、偏移量（默认为 0，与 <code>d</code> 对应）</td><td style="text-align:left;">endArrow: { path: G6.Arrow.triangle(10, 20, 25), d: 25 }</td><td style="text-align:left;"><img src="https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*s8LxSZoxSEsAAAAAAAAAAABkARQnAQ" alt="img"></td></tr><tr><td style="text-align:left;">vee</td><td style="text-align:left;">依次为箭头宽度（默认 15）、长度（默认 20）、偏移量（默认为 0，与 <code>d</code> 对应）</td><td style="text-align:left;">endArrow: { path: G6.Arrow.vee(10, 20, 25), d: 25 }</td><td style="text-align:left;"><img src="https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*2DBOTJfZZS0AAAAAAAAAAABkARQnAQ" alt="img"></td></tr><tr><td style="text-align:left;">circle</td><td style="text-align:left;">依次为箭头半径（默认 5）、偏移量（默认为 0，与 <code>d</code> 对应）</td><td style="text-align:left;">endArrow: { path: G6.Arrow.circle(10, 25), d: 25 }</td><td style="text-align:left;"><img src="https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*h2XSSJrdUHkAAAAAAAAAAABkARQnAQ" alt="img"></td></tr><tr><td style="text-align:left;">diamond</td><td style="text-align:left;">依次为箭头宽度（默认 15）、长度（默认 15）、偏移量（默认为 0，与 <code>d</code> 对应）</td><td style="text-align:left;">endArrow: { path: G6.Arrow.diamond(10, 20, 25), d: 25 }</td><td style="text-align:left;"><img src="https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*FIHORJpJov0AAAAAAAAAAABkARQnAQ" alt="img"></td></tr><tr><td style="text-align:left;">rect</td><td style="text-align:left;">依次为箭头宽度（默认 10）、长度（默认 10）、偏移量（默认为 0，与 <code>d</code> 对应）</td><td style="text-align:left;">endArrow: { path: G6.Arrow.rect(10, 20, 25), d: 25 }</td><td style="text-align:left;"><img src="https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*AkBLSoxXptUAAAAAAAAAAABkARQnAQ" alt="img"></td></tr><tr><td style="text-align:left;">triangleRect</td><td style="text-align:left;">依次为箭头三角形宽度（默认 15）、三角形长度（默认 15）、矩形宽度（默认 15）、矩形长度（默认 3）、三角形与矩形间距（默认为 5）、偏移量（默认为 0，与 <code>d</code> 对应）</td><td style="text-align:left;">endArrow: { path: G6.Arrow.triangleRect(15, 15, 15, 3, 5, 25), d: 25 }</td><td style="text-align:left;"><img src="https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*rPPeT4kFVdwAAAAAAAAAAABkARQnAQ" alt="img"></td></tr></tbody></table><h3 id="使用方法-1" tabindex="-1"><a class="header-anchor" href="#使用方法-1" aria-hidden="true">#</a> 使用方法</h3><p>调用 <code>G6.Arrow.arrowName</code> 配置边的样式属性 <code>style</code> 中 <code>endArrow</code> 或 <code>startArrow</code> 的 <code>path</code>：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">endArrow</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token constant">G6</span><span class="token punctuation">.</span>Arrow<span class="token punctuation">.</span><span class="token function">triangle</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 使用内置箭头路径函数，参数为箭头的 宽度、长度、偏移量（默认为 0，与 d 对应）</span>
    <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">25</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">startArrow</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token constant">G6</span><span class="token punctuation">.</span>Arrow<span class="token punctuation">.</span><span class="token function">vee</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 使用内置箭头路径函数，参数为箭头的 宽度、长度、偏移量（默认为 0，与 d 对应）</span>
    <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">15</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="配置箭头样式" tabindex="-1"><a class="header-anchor" href="#配置箭头样式" aria-hidden="true">#</a> 配置箭头样式</h2><p>只有内置箭头和自定义箭头可以配置样式。</p><h4 id="配置项" tabindex="-1"><a class="header-anchor" href="#配置项" aria-hidden="true">#</a> 配置项</h4><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">是否必须</th><th style="text-align:left;">类型</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:left;">fill</td><td style="text-align:left;">false</td><td style="text-align:left;">String</td><td style="text-align:left;">填充颜色，默认无填充</td></tr><tr><td style="text-align:left;">stroke</td><td style="text-align:left;">false</td><td style="text-align:left;">String</td><td style="text-align:left;">描边颜色，默认与边颜色相同</td></tr><tr><td style="text-align:left;">lineWidth</td><td style="text-align:left;">false</td><td style="text-align:left;">Number</td><td style="text-align:left;">描边宽度，默认与边宽度相同</td></tr><tr><td style="text-align:left;">opacity</td><td style="text-align:left;">false</td><td style="text-align:left;">Number</td><td style="text-align:left;">透明度</td></tr><tr><td style="text-align:left;">shadowColor</td><td style="text-align:left;">false</td><td style="text-align:left;">String</td><td style="text-align:left;">阴影颜色</td></tr><tr><td style="text-align:left;">shadowBlur</td><td style="text-align:left;">false</td><td style="text-align:left;">Number</td><td style="text-align:left;">阴影模糊程度</td></tr><tr><td style="text-align:left;">shadowOffsetX</td><td style="text-align:left;">false</td><td style="text-align:left;">Number</td><td style="text-align:left;">阴影 x 方向偏移量</td></tr><tr><td style="text-align:left;">shadowOffsetY</td><td style="text-align:left;">false</td><td style="text-align:left;">Number</td><td style="text-align:left;">阴影 y 方向偏移量</td></tr><tr><td style="text-align:left;">lineDash</td><td style="text-align:left;">false</td><td style="text-align:left;">Array</td><td style="text-align:left;">描边的虚线样式，可以指定一个数组。一组描述交替绘制线段和间距（坐标空间单位）长度的数字。 如果数组元素的数量是奇数， 数组的元素会被复制并重复。例如， [5, 15, 25] 会变成 [5, 15, 25, 5, 15, 25]。</td></tr></tbody></table><h4 id="使用方法-2" tabindex="-1"><a class="header-anchor" href="#使用方法-2" aria-hidden="true">#</a> 使用方法</h4><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 内置箭头</span>
<span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">endArrow</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token constant">G6</span><span class="token punctuation">.</span>Arrow<span class="token punctuation">.</span><span class="token function">triangle</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 使用内置箭头路径函数，参数为箭头的 宽度、长度、偏移量（默认为 0，与 d 对应）</span>
    <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">25</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;#f00&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;#0f0&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lineWidth</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>


<span class="token comment">// 自定义箭头</span>
<span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">endArrow</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;M 0,0 L 20,10 L 20,-10 Z&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">d</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;#f00&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;#0f0&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lineWidth</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="攻击范围" tabindex="-1"><a class="header-anchor" href="#攻击范围" aria-hidden="true">#</a> 攻击范围</h3><p>边过细时点击很难被击中，可以设置 <code>lineAppendWidth</code> 来提升击中范围。</p><h2 id="增加额外图形" tabindex="-1"><a class="header-anchor" href="#增加额外图形" aria-hidden="true">#</a> 增加额外图形</h2><p>通过实现 <code>afterDraw</code> 增加额外图形，为找到边的主要图形 <code>path</code> 上的某个点，可以使用 <code>shape.getPoint(ratio)</code> 获得。</p><p><img src="https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*aOlcQbx2ux4AAAAAAAAAAAAAARQnAQ" alt="img"></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token constant">G6</span><span class="token punctuation">.</span><span class="token function">registerEdge</span><span class="token punctuation">(</span>
  <span class="token string">&#39;mid-point-edge&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token function">afterDraw</span><span class="token punctuation">(</span><span class="token parameter">cfg<span class="token punctuation">,</span> group</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 获取图形组中的第一个图形，在这里就是边的路径图形</span>
      <span class="token keyword">const</span> shape <span class="token operator">=</span> group<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;children&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token comment">// 获取路径图形的中点坐标</span>
      <span class="token keyword">const</span> midPoint <span class="token operator">=</span> shape<span class="token punctuation">.</span><span class="token function">getPoint</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 在中点增加一个矩形，注意矩形的原点在其左上角</span>
      group<span class="token punctuation">.</span><span class="token function">addShape</span><span class="token punctuation">(</span><span class="token string">&#39;rect&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">attrs</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
          <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
          <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;#f00&#39;</span><span class="token punctuation">,</span>
          <span class="token comment">// x 和 y 分别减去 width / 2 与 height / 2，使矩形中心在 midPoint 上</span>
          <span class="token literal-property property">x</span><span class="token operator">:</span> midPoint<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">,</span>
          <span class="token literal-property property">y</span><span class="token operator">:</span> midPoint<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">update</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string">&#39;cubic&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h1 id="更新节点或边的样式" tabindex="-1"><a class="header-anchor" href="#更新节点或边的样式" aria-hidden="true">#</a> 更新节点或边的样式</h1><p>阅读时间约 1 分钟</p><p>G6 提供了三种修改节点样式的方法。</p><h4 id="实例化-graph" tabindex="-1"><a class="header-anchor" href="#实例化-graph" aria-hidden="true">#</a> 实例化 Graph</h4><p>实例化 Graph 时，可以通过在 <code>defaultNode</code> 或 <code>defaultEdge</code> 中指定 <code>style</code> 分别配置全局节点和全局边的样式属性。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">G6<span class="token punctuation">.</span>Graph</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">&#39;mountNode&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
  <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultNode</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;circle&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;#fff&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultEdge</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;line-with-arrow&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;#fff&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">14</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="数据中指定-style" tabindex="-1"><a class="header-anchor" href="#数据中指定-style" aria-hidden="true">#</a> 数据中指定 style</h4><p>这种方式可以在数据中为不同的节点和边指定不同的样式。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">nodes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;node1&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;node1&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;#fff&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="使用-update-updateitem" tabindex="-1"><a class="header-anchor" href="#使用-update-updateitem" aria-hidden="true">#</a> 使用 update / updateItem</h4>`,44),xe=n("code",null,"update",-1),_e=n("code",null,"updateItem",-1),be={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/shape/shape-keyshape",target:"_blank",rel:"noopener noreferrer"},Ae=e(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>graph<span class="token punctuation">.</span><span class="token function">updateItem</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token comment">// 节点的样式</span>
  <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,1),ve={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/elements/nodes/defaultNode/#%E6%A0%B7%E5%BC%8F%E5%B1%9E%E6%80%A7-style",target:"_blank",rel:"noopener noreferrer"},we=e(`<h2 id="元素的显示-隐藏" tabindex="-1"><a class="header-anchor" href="#元素的显示-隐藏" aria-hidden="true">#</a> 元素的显示/隐藏</h2><p>使用下面六个函数可以实现节点、边、Combo 的显示/隐藏：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 显示节点实例 nodeItem，该节点的 visible 属性值在该方法调用后被置为 true</span>
nodeItem<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 隐藏节点实例 nodeItem，该节点的 visible 属性值在该方法调用后被置为 false</span>
nodeItem<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 显示边实例 edgeItem，该边的 visible 属性值在该方法调用后被置为 true</span>
edgeItem<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 隐藏边实例 edgeItem，该边的 visible 属性值在该方法调用后被置为 false</span>
edgeItem<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 显示边实例 comboItem，该 Combo 的 visible 属性值在该方法调用后被置为 true</span>
comboItem<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 隐藏边实例 comboItem，该 Combo 的 visible 属性值在该方法调用后被置为 false</span>
comboItem<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><p><img src="https://gw.alipayobjects.com/mdn/rms_f8c6a0/afts/img/A*N96mRKpyYZIAAAAAAAAAAABkARQnAQ" alt="img"></p><p>该示例摘取了元素显示/隐藏的相关操作部分，通过鼠标监听对节点、边、画布的点击事件，显示和隐藏元素：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 鼠标点击节点，隐藏该节点</span>
graph<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;node:click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> node <span class="token operator">=</span> ev<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;before hide(), the nodevisible = &#39;</span><span class="token punctuation">,</span> node<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;visible&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  node<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  graph<span class="token punctuation">.</span><span class="token function">paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;after hide(), the node visible = &#39;</span><span class="token punctuation">,</span> node<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;visible&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 鼠标点击边，隐藏该边</span>
graph<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;edge:click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> edge <span class="token operator">=</span> ev<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;before hide(), the edge visible = &#39;</span><span class="token punctuation">,</span> edge<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;visible&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  edge<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  graph<span class="token punctuation">.</span><span class="token function">paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;after hide(), the edge visible = &#39;</span><span class="token punctuation">,</span> edge<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;visible&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 鼠标点击画布，显示所有节点和边</span>
graph<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;canvas:click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> nodes <span class="token operator">=</span> graph<span class="token punctuation">.</span><span class="token function">getNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> edges <span class="token operator">=</span> graph<span class="token punctuation">.</span><span class="token function">getEdges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  nodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    node<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  edges<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">edge</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    edge<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  graph<span class="token punctuation">.</span><span class="token function">paint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>   <span class="token comment">// 2000 ms 后切换为允许节点重叠的 force 布局</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        graph<span class="token punctuation">.</span><span class="token function">updateLayout</span><span class="token punctuation">(</span><span class="token string">&#39;force&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 参数为 String 代表布局名称</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">8000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// 4000 ms 后切换为不允许节点重叠且边长为 100 的 force 布局。</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        graph<span class="token punctuation">.</span><span class="token function">updateLayout</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;force&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 布局名称</span>
          <span class="token literal-property property">preventOverlap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 布局参数，是否允许重叠</span>
          <span class="token literal-property property">nodeSize</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token comment">// 布局参数，节点大小，用于判断节点是否重叠</span>
          <span class="token literal-property property">linkDistance</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token comment">// 布局参数，边长</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// 6000 ms 后切换数据为 data2</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        graph<span class="token punctuation">.</span><span class="token function">changeData</span><span class="token punctuation">(</span>data2<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">12000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="antv-g6添加图形image的img属性为静态图片的写法" tabindex="-1"><a class="header-anchor" href="#antv-g6添加图形image的img属性为静态图片的写法" aria-hidden="true">#</a> antv/g6添加图形image的img属性为静态图片的写法</h4><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">img</span><span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@/aseets/images/logo.png&#39;</span><span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
      <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;node4&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;image&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">img</span><span class="token operator">:</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@/assets/image/g6/substation.png&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>
      <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
      <span class="token literal-property property">size</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;变电所3&#39;</span>
    <span class="token punctuation">}</span>
</code></pre></div><h5 id="同vue使用图片的方式一样" tabindex="-1"><a class="header-anchor" href="#同vue使用图片的方式一样" aria-hidden="true">#</a> 同vue使用图片的方式一样</h5><h1 id="监听和绑定事件" tabindex="-1"><a class="header-anchor" href="#监听和绑定事件" aria-hidden="true">#</a> 监听和绑定事件</h1>`,12),je={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/states/defaultBehavior",target:"_blank",rel:"noopener noreferrer"},Se={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/states/mode",target:"_blank",rel:"noopener noreferrer"},Ee=e("<ul><li>画布、图形层次的事件，<code>mousedown</code>，<code>mouseup</code>，<code>click</code>，<code>mouseenter</code>，<code>mouseleave</code> 等；</li><li>节点/边 上的事件，<code>node:mousedown</code>，<code>edge:click</code> 等，以 <code>type:eventName</code> 为事件名称；</li><li>时机事件： <ul><li>节点/边增删改时的事件, 例如：<code>beforeadditem</code>，<code>afteradditem</code> 等；</li><li>节点/边状态改变时的事件：<code>beforerefreshitem</code> 与 <code>afterrefreshitem</code>；</li><li>布局时机：<code>beforelayout</code> 与 <code>afterlayout</code>。</li></ul></li></ul>",1),ze={href:"https://antv-g6.gitee.io/zh/docs/api/Event",target:"_blank",rel:"noopener noreferrer"},Be=e(`<p>G6 上所有的事件都需要在 graph 上监听。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>graph<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> shape <span class="token operator">=</span> ev<span class="token punctuation">.</span>target<span class="token punctuation">;</span>
  <span class="token keyword">const</span> item <span class="token operator">=</span> ev<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> type <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

graph<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;node:click&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> shape <span class="token operator">=</span> ev<span class="token punctuation">.</span>target<span class="token punctuation">;</span>
  <span class="token keyword">const</span> node <span class="token operator">=</span> ev<span class="token punctuation">.</span>item<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="behavior" tabindex="-1"><a class="header-anchor" href="#behavior" aria-hidden="true">#</a> Behavior</h2>`,3),Ge={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/states/mode",target:"_blank",rel:"noopener noreferrer"},Ne={href:"https://antv-g6.gitee.io/zh/docs/manual/middle/states/mode",target:"_blank",rel:"noopener noreferrer"},Ce=n("h2",{id:"内置-behavior",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#内置-behavior","aria-hidden":"true"},"#"),t(" 内置 Behavior")],-1),Qe=n("p",null,"理论上， G6 上的所有基础图形、Item（节点/边）都能通过事件来进行操作。",-1);function De(qe,Oe){const a=o("ExternalLinkIcon");return l(),c("div",null,[i,n("p",null,[t("通过 "),u,t(" 进行图的实例化。其中参数 "),d,t(" 是 Object 类型的图的配置项，图的大部分功能可以通过该配置项进行全局配置。如 "),n("a",k,[t("前提代码"),s(a)]),t(" 这样实例化图：")]),g,n("p",null,[t("下面列举实例化图时常见的配置项，完整的配置项参见 "),n("a",h,[t("Graph API"),s(a)]),t("。")]),y,f,n("p",null,[t("类型：String；默认：'canvas'，可选项：'canvas' / 'svg' 。配置使用 canvas 或 svg 渲染，"),m,t(" G6 默认使用 Canvas 渲染图， SVG 渲染也支持 Canvas 的所有功能。需要注意的是，我们都知道 SVG 的性能较差，在大规模数据或图元的情况下请谨慎选择。SVG 除支持内置的所有节点/边类型以及自定义节点/边时使用与 Canvas 相同的图形外，还支持在自定义节点/边时使用 "),x,t(" 图形，详见 "),n("a",_,[t("使用 DOM 自定义节点"),s(a)]),t("。")]),b,n("p",null,[t("类型：Object。默认情况下全局节点的配置项，包括样式属性和其他属性。详见 "),n("a",A,[t("内置节点"),s(a)]),t(" 教程。")]),v,n("p",null,[t("类型：Object。默认情况下全局边的配置项，包括样式属性和其他属性。详见 "),n("a",w,[t("内置边"),s(a)]),t(" 教程。")]),j,n("p",null,[t("类型：Object。除默认状态外的其他状态下节点的样式配置。详见 "),n("a",S,[t("状态 State"),s(a)]),t(" 教程。")]),E,n("p",null,[t("类型：Object。除默认状态外的其他状态下边的样式配置。详见 "),n("a",z,[t("状态 State"),s(a)]),t(" 教程。")]),B,G,n("p",null,[t("类型：Object。若数据中不存在节点位置，则默认为随机布局。配置布局类型及其参数。详见 "),n("a",N,[t("使用布局 Layout"),s(a)]),t(" 教程，"),n("a",C,[t("图布局 API"),s(a)]),t(" 或 "),n("a",Q,[t("树图布局 API"),s(a)]),t("。")]),D,q,n("p",null,[t("类型：Array。配置多种交互模式及其包含的交互事件的。详见 "),n("a",O,[t("交互模式 Mode"),s(a)]),t("。")]),R,I,P,M,n("p",null,[t("类型：Object。全局动画的配置项，包括动画效果、动画时长等。详见 "),n("a",F,[t("动画 Animation"),s(a)]),t("。")]),T,L,n("p",null,[t("类型：Array。配置辅助插件。详见 "),n("a",W,[t("插件与工具"),s(a)]),t("。")]),V,n("p",null,[t("Graph 的完整函数参见 "),n("a",X,[t("Graph API"),s(a)]),t("。")]),Y,n("ul",null,[n("li",null,[t("图的元素（Item）包含图上的节点 Node 、边 Edge 和 "),Z,t(" 三大类。 "),n("ul",null,[n("li",null,[t("每个图元素由一个或多个 "),n("a",H,[t("图形（Shape）"),s(a)]),t(" 组成，且都会有自己的唯一关键图形（keyShape）。")]),J,n("li",null,[t("G6 中所有内置的元素样式详见 "),n("a",$,[t("内置节点"),s(a)]),t("，"),n("a",K,[t("内置边"),s(a)]),t("，"),n("a",U,[t("内置 Combo"),s(a)]),t("。")]),n("li",null,[t("除了使用内置的节点/边/ Combo 外，G6 还允许用户通过自己搭配和组合 shape 进行节点/边/ Combo 的自定义，详见 "),n("a",nn,[t("自定义节点"),s(a)]),t("，"),n("a",tn,[t("自定义边"),s(a)]),t("，"),n("a",an,[t("自定义 Combo"),s(a)]),t("。")])])])]),n("ul",null,[n("li",null,[sn,n("ul",null,[n("li",null,[n("p",null,[t("样式属性，通过 "),en,t(" 字段对象进行配置，和元素的关键图形相关，例如 "),pn,t("，"),on,t("。可在"),n("a",ln,[t("元素状态"),s(a)]),t("改变时被改变。")])]),n("li",null,[n("p",null,[t("其他属性，例如 "),cn,t("、"),rn,t("，不能在元素状态改变是进行改变，可通过 "),n("a",un,[t("graph.updateItem"),s(a)]),t(" 进行手动更新。完整的元素属性列表参考："),n("a",dn,[t("元素配置项"),s(a)]),t("。除了各类元素共有的通用属性外，每种节点/边/ Combo 都有各自的特有属性。")])])])])]),n("p",null,[t("图元素实例上具有对元素进行更新、销毁、获取属性、修改状态等"),n("a",kn,[t("通用方法"),s(a)]),t("，同时，对于实例的变更也可以通过调用 "),n("a",gn,[t("graph"),s(a)]),t(" 上的方法进行。")]),hn,n("p",null,[t("内置节点/边/ Combo 配置项中的 "),yn,t(" 只体现在它的 keyShape 上。而内置节点/边/ Combo 的状态样式 （图实例的 "),fn,t(" / "),mn,t(" / "),xn,t(" 或元素自身的 "),_n,t(") 中需要体现在 keyShape 或其他图形上的写法有所不同，详见 "),n("a",bn,[t("配置状态样式"),s(a)]),t("。")]),n("p",null,[t("想要更自由地响应样式（绘制或状态变化时），可以 "),n("a",An,[t("自定义节点"),s(a)]),t(" / "),n("a",vn,[t("自定义边"),s(a)]),t(" / "),n("a",wn,[t("自定义 Combo"),s(a)]),t("。")]),jn,n("blockquote",null,[n("p",null,[t("当用户需要"),n("a",Sn,[t("自定义节点"),s(a)]),t("、"),n("a",En,[t("自定义边"),s(a)]),t("、"),n("a",zn,[t("自定义 Combo"),s(a)]),t(" 时，需要了解 Shape 的生命周期。使用内置节点/边/ Combo 则可以跳过这一部分内容。")])]),Bn,n("p",null,[t("关于自定义节点和边的更多方法请参考 "),n("a",Gn,[t("自定义节点与边 API"),s(a)]),t("。")]),n("p",null,[t("G6 中的元素（节点/边）是"),Nn,n("a",Cn,[Qn,s(a)]),t(),Dn,t("，主要通过自定义节点或自定义边时在 "),qn,t(" 方法中使用 "),On,t(" 添加，G6 中支持以下的图形 Shape：")]),n("ul",null,[n("li",null,[n("a",Rn,[t("circle"),s(a)]),t("：圆；")]),n("li",null,[n("a",In,[t("rect"),s(a)]),t("：矩形；")]),n("li",null,[n("a",Pn,[t("ellipse"),s(a)]),t("：椭圆；")]),n("li",null,[n("a",Mn,[t("polygon"),s(a)]),t("：多边形；")]),n("li",null,[n("a",Fn,[t("fan"),s(a)]),t("：扇形；")]),n("li",null,[n("a",Tn,[t("image"),s(a)]),t("：图片；")]),n("li",null,[n("a",Ln,[t("marker"),s(a)]),t("：标记；")]),n("li",null,[n("a",Wn,[t("path"),s(a)]),t("：路径；")]),n("li",null,[n("a",Vn,[t("text"),s(a)]),t("：文本；")]),n("li",null,[n("a",Xn,[t("dom(svg)"),s(a)]),t("：DOM（图渲染方式 "),Yn,t(" 为 "),Zn,t(" 时可用）。")])]),Hn,n("table",null,[Jn,n("tbody",null,[$n,Kn,Un,nt,tt,at,st,et,pt,ot,n("tr",null,[lt,n("td",ct,[t("鼠标在该节点上时的鼠标样式，"),n("a",rt,[t("CSS 的 cursor"),s(a)]),t(" 选项都支持")]),it])])]),ut,n("table",null,[dt,n("tbody",null,[n("tr",null,[kt,n("td",gt,[t("圆形： - "),ht,t(" 是单个数字，表示直径 - 圆心位置对应节点的位置 - "),yt,t(" 字段默认在描边上生效 - 标签文本默认在节点中央 - 更多字段见 "),n("a",ft,[t("Circle"),s(a)]),t(" 节点教程")]),mt]),n("tr",null,[xt,n("td",_t,[t("矩形： - "),bt,t(" 是数组，例如：[100, 50] - 矩形的中心位置是节点的位置，而不是左上角 - "),At,t(" 字段默认在描边上生效 - 标签文本默认在节点中央 - 更多字段见 "),n("a",vt,[t("Rect"),s(a)]),t(" 节点教程")]),wt]),n("tr",null,[jt,n("td",St,[t("椭圆： - "),Et,t(" 是数组，表示椭圆的长轴直径和短轴直径 - 椭圆的圆心是节点的位置 - "),zt,t(" 字段默认在描边上生效 - 标签文本默认在节点中央 - 更多字段见 "),n("a",Bt,[t("Ellipse"),s(a)]),t(" 节点教程")]),Gt]),n("tr",null,[Nt,n("td",Ct,[t("菱形： - "),Qt,t(" 是数组，表示菱形的宽和高 - 菱形的中心位置是节点的位置 - "),Dt,t(" 字段默认在描边上生效 - 标签文本默认在节点中央 - 更多字段见 "),n("a",qt,[t("Diamond"),s(a)]),t(" 节点教程")]),Ot]),n("tr",null,[Rt,n("td",It,[t("三角形： - "),Pt,t(" 是数组，表示三角形的底和高 - 三角形的中心位置是节点的位置 - "),Mt,t(" 字段默认在描边上生效 - 标签文本默认在节点下方 - 更多字段见 "),n("a",Ft,[t("Triangle"),s(a)]),t(" 节点教程")]),Tt]),n("tr",null,[Lt,n("td",Wt,[t("星形： - "),Vt,t(" 是单个数字，表示星形的大小 - 星星的中心位置是节点的位置 - "),Xt,t(" 字段默认在描边上生效 - 标签文本默认在节点中央 - 更多字段见 "),n("a",Yt,[t("Star"),s(a)]),t(" 节点教程")]),Zt]),n("tr",null,[Ht,n("td",Jt,[t("图片： - "),$t,t(" 是数组，表示图片的宽和高 - 图片的中心位置是节点位置 - "),Kt,t(" 图片的路径，也可以在 "),Ut,t(" 里面设置 - "),na,t(" 字段不生效 - 标签文本默认在节点下方 - 更多字段见 "),n("a",ta,[t("Image"),s(a)]),t(" 节点教程")]),aa]),n("tr",null,[sa,n("td",ea,[t("卡片： - "),pa,t(" 是数组，表示卡片的宽和高 - 卡片的中心位置是节点的位置 - "),oa,t(" 字段默认在描边上生效 - 标签文本默认在节点中央 - 若有 "),la,t(" 字段则显示在标签文本下方显示 "),ca,t(" 内容 - 更多字段见 "),n("a",ra,[t("ModelRect"),s(a)]),t(" 节点教程")]),ia]),n("tr",null,[ua,n("td",da,[t("圆形： - "),ka,t(" 是单个数字，表示直径 - 圆心位置对应节点的位置 - "),ga,t(" 字段默认在描边上生效 - 标签文本默认在节点中央 - 必须指定合法的 "),ha,t(" 字段 - 更多字段见 "),n("a",ya,[t("Donut"),s(a)]),t(" 节点教程")]),fa])])]),ma,n("table",null,[xa,n("tbody",null,[_a,ba,Aa,va,wa,ja,Sa,Ea,za,Ba,n("tr",null,[Ga,Na,Ca,n("td",Qa,[t("鼠标在该节点上时的鼠标样式，"),n("a",Da,[t("CSS 的 cursor"),s(a)]),t(" 选项都支持")])])])]),qa,n("table",null,[Oa,n("tbody",null,[Ra,Ia,Pa,Ma,Fa,Ta,n("tr",null,[n("td",La,[t("... 节点标签与边标签样式属性相同，统一整理在 "),n("a",Wa,[t("Text 图形 API"),s(a)])]),Va,Xa,Ya])])]),Za,n("p",null,[Ha,t(" 除 "),Ja,t("、"),$a,t(" 应当配置到每个节点数据中外，其余的 "),n("a",Ka,[t("节点的通用属性"),s(a)]),t(" 以及各个节点类型的特有属性（见内置节点类型）均支持这三种配置方式。")]),Ua,n("p",null,[t("节点的连接点 anchorPoint 指的是边连入节点的相对位置，即节点与其相关边的交点位置。anchorPoints 是一个二维数组，每一项表示一个连接点的位置，在一个"),n("a",ns,[t("图形 Shape"),s(a)]),t(" 中，连接点的位置如下图所示，x 和 y 方向上范围都是 [0, 1]： "),ts]),as,n("ul",null,[ss,es,n("li",null,[ps,t("：该新节点类型的定义，其中必要函数详见 "),n("a",os,[t("自定义机制 API"),s(a)]),t("。当有 "),ls,t(" 时，没被复写的函数将会继承 "),cs,t(" 的定义。")])]),rs,n("table",null,[is,n("tbody",null,[us,n("tr",null,[ds,n("td",ks,[t("多段线段构成的折线，连接两个端点： - "),gs,t(" 表示所有线段的拐点，不指定时根据 "),n("a",hs,[t("A* 算法"),s(a)]),t("自动生成折线 - 更多配置详见 polyline 边的配置")]),ys]),fs,ms,xs,_s,bs,As])]),vs,n("table",null,[ws,n("tbody",null,[js,Ss,Es,n("tr",null,[zs,Bs,Gs,n("td",Ns,[t("为 "),Cs,t(" 时在边的结束端绘制默认箭头，为 "),Qs,t(" 时不绘制结束端箭头；也可以使用"),n("a",Ds,[t("内置箭头配置"),s(a)]),t("，例如： endArrow: { path: G6.Arrow.vee(10, 20, 10), // 内置箭头，参数为箭头宽度、长度、偏移量 d（默认为 0） d: 10 // 偏移量 } ；或通过 path 自定义的箭头，例如： endArrow: { path: 'M 0,0 L 20,10 L 20,-10 Z', // 自定义箭头路径 d: -2 // 偏移量 }")])]),n("tr",null,[qs,Os,Rs,n("td",Is,[t("为 "),Ps,t(" 时在边的开始端绘制默认箭头，为 "),Ms,t(" 时不绘制结束端箭头；也可以使用"),n("a",Fs,[t("内置箭头配置"),s(a)]),t("，例如： startArrow: { path: G6.Arrow.vee(10, 20, 10), // 内置箭头，参数为箭头宽度、长度、偏移量 d（默认为 0） d: 10 // 偏移量 } ；或通过 path 自定义的箭头，例如： startArrow: { path: 'M 0,0 L 20,10 L 20,-10 Z', // 自定义箭头路径 d: -2 // 偏移量 }")])]),Ts,Ls,Ws,Vs,Xs,Ys,n("tr",null,[Zs,Hs,Js,n("td",$s,[t("鼠标在该边上时的鼠标样式，"),n("a",Ks,[t("CSS 的 cursor"),s(a)]),t(" 选项都支持")])])])]),Us,n("table",null,[ne,n("tbody",null,[te,ae,se,ee,pe,oe,n("tr",null,[n("td",le,[t("... 节点标签与边标签样式属性相同，统一整理在 "),n("a",ce,[t("Text 图形 API"),s(a)])]),re,ie,ue])])]),de,n("p",null,[t("除 "),ke,t("、"),ge,t("、"),he,t("、"),ye,t(" 应当配置到每条边数据中外，其余的 "),n("a",fe,[t("边的通用属性"),s(a)]),t(" 以及各个边类型的特有属性（见内置边类型）均支持三种配置方式。")]),me,n("p",null,[t("使用 "),xe,t(" / "),_e,t(" 更新节点或边。此方法用于动态更新节点或边的 "),n("a",be,[t("keyShape"),s(a)]),t("。")]),Ae,n("p",null,[t("想要知道节点都支持哪些属性样式，请参考 "),n("a",ve,[t("节点样式属性"),s(a)]),t("。")]),we,n("p",null,[t("除了 "),n("a",je,[t("内置交互行为 Behavior"),s(a)]),t(" 和 "),n("a",Se,[t("交互模式 Mode"),s(a)]),t(" 搭配的事件管理方式外，G6 提供了直接的单个事件、时机的监听方法，可以监听画布、节点、边、以及各函数被调用的时机等。这些事件可以分为以下四个层次：")]),Ee,n("p",null,[t("如果要了解 G6 支持的所有事件，请参考 "),n("a",ze,[t("Event API"),s(a)]),t("。")]),Be,n("p",null,[t("Behavior 是 G6 提供的定义图上交互事件的机制。它与"),n("a",Ge,[t("交互模式 Mode"),s(a)]),t(" 搭配使用，如何将下文所述各种 Behavior 配置到图上，见 "),n("a",Ne,[t("交互模式"),s(a)]),t("。")]),Ce,Qe])}const Ie=p(r,[["render",De],["__file","g6_va.html.vue"]]);export{Ie as default};
