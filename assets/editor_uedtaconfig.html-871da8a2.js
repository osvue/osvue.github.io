import{_ as p,M as t,p as o,q as e,R as n,t as s,N as l,a1 as r}from"./framework-d81ad7e5.js";const c={},i=n("div",{class:"language-text","data-ext":"text"},[n("pre",{class:"language-text"},[n("code",null,`常用功能开关如下：
,elementPathEnabled : false　　//是否启用元素路径，默认是true显示
,wordCount:false          //是否开启字数统计
,autoHeightEnabled:false　　// 编辑器内容，是否自动长高,默认true
,fullscreen : false //是否开启初始化时即全屏，默认关闭
//,zIndex : 900     //编辑器层级的基数,默认是900（一般不要开启，会对项目层级有影响）
`)])],-1),u=n("ul",null,[n("li",null,"UEditor 的配置项分为两类：前端配置项 和 后端配置项")],-1),k={href:"http://fex.baidu.com/ueditor/#undefined",target:"_blank",rel:"noopener noreferrer"},g=r(`<ul><li>如何通过设置前端配置项，定制编辑器的特性，配置方法主要通过修改<strong>ueditor.config.js</strong>，另外在编辑器实例化的时候也可以传入配置参数</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> ue <span class="token operator">=</span> <span class="token constant">UE</span><span class="token punctuation">.</span><span class="token function">getEditor</span><span class="token punctuation">(</span><span class="token string">&#39;container&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">toolbars</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">[</span><span class="token string">&#39;fullscreen&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;source&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;undo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;redo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bold&#39;</span><span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token literal-property property">autoHeightEnabled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">autoFloatEnabled</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="读取配置项" tabindex="-1"><a class="header-anchor" href="#读取配置项" aria-hidden="true">#</a> 读取配置项</h2><p>读取配置项可以通过getOpt方法读取</p><div class="language-text" data-ext="text"><pre class="language-text"><code>var lang = ue.getOpt(&#39;lang&#39;); //默认返回：zh-cn
</code></pre></div><h2 id="前端配置项说明" tabindex="-1"><a class="header-anchor" href="#前端配置项说明" aria-hidden="true">#</a> 前端配置项说明</h2><blockquote><p>以下的&quot;URL&quot;是ueditor.config.js文件所在目录</p></blockquote><ul><li><p>UEDITOR_HOME_URL {Path String} [默认值：根据config文件路径自动获取] // 为编辑器实例添加一个路径，这个不能被注释</p></li><li><p>serverUrl {Path String} [默认值：URL + &quot;php/controller.php&quot;] // 服务器统一请求接口路径</p></li><li><p>toolbars {2d Array} //工具栏上的所有的功能按钮和下拉框，可以在new编辑器的实例时选择自己需要的从新定义</p></li><li><p>labelMap {Object} [默认：从lang包的labelMap项获取] //参数格式是键值对，键名对应toolbar参数的项：{&quot;bold&quot;: &quot;加粗&quot;} ]，当鼠标放在工具栏上时显示的tooltip提示，留空支持自动多语言配置，否则以配置值为准</p></li><li><p>lang {String} [默认值：&quot;zh-cn&quot;] //lang值也可以通过自动获取 (navigator.language||navigator.browserLanguage ||navigator.userLanguage).toLowerCase()，语言配置项，默认是zh-cn。有需要的话也可以使用如下这样的方式来自动多语言切换，当然，前提条件是lang文件夹下存在对应的语言文件：</p></li><li><p>langPath {Path String} [默认值：URL +&quot;lang/&quot;] //语言包文件存放目录</p></li><li><p>theme {String} [默认值：&#39;default&#39;] //主题配置项，默认是default。有需要的话也可以使用如下这样的方式来自动多主题切换，当然，前提条件是themes文件夹下存在对应的主题文件：</p></li><li><p>themePath {Path String} [默认值：URL +&quot;themes/&quot;] //现有如下皮肤：default</p></li><li><p>zIndex {Number} [默认值：900] //编辑器在页面上的z-index层级的基数，默认是900</p></li><li><p>charset {String} [默认值：&quot;utf-8&quot;] //针对getAllHtml方法，会在对应的head标签中增加该编码设置。</p></li><li><p>customDomain {Boolean} [默认值：false] //若实例化编辑器的页面手动修改的domain，此处需要设置为true</p></li><li><p>isShow {Boolean} [默认值：true] //默认显示编辑器</p></li><li><p>textarea {String} [默认值：&#39;editorValue&#39;] // 提交表单时，服务器获取编辑器提交内容的所用的参数，多实例时可以给容器name属性，会将name给定的值最为每个实例的键值，不用每次实例化的时候都设置这个值</p></li><li><p>initialContent {String} [默认值：&#39;欢迎使用ueditor!&#39;] //初始化编辑器的内容，也可以通过textarea/script给值，看官网例子</p></li><li><p>autoClearinitialContent {Boolean} [默认值：true] //是否自动清除编辑器初始内容，注意：如果focus属性设置为true，这个也为真，那么编辑器一上来就会触发导致初始化的内容看不到了</p></li><li><p>focus {Boolean} [默认值：false] //初始化时，是否让编辑器获得焦点true或false</p></li><li><p>initialStyle {String} [默认值：&#39;p{line-height:1em}&#39;]//编辑器层级的基数，可以用来改变字体等 //如果自定义，最好给p标签如下的行高，要不输入中文时，会有跳动感</p></li><li><p>iframeCssUrl {Path String} [默认值：URL + &#39;/themes/iframe.css&#39;] //给编辑器内部引入一个css文件</p></li><li><p>indentValue {String} [默认值：&#39;2em&#39;] //首行缩进距离，默认是2em</p></li><li><p>initialFrameWidth {Number} [默认值：1000] //初始化编辑器宽度，默认1000</p></li><li><p>initialFrameHeight {Number} [默认值：320] //初始化编辑器高度，默认320</p></li><li><p>readonly {Boolean} [默认值：false] //编辑器初始化结束后，编辑区域是否是只读的，默认是false</p></li><li><p>autoClearEmptyNode {Boolean} [默认值：true] //getContent时，是否删除空的inlineElement节点（包括嵌套的情况）</p></li><li><p>enableAutoSave {Boolean} [默认值：true] //启用自动保存</p></li><li><p>saveInterval {Number} [默认值：500] //自动保存间隔时间，单位ms</p></li><li><p>imageScaleEnabled {Boolean} [默认值：true] //启用图片拉伸缩放</p></li><li><p>fullscreen {Boolean} [默认值：false] //是否开启初始化时即全屏，默认关闭</p></li><li><p>imagePopup {Boolean} [默认值：true] //图片操作的浮层开关，默认打开</p></li><li><p>autoSyncData {Boolean} [默认值：true] //自动同步编辑器要提交的数据</p></li><li><p>emotionLocalization {Boolean} [默认值：false] //是否开启表情本地化，默认关闭。若要开启请确保emotion文件夹下包含官网提供的images表情文件夹</p></li><li><p>retainOnlyLabelPasted {Boolean} [默认值：false] //粘贴只保留标签，去除标签所有属性</p></li><li><p>pasteplain {Boolean} [默认值：false] //是否默认为纯文本粘贴。false为不使用纯文本粘贴，true为使用纯文本粘贴</p></li><li><p>filterTxtRules {Object} //纯文本粘贴模式下的过滤规则</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//默认值：</span>
<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">transP</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        node<span class="token punctuation">.</span>tagName <span class="token operator">=</span> <span class="token string">&#39;p&#39;</span><span class="token punctuation">;</span>
        node<span class="token punctuation">.</span><span class="token function">setStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token comment">//直接删除及其字节点内容</span>
        <span class="token string-property property">&#39;-&#39;</span><span class="token operator">:</span> <span class="token string">&#39;script style object iframe embed input select&#39;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;p&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">$</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;br&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">$</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;div&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;$&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;li&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;$&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&#39;caption&#39;</span><span class="token operator">:</span> transP<span class="token punctuation">,</span>
        <span class="token string-property property">&#39;th&#39;</span><span class="token operator">:</span> transP<span class="token punctuation">,</span>
        <span class="token string-property property">&#39;tr&#39;</span><span class="token operator">:</span> transP<span class="token punctuation">,</span>
        <span class="token string-property property">&#39;h1&#39;</span><span class="token operator">:</span> transP<span class="token punctuation">,</span>
        <span class="token string-property property">&#39;h2&#39;</span><span class="token operator">:</span> transP<span class="token punctuation">,</span>
        <span class="token string-property property">&#39;h3&#39;</span><span class="token operator">:</span> transP<span class="token punctuation">,</span>
        <span class="token string-property property">&#39;h4&#39;</span><span class="token operator">:</span> transP<span class="token punctuation">,</span>
        <span class="token string-property property">&#39;h5&#39;</span><span class="token operator">:</span> transP<span class="token punctuation">,</span>
        <span class="token string-property property">&#39;h6&#39;</span><span class="token operator">:</span> transP<span class="token punctuation">,</span>
        <span class="token string-property property">&#39;td&#39;</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//没有内容的td直接删掉</span>
            <span class="token keyword">var</span> txt <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span> node<span class="token punctuation">.</span><span class="token function">innerText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>txt<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                node<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">insertAfter</span><span class="token punctuation">(</span><span class="token constant">UE</span><span class="token punctuation">.</span>uNode<span class="token punctuation">.</span><span class="token function">createText</span><span class="token punctuation">(</span><span class="token string">&#39;    &#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            node<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> node<span class="token punctuation">.</span><span class="token function">innerText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div></li><li><p>allHtmlEnabled [默认值：false] //提交到后台的数据是否包含整个html字符串</p></li><li><p>insertorderedlist //有序列表的下拉配置，值留空时支持多语言自动识别，若配置值，则以此值为准</p><div class="language-text" data-ext="text"><pre class="language-text"><code>//默认值：
{
//自定的样式
&#39;num&#39;: &#39;1,2,3...&#39;,
&#39;num1&#39;: &#39;1),2),3)...&#39;,
&#39;num2&#39;: &#39;(1),(2),(3)...&#39;,
&#39;cn&#39;: &#39;一,二,三....&#39;,
&#39;cn1&#39;: &#39;一),二),三)....&#39;,
&#39;cn2&#39;: &#39;(一),(二),(三)....&#39;,
//系统自带
&#39;decimal&#39;: &#39;&#39; , &#39;1,2,3...&#39;
&#39;lower-alpha&#39;: &#39;&#39; , // &#39;a,b,c...&#39;
&#39;lower-roman&#39;: &#39;&#39; , //&#39;i,ii,iii...&#39;
&#39;upper-alpha&#39;: &#39;&#39; , //&#39;A,B,C&#39;
&#39;upper-roman&#39;: &#39;&#39; //&#39;I,II,III...&#39;
}
</code></pre></div></li><li><p>insertunorderedlist //无序列表的下拉配置，值留空时支持多语言自动识别，若配置值，则以此值为准</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span> <span class="token comment">//自定的样式</span>
    <span class="token string-property property">&#39;dash&#39;</span><span class="token operator">:</span> <span class="token string">&#39;— 破折号&#39;</span><span class="token punctuation">,</span> <span class="token comment">//-破折号</span>
    <span class="token string-property property">&#39;dot&#39;</span><span class="token operator">:</span> <span class="token string">&#39; 。 小圆圈&#39;</span><span class="token punctuation">,</span> <span class="token comment">//系统自带</span>
    <span class="token string-property property">&#39;circle&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// &#39;○ 小圆圈&#39;</span>
    <span class="token string-property property">&#39;disc&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">// &#39;● 小圆点&#39;</span>
    <span class="token string-property property">&#39;square&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token comment">//&#39;■ 小方块&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre></div><p>\`</p></li><li><p>listDefaultPaddingLeft [默认值：&#39;30&#39;//默认的左边缩进的基数倍</p></li><li><p>listiconpath [默认值：&#39;http://bs.baidu.com/listicon/&#39;]//自定义标号的路径</p></li><li><p>maxListLevel [默认值：3] //限制可以tab的级数， 设置-1为不限制</p></li><li><p>autoTransWordToList [默认值：false] //禁止word中粘贴进来的列表自动变成列表标签</p></li><li><p>fontfamily //字体设置 label留空支持多语言自动切换，若配置，则以配置值为准</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//默认值：</span>
<span class="token punctuation">[</span><span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;songti&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token string">&#39;宋体,SimSun&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;kaiti&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token string">&#39;楷体,楷体_GB2312, SimKai&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;yahei&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token string">&#39;微软雅黑,Microsoft YaHei&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;heiti&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token string">&#39;黑体, SimHei&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;lishu&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token string">&#39;隶书, SimLi&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;andaleMono&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token string">&#39;andale mono&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;arial&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token string">&#39;arial, helvetica,sans-serif&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;arialBlack&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token string">&#39;arial black,avant garde&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;comicSansMs&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token string">&#39;comic sans ms&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;impact&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token string">&#39;impact,chicago&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;timesNewRoman&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">val</span><span class="token operator">:</span> <span class="token string">&#39;times new roman&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre></div></li><li><p>fontsize {Array} //字号</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//默认值：</span>
<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">]</span>
</code></pre></div></li><li><p>paragraph {Object} //段落格式 值留空时支持多语言自动识别，若配置，则以配置值为准</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//默认值：</span>
<span class="token punctuation">{</span>
    <span class="token string-property property">&#39;p&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;h1&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;h2&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;h3&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;h4&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;h5&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;h6&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>rowspacingtop {Array} //段间距 值和显示的名字相同</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//默认值：</span>
<span class="token punctuation">[</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;15&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;20&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;25&#39;</span><span class="token punctuation">]</span>
</code></pre></div></li><li><p>rowspacingbottom //段间距 值和显示的名字相同</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//默认值：</span>
<span class="token punctuation">[</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;15&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;20&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;25&#39;</span><span class="token punctuation">]</span>
</code></pre></div></li><li><p>lineheight [默认值：[&#39;1&#39;, &#39;1.5&#39;,&#39;1.75&#39;,&#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;] ] //行内间距 值和显示的名字相同</p></li><li><p>customstyle [Array] //自定义样式，不支持国际化，此处配置值即可最后显示值block的元素是依据设置段落的逻辑设置的，inline的元素依据BIU的逻辑设置，尽量使用一些常用的标签</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//默认值：</span>
<span class="token punctuation">[</span><span class="token punctuation">{</span>
        <span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token string">&#39;h1&#39;</span><span class="token punctuation">,</span> <span class="token comment">//tag 使用的标签名字</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;tc&#39;</span><span class="token punctuation">,</span> <span class="token comment">//</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">//label 显示的名字也是用来标识不同类型的标识符，注意这个值每个要不同</span>
        <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token string">&#39;border-bottom:#ccc 2px solid;padding:0 4px 0 0;text-align:center;margin:0 0 20px 0;&#39;</span> <span class="token comment">//style 添加的样式</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">//每一个对象就是一个自定义的样式</span>
    <span class="token punctuation">{</span>
        <span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token string">&#39;h1&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;tl&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token string">&#39;border-bottom:#ccc 2px solid;padding:0 4px 0 0;margin:0 0 10px 0;&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token string">&#39;span&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;im&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token string">&#39;font-style:italic;font-weight:bold&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">tag</span><span class="token operator">:</span> <span class="token string">&#39;span&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;hi&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token string">&#39;font-style:italic;font-weight:bold;color:rgb(51, 153, 204)&#39;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre></div></li><li><p>enableContextMenu {Boolean} [默认值：true] //打开右键菜单功能</p></li><li><p>contextMenu {Object} //右键菜单的内容，可以参考plugins/contextmenu.js里边的默认菜单的例子，label留空支持国际化，否则以此配置为准</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//默认值：</span>
<span class="token punctuation">[</span><span class="token punctuation">{</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token comment">//显示的名称</span>
    <span class="token literal-property property">cmdName</span><span class="token operator">:</span> <span class="token string">&#39;selectall&#39;</span><span class="token punctuation">,</span> <span class="token comment">//执行的command命令，当点击这个右键菜单时</span>
    <span class="token function-variable function">exec</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//exec可选，有了exec就会在点击时执行这个function，优先级高于cmdName</span>
        <span class="token comment">//this是当前编辑器的实例</span>
        <span class="token comment">//this.ui._dialogs[&#39;inserttableDialog&#39;].open();</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre></div></li><li><p>shortcutMenu {Array} //快捷菜单</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//默认值</span>
<span class="token punctuation">[</span><span class="token string">&quot;fontfamily&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;fontsize&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bold&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;italic&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;underline&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;forecolor&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;backcolor&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;insertorderedlist&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;insertunorderedlist&quot;</span><span class="token punctuation">]</span>
</code></pre></div></li><li><p>elementPathEnabled {Boolean} [默认值：true] //是否启用元素路径，默认是显示</p></li><li><p>wordCount {Boolean} [默认值：true] //是否开启字数统计</p></li><li><p>maximumWords {Number} [默认值：10000] //允许的最大字符数</p></li><li><p>wordCountMsg</p><p>{String} [默认值：] //当前已输入 {#count} 个字符，您还可以输入{#leave} 个字符，字数统计提示，{#count}代表当前字数，{#leave}代表还可以输入多少字符数，留空支持多语言自动切换，否则按此配置显示</p><div class="language-javascrit" data-ext="javascrit"><pre class="language-javascrit"><code>\\\\默认值：
&#39;当前已输入{#count}个字符, 您还可以输入{#leave}个字符。 &#39;
</code></pre></div></li><li><p>wordOverFlowMsg {String} [默认值：] //超出字数限制提示 留空支持多语言自动切换，否则按此配置显示</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>\\\\默认值：
<span class="token string">&#39;&lt;span style=&quot;color:red;&quot;&gt;你输入的字符个数已经超出最大允许值，服务器可能会拒绝保存！&lt;/span&gt;&#39;</span>
</code></pre></div></li><li><p>tabSize {Number} [默认值：4] //点击tab键时移动的距离，tabSize倍数，tabNode什么字符做为单位</p></li><li><p>tabNode {String} [默认值：&#39; &#39;]</p></li><li><p>removeFormatTags //清除格式时可以删除的标签和属性</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//默认值：</span>
<span class="token string">&#39;b,big,code,del,dfn,em,font,i,ins,kbd,q,samp,small,span,strike,strong,sub,sup,tt,u,var&#39;</span>
</code></pre></div></li><li><p>removeFormatAttributes [默认值：&#39;class,style,lang,width,height,align,hspace,valign&#39;</p></li><li><p>maxUndoCount {Number} [默认值：20] //undo操作，可以最多回退的次数，默认20</p></li><li><p>maxInputCount {Number} [默认值：1] //undo操作，当输入的字符数超过该值时，保存一次现场</p></li><li><p>autoHeightEnabled {Boolean} [默认值：true] //是否自动长高，默认true</p></li><li><p>scaleEnabled {Boolean} [默认值：false] //是否可以拉伸长高，默认true(当开启时，自动长高失效)</p></li><li><p>minFrameWidth {Number} [默认值：800] //编辑器拖动时最小宽度，默认800</p></li><li><p>minFrameHeight {Number} [默认值：220] //编辑器拖动时最小高度，默认220</p></li><li><p>autoFloatEnabled [默认值：true] //是否保持toolbar的位置不动，默认true</p></li><li><p>topOffset [默认值：30] //浮动时工具栏距离浏览器顶部的高度，用于某些具有固定头部的页面</p></li><li><p>toolbarTopOffset [默认值：400] //编辑器底部距离工具栏高度(如果参数大于等于编辑器高度，则设置无效)</p></li><li><p>pageBreakTag [默认值：&#39;<em>ueditor</em>page<em>break</em>tag*&#39;] //分页标识符，默认是<em>ueditor</em>page<em>break</em>tag*</p></li><li><p>autotypeset {Object} //自动排版参数 默认值：</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">mergeEmptyline</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//合并空行</span>
    <span class="token literal-property property">removeClass</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//去掉冗余的class</span>
    <span class="token literal-property property">removeEmptyline</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//去掉空行</span>
    <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span> <span class="token comment">//段落的排版方式，可以是 left，right，center，justify 去掉这个属性表示不执行排版</span>
    <span class="token literal-property property">imageBlockLine</span><span class="token operator">:</span> <span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span> <span class="token comment">//图片的浮动方式，独占一行剧中，左右浮动，默认: center，left，right，none 去掉这个属性表示不执行排版</span>
    <span class="token literal-property property">pasteFilter</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//根据规则过滤没事粘贴进来的内容</span>
    <span class="token literal-property property">clearFontSize</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//去掉所有的内嵌字号，使用编辑器默认的字号</span>
    <span class="token literal-property property">clearFontFamily</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//去掉所有的内嵌字体，使用编辑器默认的字体</span>
    <span class="token literal-property property">removeEmptyNode</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 去掉空节点</span>
    <span class="token comment">//可以去掉的标签</span>
    <span class="token literal-property property">removeTagNames</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">标签名字</span><span class="token operator">:</span> <span class="token number">1</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">indent</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 行首缩进</span>
    <span class="token literal-property property">indentValue</span><span class="token operator">:</span> <span class="token string">&#39;2em&#39;</span><span class="token punctuation">,</span> <span class="token comment">//行首缩进的大小</span>
    <span class="token literal-property property">bdc2sb</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tobdc</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>tableDragable {Boolean} [默认值：true] //表格是否可以拖拽</p></li><li><p>disabledTableInTable {Boolean} [默认值：true] //禁止表格嵌套</p></li><li><p>sourceEditor {String} [默认值：&quot;codemirror&quot;] //源码的查看方式，codemirror是代码高亮，textarea是文本框，默认是codemirror，注意默认codemirror只能在ie8+和非ie中使用</p></li><li><p>codeMirrorJsUrl {Path String} [默认值：URL + &quot;third-party/codemirror/codemirror.js&quot;] //如果sourceEditor是codemirror需要配置这项，codeMirror js加载的路径</p></li><li><p>codeMirrorCssUrl {Path String} [默认值：URL + &quot;third-party/codemirror/codemirror.css&quot;] //如果sourceEditor是codemirror需要配置这项，codeMirror css加载的路径</p></li><li><p>sourceEditorFirst {String} [默认值：false] //编辑器初始化完成后是否进入源码模式，默认为否。</p></li><li><p>iframeUrlMap {Object} //dialog内容的路径 ～会被替换成URL，垓属性一旦打开，将覆盖所有的dialog的默认路径</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//默认值：</span>
<span class="token punctuation">{</span>
    <span class="token string-property property">&#39;anchor&#39;</span><span class="token operator">:</span> <span class="token string">&#39;~/dialogs/anchor/anchor.html&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li><p>allowDivTransToP {Boolean} 默认会将外部进入的html数据中的Div标签转换成P标签，外部进入的数据包括粘贴和调用setContent接口进入编辑器的数据。如果设置成false将不在做这个转换。</p></li></ul>`,8);function d(m,y){const a=t("ExternalLinkIcon");return o(),e("div",null,[i,u,n("p",null,[s("后端配置项具体看这个文档L："),n("a",k,[s("后端配置项说明"),l(a)])]),g])}const v=p(c,[["render",d],["__file","editor_uedtaconfig.html.vue"]]);export{v as default};
