import{_ as n,p as s,q as a,a1 as t}from"./framework-d81ad7e5.js";const p={},o=t(`<div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@DateTimeFormat</span><span class="token punctuation">(</span>pattern <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span> <span class="token comment">//入参</span>



<span class="token annotation punctuation">@JsonFormat</span><span class="token punctuation">(</span>timezone <span class="token operator">=</span> <span class="token string">&quot;GMT+8&quot;</span><span class="token punctuation">,</span> pattern <span class="token operator">=</span> <span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span> <span class="token comment">//出参</span>
<span class="token annotation punctuation">@RequestBody</span>
<span class="token comment">// 可以将前台传入的json格式数据自动映射成对象，当如果属性的首字母大写，则会出现不能映射的情况，如：</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token constant">ICCID</span><span class="token punctuation">;</span>
<span class="token comment">// 会出现映射失败的情况解决办法：</span>
</code></pre></div><ol><li>属性推荐使用小写开头，符合java的开发规范；</li><li>实在要使用大写，可以@jsonProperty(&quot;ICCID&quot;)解决，如：</li></ol><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span><span class="token string">&quot;ICCID&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token constant">ICCID</span><span class="token punctuation">;</span>

<span class="token comment">// 实体类大小写</span>

<span class="token annotation punctuation">@JsonProperty</span><span class="token punctuation">(</span><span class="token string">&quot;ID&quot;</span><span class="token punctuation">)</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token constant">ID</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@JsonIgnore</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getID</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">return</span> <span class="token constant">ID</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@JsonIgnore</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setID</span><span class="token punctuation">(</span><span class="token class-name">String</span> iD<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token constant">ID</span> <span class="token operator">=</span> iD<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre></div><p>语法：<code>@RequestParam(value=”参数名”,required=”true/false”,defaultValue=””)</code></p><ul><li><p>value：参数名</p></li><li><p>required：是否包含该参数，默认为true，表示该请求路径中必须包含该参数，如果不包含就报错。</p></li><li><p>defaultValue：默认参数值，如果设置了该值，required=true将失效，自动为false,如果没有传该参数，就使用默认值</p></li></ul><h2 id="spring中接收form表单" tabindex="-1"><a class="header-anchor" href="#spring中接收form表单" aria-hidden="true">#</a> spring中接收form表单</h2><p>第1种方法：表单提交，以字段数组接收； 第2种方法：表单提交，以BeanListModel接收； 第3种方法：将Json对象序列化成Json字符串提交，以List接收； 第4种方法：将表单对象序列化成Json字符串提交，以List接收； 第4种方法其实是第3种方法的升级，就是将表单转成Json对象，再转成Json字符串提交；</p><ul><li>导出 通过表单的方式 <ul><li>将对象数组进行字符串格式化，后台通过JSONUtils 解析数组</li></ul></li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">exportDoc</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

  <span class="token keyword">const</span> obj <span class="token operator">=</span>  <span class="token punctuation">{</span>
   <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span>
   <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xmxm&quot;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> vals <span class="token operator">=</span> proData<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> rbac <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> prefixUrl <span class="token operator">=</span> <span class="token string">&#39;http://127.0.0.1:8080&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> url <span class="token operator">=</span> prefixUrl <span class="token operator">+</span> <span class="token string">&#39;/exportOsvuDoc&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> form <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;form&gt;&lt;/form&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;action&quot;</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;method&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;post&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;input&gt;&lt;/input&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rbac&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> rbac<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;input&gt;&lt;/input&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;total&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> proData<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;input&gt;&lt;/input&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;splt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;12,1,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


  vals<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   form<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;input&gt;&lt;/input&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rows&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  form<span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token punctuation">}</span>
</code></pre></div><ul><li><strong>后台接口</strong></li></ul><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/exportOsvuDoc&quot;</span><span class="token punctuation">)</span>
 <span class="token annotation punctuation">@ResponseBody</span>
 <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportWord</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>
   <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;rbac&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> val<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;splt&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> splt<span class="token punctuation">,</span>
   <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;rows&quot;</span><span class="token punctuation">)</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> rows<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;total&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> total<span class="token punctuation">)</span>
   <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

  <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Problem</span><span class="token punctuation">&gt;</span></span> baseVo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">OsaTable</span> bean <span class="token operator">=</span> <span class="token class-name">GsonUtil</span><span class="token punctuation">.</span><span class="token function">strToJavaBean</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token class-name">OsaTable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> str <span class="token operator">:</span> rows<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   baseVo<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">GsonUtil</span><span class="token punctuation">.</span><span class="token function">strToJavaBean</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token class-name">Problem</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token comment">///校验</span>

   
  data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;pvc&quot;</span><span class="token punctuation">,</span> pvc<span class="token punctuation">)</span><span class="token punctuation">;</span>
  data<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;showLimit&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token class-name">String</span> fileName <span class="token operator">=</span> <span class="token string">&quot;abcd.docx&quot;</span><span class="token punctuation">;</span>
  <span class="token function">exportDocToClient</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> fileName<span class="token punctuation">,</span> <span class="token string">&quot;fin.html&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 将xml模板转换为后缀为doc文件，本质仍是属于xml</span>

 <span class="token punctuation">}</span>
</code></pre></div>`,11),c=[o];function e(u,l){return s(),a("div",null,c)}const k=n(p,[["render",e],["__file","mapping.html.vue"]]);export{k as default};
