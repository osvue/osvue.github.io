import{_ as s,p as a,q as n,a1 as e}from"./framework-d81ad7e5.js";const o={},l=e(`<h4 id="mysql异常" tabindex="-1"><a class="header-anchor" href="#mysql异常" aria-hidden="true">#</a> MySQL异常</h4><h3 id="sql-mode-only-full-group-by" tabindex="-1"><a class="header-anchor" href="#sql-mode-only-full-group-by" aria-hidden="true">#</a> sql_mode=only_full_group_by</h3><ul><li>原因：在MySQL 5.7后MySQL默认开启了SQL_MODE严格模式，对数据进行严格校验。</li><li>会报<strong>sql_mode=only_full_group_by</strong>错误说明写的SQL语句不严谨，</li></ul><ul><li>对于<strong>group by聚合操作，select中的列只能是出现在group by中的列，使用聚合函数除外，如max()、min()等</strong></li></ul><p>如以下例子会报错： <code>select id, no, uid from user_order group by uid;</code> 改成下面的SQL则不报错：</p><p><code>select uid from user_order group by uid;</code></p><h4 id="方法一" tabindex="-1"><a class="header-anchor" href="#方法一" aria-hidden="true">#</a> 方法一：</h4><ul><li><p>使用 <strong>group_concat() 或 any_value()</strong></p></li><li><p>group_concat()：将分到同一组的数据默认用逗号隔开作为返回数据</p></li><li><p>any_value()：将分到同一组的数据里第一条数据的指定列值作为返回数据</p></li><li><p>修改后语句如下：</p></li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> GROUP_CONCAT<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span> GROUP_CONCAT<span class="token punctuation">(</span><span class="token keyword">no</span><span class="token punctuation">)</span><span class="token punctuation">,</span> uid <span class="token keyword">from</span> user_order <span class="token keyword">group</span> <span class="token keyword">by</span> uid<span class="token punctuation">;</span>
<span class="token keyword">select</span> any_value<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span> any_value<span class="token punctuation">(</span><span class="token keyword">no</span><span class="token punctuation">)</span><span class="token punctuation">,</span> uid <span class="token keyword">from</span> user_order <span class="token keyword">group</span> <span class="token keyword">by</span> uid<span class="token punctuation">;</span>
</code></pre></div><h4 id="方法二" tabindex="-1"><a class="header-anchor" href="#方法二" aria-hidden="true">#</a> 方法二：</h4><ul><li>如果语句太多，变动太大，可以改数据库配置</li><li>首先查看当前sql_mode：</li><li>查询sql_mode <code>select @@GLOBAL.sql_mode或者select @@SESSION.sql_mode</code><code>select @@global.sql_mode;</code> 可以看到返回以下值： <code>ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION</code></li><li>重新设置，去掉ONLY_FULL_GROUP_BY即可： <code>SET GLOBAL sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;</code></li><li>当然，如果想去掉所有限制也是可以的： <code>SET GLOBAL sql_mode=&#39;&#39;;</code></li><li>这个方法的好处是不用重启MySQL生效（需要注意的是在当前会话实例中是不生效的），坏处是重启后会恢复原样。</li></ul><h4 id="方法三" tabindex="-1"><a class="header-anchor" href="#方法三" aria-hidden="true">#</a> 方法三：</h4><ul><li><p>永久生效，修改配置文件my.ini</p></li><li><p>在<code>[mysqld]</code>模块下新增一行配置：</p></li><li><p><code>sql_mode=&#39;STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;</code></p></li></ul><p>保存，重启后生效。</p>`,14),p=[l];function _(t,c){return a(),n("div",null,p)}const i=s(o,[["render",_],["__file","sql_mode.html.vue"]]);export{i as default};
