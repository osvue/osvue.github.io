import{_ as e,p as t,q as o,a1 as r}from"./framework-d81ad7e5.js";const s={},a=r('<h3 id="easyui" tabindex="-1"><a class="header-anchor" href="#easyui" aria-hidden="true">#</a> easyui</h3><ul><li><p>关键词 ：<strong><code>_parentId</code></strong></p><ul><li>在返回的对象数据中将父code的属性名设置成**_parentId**，返回easyui分页数据<code>{&quot;total&quot;:,&quot;rows&quot;:[{}]}</code></li><li>（两种方法都必须按照该结构返回数据）后<strong>treegrid</strong>在前台会对数据进行重新装配，页面加载数据会有一个小的卡顿</li></ul></li><li><p>关键词： <strong><code>state、children[]</code></strong></p></li></ul><p>在后台将easyui分页数据直接封装成treegrid数据类型指定父节点的state为closed，并且把子节点放入 <strong>children[]</strong> 中（以一层子类为例，无限层则需要用到递归的方法进行封装）</p>',3),i=[a];function c(n,d){return t(),o("div",null,i)}const u=e(s,[["render",c],["__file","jquery_easyui.html.vue"]]);export{u as default};
