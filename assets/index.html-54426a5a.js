import{_ as l,p as t,q as i,a1 as e}from"./framework-d81ad7e5.js";const a={},r=e('<h1 id="idea-操作技巧" tabindex="-1"><a class="header-anchor" href="#idea-操作技巧" aria-hidden="true">#</a> IDEA 操作技巧</h1><h2 id="intellij-idea-查找接口实现类的快捷键" tabindex="-1"><a class="header-anchor" href="#intellij-idea-查找接口实现类的快捷键" aria-hidden="true">#</a> Intellij IDEA 查找接口实现类的快捷键</h2><p>查找接口的实现类：</p><p>IDEA 风格 ctrl + alt +B</p><hr><p>查看类或接口的继承关系：</p><p>ctrl + h</p><h2 id="查看接口实现方法。" tabindex="-1"><a class="header-anchor" href="#查看接口实现方法。" aria-hidden="true">#</a> 查看接口实现方法。</h2><p>Ctrl+Alt+鼠标左键，查看接口实现方法。</p><ol><li>Ctrl+N按名字搜索类</li></ol><p>相当于eclipse的ctrl+shift+R，输入类名可以定位到这个类文件，就像idea在其它的搜索部分的表现一样，搜索类名也能对你所要搜索的内容多个部分进行匹配，而且如果能匹配的自己写的类，优先匹配自己写的类，甚至不是自己写的类也能搜索。</p><ol start="2"><li>Ctrl+Shift+N按文件名搜索文件</li></ol><p>同搜索类类似，只不过可以匹配所有类型的文件了。</p><ol start="3"><li>Ctrl+H</li></ol><p>查看类的继承关系，例如HashMap的父类是AbstractMap，子类则有一大堆。</p><ol start="4"><li>Ctrl+Alt+B查看子类方法实现</li></ol><p>Ctrl+B可以查看父类或父方法定义，但是不如ctrl+鼠标左键方便。但是在这里，Ctrl+B或ctrl+鼠标左键只能看见Map接口的抽象方法put的定义，不是我们想要的，这时候Ctrl+Alt+B就可以查看HashMap的put方法。</p><ol start="5"><li>Alt+F7查找类或方法在哪被使用</li></ol><p>相当于eclipse的ctrl+shif+H,但是速度快得多。</p><ol start="6"><li>Ctrl+F/Ctrl+Shift+F按照文本的内容查找</li></ol><p>相当于eclipse的ctrl+H，速度优势更加明显。其中Ctrl+F是在本页查找，Ctrl+Shift+F是全局查找。</p><ol start="7"><li>Shift+Shift搜索任何东西</li></ol><p>shift+shift非常强大，可搜索类、资源、配置项、方法等，还能搜索路径。其中搜索路径非常实用，例如你写了一个功能叫hello，在java，js，css，jsp中都有hello的文件夹，那我们可以搜索&quot;hello/&quot;找到路径中包含hello的文件夹。</p><ol start="8"><li>查看接口的实现类</li></ol><p>IDEA 风格 ctrl + alt +B 或者 Ctrl+Alt+鼠标左键</p><h3 id="intellij-idea怎么设置自动导入包" tabindex="-1"><a class="header-anchor" href="#intellij-idea怎么设置自动导入包" aria-hidden="true">#</a> Intellij IDEA怎么设置自动导入包</h3><ol><li>找到菜单栏File，点击Settings打开设置。</li><li>选择<strong>Editor，General， Auto Import</strong>。勾选图示 <code>add fly</code> 两个选项。点击Apply，OK保存。</li></ol><h3 id="intellij-idea如何手动编译项目" tabindex="-1"><a class="header-anchor" href="#intellij-idea如何手动编译项目" aria-hidden="true">#</a> IntelliJ IDEA如何手动编译项目</h3><ol><li>点击菜单的build快捷键，有 <strong>build和rebuild</strong>两种方式，其中build只编译修改过的文件，而rebuild会将所有选中的文件，包括修改和未修改的文件都再编译一次。</li><li>build的目标有project和module两种，project相当于eclipse的workspace，module相当于eclipse的project。一个javaweb项目是一个module。</li><li>快捷键<strong>ctrl+f9</strong></li></ol>',29),o=[r];function d(s,h){return t(),i("div",null,o)}const c=l(a,[["render",d],["__file","index.html.vue"]]);export{c as default};
