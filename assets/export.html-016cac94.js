import{_ as n,p as s,q as a,a1 as p}from"./framework-d81ad7e5.js";const t={},o=p(`<p>在nodejs中，提供了exports 和 require 两个对象，其中 exports 是模块公开的接口，require 用于从外部获取一个模块的接口，即所获取模块的 exports 对象。在我们自己写模块的时候，需要在模块最后写好模块接口，声明这个模块对外暴露什么内容，module.exports 提供了暴露接口的方法。</p><ol><li>返回一个JSON Object</li></ol><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">//app.js</span>
<span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;app&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token string">&#39;1.0.0&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">sayHello</span><span class="token operator">:</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function-variable function">sayName</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> app<span class="token punctuation">;</span>
</code></pre></div><p>调用方法：(可传入参数)</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">var</span> app <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./app.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">sayName</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//hello</span>
app<span class="token punctuation">.</span><span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//hello</span>
</code></pre></div><ol start="2"><li>返回一个模块函数</li></ol><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">//function.js</span>
<span class="token keyword">var</span> <span class="token function-variable function">func1</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;func1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
 
<span class="token keyword">var</span> <span class="token function-variable function">func2</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;func2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
 
exports<span class="token punctuation">.</span>function1 <span class="token operator">=</span> func1<span class="token punctuation">;</span>
exports<span class="token punctuation">.</span>function2 <span class="token operator">=</span> func2<span class="token punctuation">;</span>
</code></pre></div><p>调用方法：</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">var</span> functions <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;./function.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
functions<span class="token punctuation">.</span><span class="token function">function1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
functions<span class="token punctuation">.</span><span class="token function">function2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol start="3"><li>返回一个构造函数</li></ol><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">//CLASS.js</span>
<span class="token keyword">var</span> <span class="token function-variable function">CLASS</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">this</span><span class="token punctuation">.</span>args <span class="token operator">=</span> args<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token constant">CLASS</span><span class="token punctuation">;</span>
</code></pre></div><p>调用方法：</p><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token keyword">var</span> <span class="token constant">CLASS</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./CLASS.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CLASS</span><span class="token punctuation">(</span><span class="token string">&#39;arguments&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol start="4"><li>返回一个实例对象：</li></ol><div class="language-jsx" data-ext="jsx"><pre class="language-jsx"><code><span class="token comment">//CLASS.js</span>
<span class="token keyword">var</span> <span class="token function-variable function">CLASS</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;class&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token constant">CLASS</span> <span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">func</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CLASS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>调用方法：</p><div class="language-swift" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">var</span> c <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>&#39;<span class="token operator">./</span><span class="token constant">CLASS</span><span class="token punctuation">.</span>js&#39;<span class="token punctuation">)</span><span class="token punctuation">;</span>
c<span class="token punctuation">.</span><span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//&quot;class&quot;</span>
</code></pre></div>`,17),c=[o];function e(u,l){return s(),a("div",null,c)}const i=n(t,[["render",e],["__file","export.html.vue"]]);export{i as default};
