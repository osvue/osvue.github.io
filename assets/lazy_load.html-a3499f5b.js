import{_ as n,p as o,q as e,a1 as s}from"./framework-d81ad7e5.js";const t={},c=s(`<h4 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h4><p>优先加载可视区域的内容，其他部分等进入了可视区域再加载，从而提高性能</p><p><strong>原理：</strong></p><p>一张图片就是一个<code>标签，浏览器是否发起请求图片是根据</code>的<code>src</code>属性，所以实现懒加载的关键就是，在图片没有进入可视区域时，先不给\`\`的src赋值，这样浏览器就不会发送请求了，等到图片进入可视区域再给<code>src</code>赋值。</p><h3 id="监听页面滚动事件" tabindex="-1"><a class="header-anchor" href="#监听页面滚动事件" aria-hidden="true">#</a> 监听页面滚动事件</h3><ul><li>分析<strong>clientHeight</strong>、<strong>scrollTop</strong>、<strong>scrollHeight</strong>三者的属性关系。</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;scroll&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> clientHeight <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>
  <span class="token keyword">const</span> scrollTop <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>
  <span class="token keyword">const</span> scrollHeight <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollHeight<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>clientHeight <span class="token operator">+</span> scrollTop <span class="token operator">&gt;=</span> scrollHeight<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 检测到滚动至页面底部，进行后续操作</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>页面布局位置基础知识</p><blockquote><ul><li>网页可见区域宽： <code>document.body.clientWidth</code>;</li><li>网页可见区域高： <code>document.body.clientHeight;</code></li><li>网页可见区域宽： <code>document.body.offsetWidth </code>(包括边线的宽);</li><li>网页可见区域高： <code>document.body.offsetHeight</code> (包括边线的高);</li></ul></blockquote><blockquote><ul><li>网页正文全文宽： <code>document.body.scrollWidth;</code></li><li>网页正文全文高： <code>document.body.scrollHeight;</code></li><li>网页被卷去的高： <code>document.body.scrollTop;</code></li><li>网页被卷去的左： <code>document.body.scrollLeft;</code></li></ul></blockquote><blockquote><ul><li>网页正文部分上： <code>window.screenTop;</code></li><li>网页正文部分左： <code>window.screenLeft;</code></li><li>屏幕分辨率的高： <code>window.screen.height;</code></li><li>屏幕分辨率的宽： <code>window.screen.width;</code></li><li>屏幕可用工作区高度： <code>window.screen.availHeight;</code></li></ul></blockquote><ul><li>对块级元素来说，<code>offsetTop</code>、<code>offsetLeft</code>、<code>offsetWidth </code>及 <code>offsetHeight </code>描述了元素相对于 <code>offsetParent </code>的边界框</li><li><code>HTMLElement.offsetParent</code> 是一个只读属性，返回一个指向最近的（指包含层级上的最近）包含该元素的定位元素或者最近的 <code>table,td,th,body</code>元素。当元素的 <code>style.display</code> 设置为 &quot;none&quot; 时，<code>offsetParent </code>返回 <code>null</code>。<code>offsetParent </code>很有用，因为 <code>offsetTop </code>和 <code>offsetLeft </code>都是相对于其内边距边界的。</li><li><code>HTMLElement.offsetTop</code> 为只读属性，它返回当前元素相对于其 offsetParent 元素的顶部的距离。</li><li><code>window.innerHeight：</code>浏览器窗口的视口（viewport）高度（以像素为单位）；如果有水平滚动条，也包括滚动条高度。</li></ul>`,12),a=[c];function l(p,d){return o(),e("div",null,a)}const u=n(t,[["render",l],["__file","lazy_load.html.vue"]]);export{u as default};
