import{_ as n,p as s,q as a,a1 as t}from"./framework-d81ad7e5.js";const p={},o=t(`<ul><li>在每次提交任务的时候需要描述一些批注信息，例如：请假流程提交的时候要描述信息为什么请假，如果领导驳回可以批注驳回原因等</li><li><strong>由于流程用户上下文对象是线程独立的，所以要在需要的位置设置，要保证设置和获取操作在同一个线程中</strong></li></ul><ol><li>添加批注</li></ol><div class="language-java" data-ext="java"><pre class="language-java"><code>　　　　<span class="token comment">// 由于流程用户上下文对象是线程独立的，所以要在需要的位置设置，要保证设置和获取操作在同一个线程中</span>
        <span class="token class-name">Authentication</span><span class="token punctuation">.</span><span class="token function">setAuthenticatedUserId</span><span class="token punctuation">(</span><span class="token class-name">UserContext</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//批注人的名称  一定要写，不然查看的时候不知道人物信息</span>
        <span class="token comment">// 添加批注信息</span>
        taskService<span class="token punctuation">.</span><span class="token function">addComment</span><span class="token punctuation">(</span>taskId<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> comment<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//comment为批注内容</span>
        <span class="token comment">// 完成任务</span>
        taskService<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span>taskId<span class="token punctuation">,</span>vars<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//vars是一些变量</span>
</code></pre></div><h4 id="service" tabindex="-1"><a class="header-anchor" href="#service" aria-hidden="true">#</a> service</h4><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token comment">//查询批注信息</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">&gt;</span></span> <span class="token function">getComment</span><span class="token punctuation">(</span><span class="token class-name">String</span> taskId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">// 根据任务id查询流程实例id</span>
<span class="token class-name">String</span> processInstanceId <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">createTaskQuery</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">taskId</span><span class="token punctuation">(</span>taskId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">singleResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getProcessInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">&gt;</span></span> commentList <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">getProcessInstanceComments</span><span class="token punctuation">(</span>processInstanceId<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> commentList<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CommontVo</span><span class="token punctuation">&gt;</span></span> <span class="token function">commontTask</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> param<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Object</span> instanceId <span class="token operator">=</span> param<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;processInstanceId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">CommontVo</span><span class="token punctuation">&gt;</span></span> cList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">&gt;</span></span> comments <span class="token operator">=</span> taskService<span class="token punctuation">.</span><span class="token function">getProcessInstanceComments</span><span class="token punctuation">(</span>instanceId<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Comment</span> itm <span class="token operator">:</span>
				comments<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">CommontVo</span> vo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CommontVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			vo<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>itm<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			vo<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span>itm<span class="token punctuation">.</span><span class="token function">getFullMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			vo<span class="token punctuation">.</span><span class="token function">setCtime</span><span class="token punctuation">(</span>itm<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			vo<span class="token punctuation">.</span><span class="token function">setTaskId</span><span class="token punctuation">(</span>itm<span class="token punctuation">.</span><span class="token function">getTaskId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			vo<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>itm<span class="token punctuation">.</span><span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			vo<span class="token punctuation">.</span><span class="token function">setProcessInstanceId</span><span class="token punctuation">(</span>itm<span class="token punctuation">.</span><span class="token function">getProcessInstanceId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		 

			cList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>vo<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

</code></pre></div>`,5),c=[o];function e(u,l){return s(),a("div",null,c)}const k=n(p,[["render",e],["__file","activiti_l_commont.html.vue"]]);export{k as default};
