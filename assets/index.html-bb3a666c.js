import{_ as e,p as a,q as t,a1 as r}from"./framework-d81ad7e5.js";const i={},c=r('<h2 id="java-优化" tabindex="-1"><a class="header-anchor" href="#java-优化" aria-hidden="true">#</a> java 优化</h2><h2 id="a-加缓存b-分层" tabindex="-1"><a class="header-anchor" href="#a-加缓存b-分层" aria-hidden="true">#</a> a. 加缓存 b. 分层</h2><ul><li>Netty 是由 JBOSS 提供的一个 Java 开源框架，现为 Github上的独立项目。</li><li>Netty 是一个异步的、基于事件驱动的网络应用框架，用以快速开发高性能、高可靠性的网络 IO 程序。</li><li>Netty主要针对在TCP协议下，面向Clients端的高并发应用，或者Peer-to-Peer场景下的大量数据持续传输的应用。</li><li>Netty本质是一个NIO框架，适用于服务器通讯相关的多种应用场景</li></ul><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>NIO 的类库和 API 繁杂，使用麻烦：需要熟练掌握 Selector、ServerSocketChannel、SocketChannel、ByteBuffer 等。 <br> 需要具备其他的额外技能：要熟悉 Java 多线程编程，因为 NIO 编程涉及到 Reactor 模式，你必须对多线程和网络编程非常熟悉，才能编写出高质量的 NIO 程序。 <br> 开发工作量和难度都非常大：例如客户端面临断连重连、网络闪断、半包读写、失败缓存、网络拥塞和异常流的处理等等。 <br> JDK NIO 的 Bug：例如臭名昭著的 Epoll Bug，它会导致 Selector 空轮询，最终导致 CPU 100%。直到 JDK 1.7 版本该问题仍旧存在，没有被根本解决。</p></div>',4),l=[c];function n(o,s){return a(),t("div",null,l)}const h=e(i,[["render",n],["__file","index.html.vue"]]);export{h as default};
