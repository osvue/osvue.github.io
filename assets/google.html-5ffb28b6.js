import{_ as e,p as t,q as o,a1 as a}from"./framework-d81ad7e5.js";const i="/assets/a-07d2617b.jpg",r="/assets/b-a59f4d40.jpg",s="/assets/c-47518eef.jpg",d={},l=a('<h2 id="隐藏书签栏" tabindex="-1"><a class="header-anchor" href="#隐藏书签栏" aria-hidden="true">#</a> 隐藏书签栏</h2><ul><li><ul><li>启动Chrome，单击菜单图标，指向“书签”，然后单击“显示书签栏”。 或者，您可以按Ctrl + Shift + B（在Windows中）或Command + Shift + B（在macOS中）</li></ul></li></ul><h2 id="chrome-snippets-小脚本" tabindex="-1"><a class="header-anchor" href="#chrome-snippets-小脚本" aria-hidden="true">#</a> Chrome snippets 小脚本</h2><blockquote><p>我们也可以在 Chrome 浏览器中创建一个脚本来执行，在开发者工具中点击 Sources 面板，选择 Snippets 选项卡，在导航器中右击鼠标，然后选择 Creat new snippet 来新建一个脚本文件：</p></blockquote><p><img src="'+i+'" alt="alrt"></p><p>如果你没看到 Snippets ，可以点下面板上到 <code>&gt;&gt;</code> 就能看到了。</p><p><img src="'+r+'" alt="alrt"> 点击 Creat new snippet 后，会自动创建一个文件，你只需在右侧窗口输入以下代码，然后按 Command+S（Mac）或 Ctrl+S（Windows 和 Linux）保存更改即可。 保存后，右击文件名，选择 &quot;Run&quot; 执行代码： <img src="'+s+`" alt="alrt"></p><h2 id="chrome浏览器-强制刷新页面-不使用缓存" tabindex="-1"><a class="header-anchor" href="#chrome浏览器-强制刷新页面-不使用缓存" aria-hidden="true">#</a> Chrome浏览器 强制刷新页面(不使用缓存)</h2><ol><li>Chrome官方推荐使用如下快捷键，就可以不使用页面缓存进行刷新</li></ol><div class="language-text" data-ext="text"><pre class="language-text"><code>Windows和Linux操作系统: Shift+F5 或 Ctrl+Shift+R

Mac OS: Cmd+Shft+R
</code></pre></div><ol start="2"><li>如果上面方法没有效果，可以按下F12(Windows) 或 Cmd+Opt+I(MAC)，打开&quot;开发者工具&quot;，然后在Refresh按扭上点右键，在弹出菜单上选择&quot;清空缓存并硬件加载&quot;</li></ol><h2 id="禁止复制" tabindex="-1"><a class="header-anchor" href="#禁止复制" aria-hidden="true">#</a> 禁止复制</h2><div class="language-text" data-ext="text"><pre class="language-text"><code>
F12 ==&gt; F1  ==&gt;  debugger ==&gt; disableJavaScript

</code></pre></div><h2 id="_1-一键重新发起请求" tabindex="-1"><a class="header-anchor" href="#_1-一键重新发起请求" aria-hidden="true">#</a> 1#. 一键重新发起请求</h2><p>在与后端接口联调或排查线上BUG时，你是不是也经常听到他们说这句话：<strong>你再发起一次请求试试，我这边看下为啥出错了！</strong></p><p>重发请求，这有一种简单到发指的方式。</p><ol><li>选中<code>Network</code></li><li>点击<code>Fetch/XHR</code></li><li>选择要重新发送的请求</li><li>右键选择<code>Replay XHR</code></li></ol><p>2#. 在控制台快速发起请求</p><p>还是联调或修BUG的场景，针对同样的请求，有时候需要<strong>修改入参</strong>重新发起，有啥快捷方式？</p><ol><li>选中<code>Network</code></li><li>点击<code>Fetch/XHR</code></li><li>选择<code>Copy as fetch</code></li><li>控制台粘贴代码</li><li>修改参数，回车搞定</li></ol><h2 id="_5-截取一张全屏的网页" tabindex="-1"><a class="header-anchor" href="#_5-截取一张全屏的网页" aria-hidden="true">#</a> 5#. 截取一张全屏的网页</h2><p>偶尔咱们也会有对网页截屏的需求，一屏还好，系统自带的截屏或者微信截图等都可以办到，但是要求<strong>将超出一屏的内容也截下来咋办呢</strong>？</p><ol><li>准备好需要截屏的内容</li><li><code>cmd + shift + p</code> 执行<code>Command</code>命令</li><li>输入<code>Capture full size screenshot</code> 按下回车</li></ol><p><strong>如果要截取选中的部分元素呢？</strong></p><p>答案也很简单，第三步输入<code>Capture node screenshot</code>即可</p><h3 id="重发请求" tabindex="-1"><a class="header-anchor" href="#重发请求" aria-hidden="true">#</a> 重发请求</h3><blockquote><p>network 重新发送的请求，右键<strong>Copy--&gt;Copy as fetch</strong></p></blockquote>`,27),c=[l];function n(h,p){return t(),o("div",null,c)}const g=e(d,[["render",n],["__file","google.html.vue"]]);export{g as default};
