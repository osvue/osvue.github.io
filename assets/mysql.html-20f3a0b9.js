import{_ as t,M as e,p,q as o,R as s,t as n,N as l,a1 as c}from"./framework-d81ad7e5.js";const i={},r=c(`<h2 id="if表达式" tabindex="-1"><a class="header-anchor" href="#if表达式" aria-hidden="true">#</a> IF表达式</h2><ul><li>IF(expr1,expr2,expr3)</li></ul><blockquote><p>如果 expr1 是TRUE (expr1 &lt;&gt; 0 and expr1 &lt;&gt; NULL)， 则 IF()的返回值为expr2; 否则返回值则为 expr3。 IF() 的返回值为数字值或字符串值，具体情况视其所在语境而定。</p></blockquote><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> 
    <span class="token keyword">IF</span><span class="token punctuation">(</span>sva<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> s 
    <span class="token keyword">FROM</span> table_name
<span class="token keyword">WHERE</span> sva <span class="token operator">!=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="sql中的case-when-then-判断" tabindex="-1"><a class="header-anchor" href="#sql中的case-when-then-判断" aria-hidden="true">#</a> SQL中的case when then 判断</h2><ul><li>--简单Case函数</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>    <span class="token keyword">CASE</span> sex
        <span class="token keyword">WHEN</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;男&#39;</span>
        <span class="token keyword">WHEN</span> <span class="token string">&#39;2&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;女&#39;</span>
    <span class="token keyword">ELSE</span> <span class="token string">&#39;其他&#39;</span> <span class="token keyword">END</span>

    <span class="token keyword">CASE</span> ISNULL<span class="token punctuation">(</span>c<span class="token punctuation">.</span>EXECUTION_LIMIT<span class="token punctuation">)</span>
    <span class="token keyword">WHEN</span>  <span class="token boolean">TRUE</span>   <span class="token keyword">THEN</span>
        l<span class="token punctuation">.</span>GUARANTEE_AMOUN
    <span class="token keyword">ELSE</span>
        l<span class="token punctuation">.</span>GUARANTEE_AMOUN<span class="token operator">-</span>c<span class="token punctuation">.</span>EXECUTION_LIMIT
    <span class="token keyword">END</span> <span class="token punctuation">)</span> <span class="token keyword">AS</span> alias
</code></pre></div><ul><li>--Case搜索函数</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>    <span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> sex <span class="token operator">=</span> <span class="token string">&#39;1&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;男&#39;</span>
    <span class="token keyword">WHEN</span> sex <span class="token operator">=</span> <span class="token string">&#39;2&#39;</span> <span class="token keyword">THEN</span> <span class="token string">&#39;女&#39;</span>
    <span class="token keyword">ELSE</span> <span class="token string">&#39;其他&#39;</span> <span class="token keyword">END</span>
</code></pre></div><h2 id="sql-中的截取" tabindex="-1"><a class="header-anchor" href="#sql-中的截取" aria-hidden="true">#</a> sql 中的截取</h2><ul><li>substring 返回字符、binary、text 或 image 表达式的一部分。</li></ul><ul><li><ul><li>基本语法: <strong>SUBSTRING ( expression , start , length )</strong></li></ul></li><li><ul><li>expression:字符串、二进制字符串、text、image、列或包含列的表达式</li></ul></li><li><ul><li>start:整数，指定子串的开始位置</li></ul></li><li><ul><li>注:SQL中&quot;1&quot;表示字符串中的第一个字符,而.NET中&quot;0&quot;表示第一个字符</li></ul></li><li><ul><li>length:整数，指定子串的长度（要返回的字符数或字节数）</li></ul></li></ul><h2 id="sql获取字符串长度函数" tabindex="-1"><a class="header-anchor" href="#sql获取字符串长度函数" aria-hidden="true">#</a> sql获取字符串长度函数</h2><ul><li>char_lenght返回字符串长度</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>char_lenght<span class="token punctuation">(</span>string<span class="token punctuation">)</span>  <span class="token comment">-- 字符串</span>
  示例：
     <span class="token keyword">SELECT</span> classfyname<span class="token punctuation">,</span>CHAR_LENGHT<span class="token punctuation">(</span>lassfyname<span class="token punctuation">)</span> <span class="token keyword">FROM</span> f79_22_volume 
</code></pre></div><h2 id="日期转换" tabindex="-1"><a class="header-anchor" href="#日期转换" aria-hidden="true">#</a> 日期转换</h2><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>to_char<span class="token punctuation">(</span><span class="token keyword">date</span><span class="token punctuation">,</span><span class="token string">&#39;格式&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">select</span> to_date<span class="token punctuation">(</span><span class="token string">&#39;2005-01-01 &#39;</span><span class="token punctuation">,</span><span class="token string">&#39;yyyy-MM-dd&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
<span class="token keyword">select</span> to_char<span class="token punctuation">(</span>sysdate<span class="token punctuation">,</span><span class="token string">&#39;yyyy-MM-dd HH24:mi:ss&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> dual<span class="token punctuation">;</span>
</code></pre></div><h2 id="计算某日期到当前日期的时间间距" tabindex="-1"><a class="header-anchor" href="#计算某日期到当前日期的时间间距" aria-hidden="true">#</a> 计算某日期到当前日期的时间间距</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>用到了sql语句中的 TIMESTAMPDIFF（ <strong>单位</strong> ，开始时间，结束时间）函数 其中单位可以为：</p></div><ul><li>YEAR 年</li><li>QUARTER 季度</li><li>MONTH 月</li><li>WEEk 星期</li><li>DAY 天</li><li>HOUR 小时</li><li>MINUTE 分钟</li><li>SECOND 秒</li><li>FRAC_SECOND 毫秒</li></ul><ul><li><ul><li>其中以年为单位，如下所示代码</li></ul></li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>    <span class="token keyword">SELECT</span>
    TIMESTAMPDIFF<span class="token punctuation">(</span> <span class="token keyword">YEAR</span><span class="token punctuation">,</span> <span class="token string">&#39;1997-05-31&#39;</span><span class="token punctuation">,</span> CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&#39;年龄&#39;</span>
</code></pre></div><ul><li>查询到当前年份季度的时候</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>    <span class="token keyword">SELECT</span>
    TIMESTAMPDIFF<span class="token punctuation">(</span>
        QUARTER <span class="token punctuation">,</span>
        <span class="token string">&#39;1997-05-31&#39;</span><span class="token punctuation">,</span>
        CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&#39;季度&#39;</span>
</code></pre></div><h2 id="mysql-为日期增加一个时间间隔-date-add" tabindex="-1"><a class="header-anchor" href="#mysql-为日期增加一个时间间隔-date-add" aria-hidden="true">#</a> MySQL 为日期增加一个时间间隔：date_add()</h2><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">set</span> <span class="token variable">@dt</span> <span class="token operator">=</span> <span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> date_add<span class="token punctuation">(</span><span class="token variable">@dt</span><span class="token punctuation">,</span> <span class="token keyword">interval</span> <span class="token number">1</span> <span class="token keyword">day</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- add 1 day</span>
<span class="token keyword">select</span> date_add<span class="token punctuation">(</span><span class="token variable">@dt</span><span class="token punctuation">,</span> <span class="token keyword">interval</span> <span class="token number">1</span> <span class="token keyword">hour</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- add 1 hour</span>
<span class="token keyword">select</span> date_add<span class="token punctuation">(</span><span class="token variable">@dt</span><span class="token punctuation">,</span> <span class="token keyword">interval</span> <span class="token number">1</span> <span class="token keyword">minute</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">-- ...</span>
<span class="token keyword">select</span> date_add<span class="token punctuation">(</span><span class="token variable">@dt</span><span class="token punctuation">,</span> <span class="token keyword">interval</span> <span class="token number">1</span> <span class="token keyword">second</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> date_add<span class="token punctuation">(</span><span class="token variable">@dt</span><span class="token punctuation">,</span> <span class="token keyword">interval</span> <span class="token number">1</span> microsecond<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> date_add<span class="token punctuation">(</span><span class="token variable">@dt</span><span class="token punctuation">,</span> <span class="token keyword">interval</span> <span class="token number">1</span> week<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> date_add<span class="token punctuation">(</span><span class="token variable">@dt</span><span class="token punctuation">,</span> <span class="token keyword">interval</span> <span class="token number">1</span> <span class="token keyword">month</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> date_add<span class="token punctuation">(</span><span class="token variable">@dt</span><span class="token punctuation">,</span> <span class="token keyword">interval</span> <span class="token number">1</span> quarter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> date_add<span class="token punctuation">(</span><span class="token variable">@dt</span><span class="token punctuation">,</span> <span class="token keyword">interval</span> <span class="token number">1</span> <span class="token keyword">year</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>MySQL 日期、时间相减函数：datediff(date1,date2), timediff(time1,time2)</p></div><ul><li><strong>MySQL datediff(date1,date2)：两个日期相减 date1 - date2，返回天数。</strong></li></ul><ul><li><strong>select datediff(&#39;2008-08-08&#39;, &#39;2008-08-01&#39;); -- 7</strong></li><li><strong>select datediff(&#39;2008-08-01&#39;, &#39;2008-08-08&#39;); -- -7</strong></li></ul><ul><li><strong>MySQL timediff(time1,time2)：两个日期相减 time1 - time2，返回 time 差值</strong></li></ul><ul><li><strong>select timediff(&#39;2008-08-08 08:08:08&#39;, &#39;2008-08-08 00:00:00&#39;); -- 08:08:08</strong></li><li><strong>select timediff(&#39;08:08:08&#39;, &#39;00:00:00&#39;); -- 08:08:08</strong></li></ul><ul><li>注意：timediff(time1,time2) 函数的两个参数类型必须相同。</li></ul><details class="custom-container details"><p>MySQL 时间戳（timestamp）转换、增、减函数：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">timestamp</span><span class="token punctuation">(</span><span class="token keyword">date</span><span class="token punctuation">)</span> <span class="token comment">-- date to timestamptimestamp(dt,time) -- dt + time</span>
timestampadd<span class="token punctuation">(</span>unit<span class="token punctuation">,</span><span class="token keyword">interval</span><span class="token punctuation">,</span>datetime_expr<span class="token punctuation">)</span> <span class="token comment">--</span>
timestampdiff<span class="token punctuation">(</span>unit<span class="token punctuation">,</span>datetime_expr1<span class="token punctuation">,</span>datetime_expr2<span class="token punctuation">)</span> <span class="token comment">--</span>
</code></pre></div></details><h2 id="distinct" tabindex="-1"><a class="header-anchor" href="#distinct" aria-hidden="true">#</a> distinct</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>在 SQL 中，关键字 distinct 用于返回唯一不同的值。其语法格式为： SELECT DISTINCT 列名称 FROM 表名称</p></div><blockquote><p>关键字 distinct 只能放在 SQL 语句中所有字段的最前面才能起作用，如果放错位置，SQL 不会报错，但也不会起到任何效果。</p></blockquote><ul><li>当 distinct 时作用在多个字段的候，她只会将所有字段值都相同的记录“去重”掉</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">distinct</span> name<span class="token punctuation">)</span> <span class="token keyword">from</span> <span class="token keyword">table</span> <span class="token keyword">group</span> <span class="token keyword">by</span> name

</code></pre></div><table><thead><tr><th>id</th><th style="text-align:center;">name</th><th style="text-align:right;">count(distinct name)</th></tr></thead><tbody><tr><td>1</td><td style="text-align:center;">a</td><td style="text-align:right;">1</td></tr><tr><td>2</td><td style="text-align:center;">b</td><td style="text-align:right;">1</td></tr><tr><td>3</td><td style="text-align:center;">c</td><td style="text-align:right;">1</td></tr></tbody></table><ul><li>最后一项是多余的，不用管就行了，目的达到</li><li>group by 必须放在 order by 和 limit之前，不然会报错</li></ul><h2 id="and与or优先级" tabindex="-1"><a class="header-anchor" href="#and与or优先级" aria-hidden="true">#</a> and与or优先级</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>在where中可以包含任意数目的and和or操作符，在没有任何其他符号的时候，例如括号，SQL会首先执行and条件，然后才执行or语句，如：</p></div><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">table</span> <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">or</span> id<span class="token operator">=</span><span class="token number">2</span> <span class="token operator">and</span> price<span class="token operator">&gt;=</span><span class="token number">10</span><span class="token punctuation">;</span>

<span class="token comment">--这条语句默认执行的是id=2并且price大于等于10的，或者是id=1。</span>
<span class="token comment">--如果加上括号：</span>

<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token keyword">table</span> <span class="token keyword">where</span> <span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">or</span> id<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">and</span> price<span class="token operator">&gt;=</span><span class="token number">10</span><span class="token punctuation">;</span>

<span class="token comment">--则这条语句执行的是id=1或id=2,并且price大于等于10。</span>

</code></pre></div><h2 id="substr-截取" tabindex="-1"><a class="header-anchor" href="#substr-截取" aria-hidden="true">#</a> substr 截取</h2><p><strong>1、left（name,4）截取左边的4个字符</strong></p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">LEFT</span><span class="token punctuation">(</span><span class="token number">201809</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span> 年
</code></pre></div><p>结果：2018</p><p><strong>2、right（name,2）截取右边的2个字符</strong></p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">RIGHT</span><span class="token punctuation">(</span><span class="token number">201809</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> 月份
</code></pre></div><p>结果：09</p><p><strong>3、SUBSTRING(name,5,3) 截取name这个字段 从第五个字符开始 只截取之后的3个字符</strong></p><div class="language-text" data-ext="text"><pre class="language-text"><code>SELECT SUBSTRING(&#39;成都融资事业部&#39;,5,3)
</code></pre></div><p>结果：事业部</p><p><strong>4、SUBSTRING(name,3) 截取name这个字段 从第三个字符开始，之后的所有个字符</strong></p><div class="language-text" data-ext="text"><pre class="language-text"><code>SELECT SUBSTRING(&#39;成都融资事业部&#39;,3)
</code></pre></div><p>结果：融资事业部</p><p><strong>5、SUBSTRING(name, -4) 截取name这个字段的第 4 个字符位置（倒数）开始取，直到结束</strong></p><div class="language-text" data-ext="text"><pre class="language-text"><code>SELECT SUBSTRING(&#39;成都融资事业部&#39;,-4)
</code></pre></div><p>结果：资事业部</p><p><strong>6、SUBSTRING(name, -4，2) 截取name这个字段的第 4 个字符位置（倒数）开始取，只截取之后的2个字符</strong></p><div class="language-text" data-ext="text"><pre class="language-text"><code>SELECT SUBSTRING(&#39;成都融资事业部&#39;,-4,2)
</code></pre></div><p>结果：资事</p><p>注意：我们注意到在函数 substring(str,pos, len)中， pos 可以是负值，但 len 不能取负值。</p><p><strong>7、substring_index(&#39;www.baidu.com&#39;, &#39;.&#39;, 2) 截取第二个 &#39;.&#39; 之前的所有字符</strong></p><div class="language-text" data-ext="text"><pre class="language-text"><code>SELECT substring_index(&#39;www.baidu.com&#39;, &#39;.&#39;, 2)
</code></pre></div>`,65),d={href:"http://www.baidu/",target:"_blank",rel:"noopener noreferrer"},u=s("p",null,[s("strong",null,"8、substring_index('www.baidu.com', '.', -2) 截取第二个 '.' （倒数）之后的所有字符")],-1),k=s("div",{class:"language-text","data-ext":"text"},[s("pre",{class:"language-text"},[s("code",null,`SELECT substring_index('www.baidu.com', '.', -2)
`)])],-1),g=s("p",null,"结果：baidu.com",-1),m=s("p",null,[s("strong",null,"9、SUBSTR(name, 1, CHAR_LENGTH(name)-3) 截取name字段，取除name字段后三位的所有字符")],-1),y=s("div",{class:"language-text","data-ext":"text"},[s("pre",{class:"language-text"},[s("code",null,`SELECT SUBSTR('成都融资事业部', 1, CHAR_LENGTH('成都融资事业部')-3)
`)])],-1),w=s("p",null,"结果：成都融资",-1);function h(x,E){const a=e("ExternalLinkIcon");return p(),o("div",null,[r,s("p",null,[n("结果："),s("a",d,[n("www.baidu"),l(a)])]),u,k,g,m,y,w])}const v=t(i,[["render",h],["__file","mysql.html.vue"]]);export{v as default};
