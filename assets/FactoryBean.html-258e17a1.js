import{_ as a,p as e,q as n,a1 as r}from"./framework-d81ad7e5.js";const t={},o=r('<h2 id="factorybean" tabindex="-1"><a class="header-anchor" href="#factorybean" aria-hidden="true">#</a> FactoryBean</h2><p>是什么？</p><ul><li>FactoryBean就是一个工厂Bean，相当于将工厂类放到了Spring中管理、当获取此Bean的时候返回的是此工厂生成的Bean</li><li>FactoryBean就是 生产 Bean 的 Bean 它的目的就是创建一个对象 <ol><li>FactoryBean本身是就是一个Spring Bean。</li><li>FactoryBean的目的是用来创建对象的（可能返回的是不是同一个bean，可以理解为简单工厂）</li></ol></li></ul><h3 id="beanfactory与factorybean的区别" tabindex="-1"><a class="header-anchor" href="#beanfactory与factorybean的区别" aria-hidden="true">#</a> BeanFactory与FactoryBean的区别</h3><ul><li>BeanFactory是个<strong>Factory</strong>，也就是IOC容器或对象工厂，而<strong>FactoryBean</strong>是个Bean。</li><li>在Spring中，所有的Bean都是由BeanFactory(也就是IOC容器)来进行管理的。</li><li>但对FactoryBean而言，这个Bean不是简单的Bean，而是一个能生产或者修饰对象生成的工厂Bean,它的实现与设计模式中的工厂模式和修饰器模式类似。</li></ul><h3 id="objectfactory" tabindex="-1"><a class="header-anchor" href="#objectfactory" aria-hidden="true">#</a> objectFactory</h3><ul><li>延迟加载</li></ul>',7),c=[o];function i(l,B){return e(),n("div",null,c)}const h=a(t,[["render",i],["__file","FactoryBean.html.vue"]]);export{h as default};
