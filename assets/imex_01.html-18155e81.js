import{_ as n,p as s,q as a,a1 as t}from"./framework-d81ad7e5.js";const p={},o=t(`<h2 id="导出txt" tabindex="-1"><a class="header-anchor" href="#导出txt" aria-hidden="true">#</a> 导出txt</h2><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/txt&quot;</span><span class="token punctuation">)</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">exportTxt</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token comment">//导出txt文件</span>
		response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">String</span> fileName <span class="token operator">=</span> <span class="token string">&quot;产品信息&quot;</span><span class="token punctuation">;</span>

		<span class="token class-name">BufferedOutputStream</span> buff <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">StringBuffer</span> write <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">ServletOutputStream</span> outSTr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">,</span>
					<span class="token string">&quot;attachment; filename=&quot;</span> <span class="token operator">+</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>net<span class="token punctuation">.</span></span>URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 导出中文名称</span>
			outSTr <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 建立</span>
			buff <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedOutputStream</span><span class="token punctuation">(</span>outSTr<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">String</span> tab <span class="token operator">=</span> <span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">;</span>
			<span class="token class-name">String</span> tcb <span class="token operator">=</span> <span class="token string">&quot;\\t&quot;</span><span class="token punctuation">;</span>
			write<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;产品名称&quot;</span> <span class="token operator">+</span> tcb<span class="token punctuation">)</span><span class="token punctuation">;</span>
			write<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;品牌名称&quot;</span> <span class="token operator">+</span> tcb<span class="token punctuation">)</span><span class="token punctuation">;</span>
			write<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;商品条码&quot;</span> <span class="token operator">+</span> tcb<span class="token punctuation">)</span><span class="token punctuation">;</span>
			write<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;标准号&quot;</span> <span class="token operator">+</span> tcb<span class="token punctuation">)</span><span class="token punctuation">;</span>
			write<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;标准名称&quot;</span> <span class="token operator">+</span> tcb<span class="token punctuation">)</span><span class="token punctuation">;</span>
			write<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;标准分类&quot;</span> <span class="token operator">+</span> tcb<span class="token punctuation">)</span><span class="token punctuation">;</span>
			write<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;产品规格&quot;</span> <span class="token operator">+</span> tcb<span class="token punctuation">)</span><span class="token punctuation">;</span>
			write<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;保质期&quot;</span> <span class="token operator">+</span> tcb<span class="token punctuation">)</span><span class="token punctuation">;</span>
			write<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;产品成分&quot;</span> <span class="token operator">+</span> tcb<span class="token punctuation">)</span><span class="token punctuation">;</span>
			write<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;下单总数量&quot;</span> <span class="token operator">+</span> tcb <span class="token operator">+</span> tab<span class="token punctuation">)</span><span class="token punctuation">;</span>

			buff<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>write<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			buff<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			buff<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			e1<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				buff<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				outSTr<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

</code></pre></div><h4 id="导入txt" tabindex="-1"><a class="header-anchor" href="#导入txt" aria-hidden="true">#</a> 导入txt..</h4>`,3),c=[o];function e(u,l){return s(),a("div",null,c)}const i=n(p,[["render",e],["__file","imex_01.html.vue"]]);export{i as default};
