import{_ as o,M as t,p,q as e,R as n,t as c,N as l,a1 as a}from"./framework-d81ad7e5.js";const i={},u=a(`<h3 id="map" tabindex="-1"><a class="header-anchor" href="#map" aria-hidden="true">#</a> Map</h3><p><code>OpenLayers</code>的核心组件是<code>map (ol/Map)</code>，<code>Map</code>就是地图。它被呈现到目标容器中（例如，<code>div</code>元素）。可以在构造时配置所有映射属性，也可以使用<code>setTarget()</code>来设置。<code>Layer</code>、<code>View</code>都是定义在<code>ol/Map</code>下。</p><ol><li>是 <code>OpenLayers</code> 的核心组件。用于初始化地图对象。</li><li>初始化地图(Map)，需要一个视图(<code>view</code>)、一个或多个图层( <code>layer</code>)，和一个地图加载的目标 <code>HTML</code> 标签(<code>target</code>)。</li></ol><h3 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h3><ul><li><code>controls</code> 添加到地图上的控件。默认加载 <code>ol/control</code> 下 <code>defaults</code>，默认控件组。</li><li><code>pixelRatio</code> 设备上物理像素与设备无关像素（下降）之间的比率。</li><li><code>interactions</code> 添加到地图的交互事件。默认加载 <code>ol/interaction</code> 下 <code>defaults</code>，默认交互组。</li><li><code>keyboardEventTarget</code> 监听键盘事件的元素。这决定了<code>KeyboardPan</code>和 <code>KeyboardZoom</code>互动的触发时间。例如，如果将此选项设置为 <code>document</code>键盘，则交互将始终触发。如果未指定此选项，则库在其上侦听键盘事件的元素是地图目标（即，用户为地图提供的div）。如果不是 <code>document</code>，则需要重点关注目标元素以发出关键事件，这要求目标元素具有<code>tabindex</code>属性。</li><li><code>layers</code> 图层。没定义图层，也会加载，显示空白图层。图层是按顺序加载的，想要在最上层需要放在最后面。</li><li><code>maxTilesLoading</code> 同时加载的最大瓦片数。默认16。</li><li><code>moveTolerance</code> 光标必须移动的最小距离（以像素为单位）才能被检测为地图移动事件，而不是单击。增大此值可以使单击地图更容易。</li><li><code>overlays</code> 覆盖物。默认情况下，不添加任何覆盖物。</li><li><code>target</code> 地图的容器，元素本身或<code>id</code>元素的 。必须指定，不指定无法加载地图。</li><li><code>view</code> 视图。需要在构造时或通过方法（<code>setView</code>）指定，否则不会加载图层。</li></ul><h4 id="map的常见属性" tabindex="-1"><a class="header-anchor" href="#map的常见属性" aria-hidden="true">#</a> Map的常见属性</h4><ul><li><code>layerGroup</code> 地图中图层的图层组。</li><li><code>size</code> DOM 中地图的大小（以像素为单位）。</li><li><code>target</code> 地图的容器。</li><li><code>view</code> 视图。</li><li><code>control</code> 控制地图的控件组。</li><li><code>interaction</code> 交互事件组。</li></ul><h4 id="map的常用方法" tabindex="-1"><a class="header-anchor" href="#map的常用方法" aria-hidden="true">#</a> Map的常用方法</h4><ul><li><code>addControl(control)</code> 添加控件。</li><li><code>addInteraction(interaction)</code> 添加交互。</li><li><code>addLayer(layer)</code> 添加图层。</li><li><code>addOverlay(overlay)</code> 添加覆盖物。</li><li><code>dispatchEvent(event)</code> 调度事件并调用所有侦听此类型事件的侦听器。</li><li><code>on(type, listener)</code> 侦听某种类型的事件。</li><li><code>getOverlays()</code> 获取所有覆盖物。</li><li><code>removeOverlay(overlay)</code> 删除指定覆盖物</li></ul><h3 id="view" tabindex="-1"><a class="header-anchor" href="#view" aria-hidden="true">#</a> View</h3><p>因为地图不对地图的中心、缩放级别和投影等内容负责。 所以这些功能都是有<code>View</code>来实现的。它的定义在<code>ol/View</code>下。 <code>View</code>有一个<code>projection</code>(投影)。投影确定中心的坐标系和地图分辨率计算的单位，默认使用墨卡托投影<code>EPSG:3857</code>。</p><p>表示地图的简单 2D 视图。简单理解就是用来控制地图在容器中移动，方法的。</p><p>主要用于更改地图的中心、分辨率和旋转的对象。</p><p>视图具有<code>projection</code>。投影决定了中心的坐标系，其单位决定了分辨率的单位（每像素的投影单位）。默认投影是球面墨卡托 (EPSG:3857)。</p><p>需要注意的是，在构造函数中添加了约束后，在使用方法设置或者获取数据都是在约束内的。</p><p>常用参数</p><ul><li><code>center</code> 视图的初始中心。</li><li><code>constrainRotation</code> 旋转约束。 <code>false</code>意味着没有约束。<code>true</code>意味着没有约束，但在零附近捕捉到零。数字将旋转限制为该数量的值，就是设置90只能旋转90度。</li><li><code>enableRotation</code> 是否启用旋转。</li><li><code>extent</code> 限制视图的范围。值表示范围的数字数组：<code>[minx, miny, maxx, maxy]</code>。</li><li><code>constrainOnlyCenter</code> 如果为<code>true</code>，则范围约束将仅适用于视图中心而不是整个范围。</li><li><code>smoothExtentConstraint</code> 如果为<code>true</code>，范围约束将被平滑地应用，即允许视图稍微超出给定的<code>extent</code>。</li><li><code>maxResolution</code> 用于确定分辨率约束的最大分辨率。</li><li><code>minResolution</code> 用于确定分辨率约束的最小分辨率。</li><li><code>maxZoom</code> 用于确定分辨率约束的最大缩放级别。</li><li><code>minZoom</code> 用于确定分辨率约束的最小缩放级别。</li><li><code>constrainResolution</code> 如果为 <code>true</code>，则视图将始终在交互后以最接近的缩放级别进行动画处理；<code>false</code> 表示允许中间缩放级别。</li><li><code>resolutions</code>决定缩放级别的分辨率。</li><li><code>zoom</code> 仅在<code>resolution</code>未定义时使用。缩放级别用于计算视图的初始分辨率。</li><li><code>rotation</code> 以弧度为单位的视图初始旋转（顺时针旋转，0 表示北）。</li></ul><h3 id="view常见的方法" tabindex="-1"><a class="header-anchor" href="#view常见的方法" aria-hidden="true">#</a> View常见的方法</h3><ul><li><code>getCenter</code> 获取视图中心，返回一个地图中心的坐标。</li><li><code>getZoom</code> 获取当前的缩放级别。如果视图不限制分辨率，或者正在进行交互或动画，则此方法可能返回非整数缩放级别。</li><li><code>getMaxZoom</code> 获取视图的最大缩放级别。</li><li><code>getMinZoom</code> 获取视图的最小缩放级别。</li><li><code>getProjection</code> 获取地图使用的”投影坐标系统”，如EPSG:4326；</li><li><code>getMaxResolution</code> 获取视图的最大分辨率。</li><li><code>getMinResolution</code> 获取视图的最低分辨率</li><li><code>getRotation</code> 获取视图旋转。</li><li><code>getZoomForResolution</code> 获取分辨率的缩放级别。</li><li><code>setCenter</code> 设置当前视图的中心。任何范围限制都将适用。</li><li><code>setConstrainResolution</code> 设置视图是否应允许中间缩放级别。</li><li><code>setZoom</code> 缩放到特定的缩放级别。任何分辨率限制都将适用。</li><li><code>setMaxZoom</code> 为视图设置新的最大缩放级别。</li><li><code>setMinZoom</code> 为视图设置新的最小缩放级别。</li><li><code>setRotation</code> 设置该视图的旋转角度。任何旋转约束都将适用。</li></ul><div class="language-html" data-ext="html"><pre class="language-html"><code> 
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">setCenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>修改地图中心<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">setZoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>修改缩放<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">setRotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>修改旋转<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span>
    <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>map<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>map<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">var</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;map&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token comment">// 图层</span>
    <span class="token keyword">var</span> layerTile <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>layer<span class="token punctuation">.</span>Tile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>source<span class="token punctuation">.</span>XYZ</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;https://webrd01.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;scale=1&amp;style=8&amp;x={x}&amp;y={y}&amp;z={z}&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// 视图</span>
    <span class="token keyword">var</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>View</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">center</span><span class="token operator">:</span> ol<span class="token punctuation">.</span>proj<span class="token punctuation">.</span><span class="token function">fromLonLat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">37.41</span><span class="token punctuation">,</span> <span class="token number">8.82</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">zoom</span><span class="token operator">:</span> <span class="token number">4</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    map<span class="token punctuation">.</span><span class="token function">setView</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span>
    map<span class="token punctuation">.</span><span class="token function">setLayerGroup</span><span class="token punctuation">(</span>layerTile<span class="token punctuation">)</span>

    <span class="token keyword">function</span> <span class="token function">setCenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;中心点===&#39;</span><span class="token punctuation">,</span> view<span class="token punctuation">.</span><span class="token function">getCenter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      view<span class="token punctuation">.</span><span class="token function">setCenter</span><span class="token punctuation">(</span>ol<span class="token punctuation">.</span>proj<span class="token punctuation">.</span><span class="token function">fromLonLat</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">130</span> <span class="token operator">+</span> <span class="token number">20</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">20</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">setZoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 这里要注意 是不每个级别都有对应的 瓦片图。不同的地图要设置不同的最大最小值</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;缩放===&#39;</span><span class="token punctuation">,</span> view<span class="token punctuation">.</span><span class="token function">getZoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;缩放最大===&#39;</span><span class="token punctuation">,</span> view<span class="token punctuation">.</span><span class="token function">getMaxZoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;缩放最小===&#39;</span><span class="token punctuation">,</span> view<span class="token punctuation">.</span><span class="token function">getMinZoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      view<span class="token punctuation">.</span><span class="token function">setMaxZoom</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>
      view<span class="token punctuation">.</span><span class="token function">setMinZoom</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
      view<span class="token punctuation">.</span><span class="token function">setZoom</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">function</span> <span class="token function">setRotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;旋转===&#39;</span><span class="token punctuation">,</span> view<span class="token punctuation">.</span><span class="token function">getRotation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      view<span class="token punctuation">.</span><span class="token function">setRotation</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">180</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
 

</code></pre></div><h3 id="source" tabindex="-1"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h3><p><code>Source</code> 就是图层数据的来源，数据格式可以是 XYZ、WMS 或 WMTS 等 OGC 源以及 GeoJSON 或 KML 等格式的矢量数据。它的定义在<code>ol/source</code>下。</p><ul><li>数据来源和格式。简单理解就是在使用<code>layers</code>(图层)时，不同的图层需要传入不同的数据类型，才能渲染地图。它们需要的数据格式都是通过<code>Source</code>定义好的，我们只需要把现有的数据，按照规定传入数据源中，就不需要关心其他操作。</li></ul><h2 id="source的一些数据类型" tabindex="-1"><a class="header-anchor" href="#source的一些数据类型" aria-hidden="true">#</a> Source的一些数据类型</h2><ul><li><code>ol.source.BingMaps</code> Bing 地图图块数据的图层源。</li><li><code>ol.source.CartoDB</code> CartoDB Maps API 的图层源。</li><li><code>ol.source.Cluster</code> 聚簇矢量数据。</li><li><code>ol.source.Vector</code> 提供矢量图层数据。</li><li><code>ol.source.Image</code> 提供单一图片数据的类型。</li><li><code>ol.source.ImageCanvas</code> 数据来源是一个 canvas 元素，其中的数据是图片。</li><li><code>ol.source.ImageMapGuide</code> Mapguide 服务器提供的图片地图数据。</li><li><code>ol.source.ImageStatic</code> 提供单一的静态图片地图。</li><li><code>ol.source.ImageVector</code>数据来源是一个 canvas 元素，但是其中的数据是矢量来源。</li><li><code>ol.source.ImageWMS</code> WMS 服务提供的单一的图片数据。</li><li><code>ol.source.MapQuest</code> MapQuest 提供的切片数据。</li><li><code>ol.source.Stamen</code> Stamen 提供的地图切片数据。</li><li><code>ol.source.Tile</code> 提供被切分为网格切片的图片数据。</li><li><code>ol.source.TileVector</code> 被切分为网格的矢量数据。</li><li><code>ol.source.TileDebug</code> 并不从服务器获取数据。</li><li><code>ol.source.TileImage</code> 提供切分成切片的图片数据。</li><li><code>ol.source.TileUTFGrid</code> TileJSON 格式 的 UTFGrid 交互数据。</li><li><code>ol.source.TileJSON</code> TileJSON 格式的切片数据。</li><li><code>ol.source.TileArcGISRest</code> ArcGIS Rest 服务提供的切片数据。</li><li><code>ol.source.WMTS</code> WMTS 服务提供的切片数据。</li><li><code>ol.source.Zoomify</code> Zoomify 格式的切片数据。</li><li><code>ol.source.OSM</code> OpenStreetMap 提供的切片数据。</li><li><code>ol.source.XYZ</code> 具有在 URL 模板中定义的一组 XYZ 格式的 URL 的切片数据的图层源。</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>ol<span class="token punctuation">.</span>source<span class="token punctuation">.</span>Vector 矢量图层的数据来源

常用属性


attribution 地图右下角的提示信息，传入字符串。
features 地理要素。传入ol<span class="token punctuation">.</span>Feature对象。
url 要素数据的地址。
format url属性设置后，设置url返回的要素格式。传入ol<span class="token punctuation">.</span>format下的格式。


使用features加载数据。
 <span class="token keyword">var</span> polygon <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>geom<span class="token punctuation">.</span>Polygon</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
      <span class="token punctuation">[</span>
        <span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">[</span><span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">]</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">)</span>
    polygon<span class="token punctuation">.</span><span class="token function">applyTransform</span><span class="token punctuation">(</span>ol<span class="token punctuation">.</span>proj<span class="token punctuation">.</span><span class="token function">getTransform</span><span class="token punctuation">(</span><span class="token string">&#39;EPSG:4326&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;EPSG:3857&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment">// 多边形要素</span>
    <span class="token keyword">var</span> polygonFeature <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>Feature</span><span class="token punctuation">(</span>polygon<span class="token punctuation">)</span>
    <span class="token comment">// 矢量图层</span>
    <span class="token keyword">var</span> source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>source<span class="token punctuation">.</span>Vector</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">features</span><span class="token operator">:</span> <span class="token punctuation">[</span>polygonFeature<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">var</span> vectorLayer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>layer<span class="token punctuation">.</span>Vector</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">source</span><span class="token operator">:</span> source<span class="token punctuation">,</span>
      <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>style<span class="token punctuation">.</span>Style</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>style<span class="token punctuation">.</span>Stroke</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token comment">//线样式</span>
          <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#ffcc33&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">2</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    map<span class="token punctuation">.</span><span class="token function">addLayer</span><span class="token punctuation">(</span>vectorLayer<span class="token punctuation">)</span> 


   <span class="token comment">// 矢量图层  GEOJSON</span>
    <span class="token keyword">var</span> source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>source<span class="token punctuation">.</span>Vector</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">features</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>format<span class="token punctuation">.</span>GeoJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readFeatures</span><span class="token punctuation">(</span>geojsonObject<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> vectorLayer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>layer<span class="token punctuation">.</span>Vector</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">source</span><span class="token operator">:</span> source<span class="token punctuation">,</span>
      <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>style<span class="token punctuation">.</span>Style</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>style<span class="token punctuation">.</span>Stroke</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token comment">//线样式</span>
          <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#ffcc33&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">2</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    map<span class="token punctuation">.</span><span class="token function">addLayer</span><span class="token punctuation">(</span>vectorLayer<span class="token punctuation">)</span> 
</code></pre></div><h3 id="layer" tabindex="-1"><a class="header-anchor" href="#layer" aria-hidden="true">#</a> Layer</h3><p><code>Layer</code>表示一个图层。在项目的开发中我们的操作都是在一个个图层上绘制，然后<code>OpenLayers</code>根据层级把图层一层层的绘制上去。 它定义在<code>ol/layer</code>下，有四种基本类型的层。</p><ul><li><code>ol/layer/Tile</code> - 渲染在网格中提供平铺图像的源，这些网格按特定分辨率的缩放级别组织。栅格图层。</li><li><code>ol/layer/Image</code> - 渲染以任意范围和分辨率提供地图图像的源。栅格图层。</li><li><code>ol/layer/Vector</code> - 在客户端呈现矢量数据。矢量图层。</li><li><code>ol/layer/VectorTile</code> - 渲染作为矢量切片提供的数据。矢量图层。</li></ul><p>control</p><p><code>control</code>表示控件，使用按钮来控制地图。 在<code>ol/control</code>下，定义了一些内置的控件。如全屏、旋转、缩放、小地图等。 在内置控件不满足需求时也需要我们自定义控件。</p><h3 id="interaction" tabindex="-1"><a class="header-anchor" href="#interaction" aria-hidden="true">#</a> interaction</h3><p><code>interaction</code>交互事件，添加地图和用户的交互事件。</p>`,33),r={href:"https://link.juejin.cn/?target=https%3A%2F%2Fopenlayers.org%2Fen%2Flatest%2Fapidoc%2Fmodule-ol_interaction.html",target:"_blank",rel:"noopener noreferrer"},k=a(`<h2 id="interaction是什么" tabindex="-1"><a class="header-anchor" href="#interaction是什么" aria-hidden="true">#</a> Interaction是什么</h2><ol><li><code>Interaction</code>是用来控制地图的。没看错它和控件一样的作用。不过它们的区别是<strong>控件</strong>触发都是一些可见的 HTML元素触发，如按钮、链接等；<strong>交互功能</strong>都是一些设备行为触发，都是不可见的，如鼠标双击、滚轮滑动，手机设备的手指缩放等。</li><li><code>Interaction</code>，是一个虚基类，不负责实例化，交互功能都继承该基类。</li></ol><h2 id="常用交互功能" tabindex="-1"><a class="header-anchor" href="#常用交互功能" aria-hidden="true">#</a> 常用交互功能</h2><ul><li><code>doubleclickzoom</code> ，双击地图进行缩放；</li><li><code>draganddrop</code> ，以“拖文件到地图中”的交互添加图层；</li><li><code>dragbox</code>，拉框，用于划定一个矩形范围，常用于放大地图；</li><li><code>dragpan</code> ，拖拽平移地图；</li><li><code>dragrotateandzoom</code>，拖拽方式进行缩放和旋转地图；</li><li><code>dragrotate</code> ，拖拽方式旋转地图；</li><li><code>dragzoom</code> ，拖拽方式缩放地图；</li><li><code>draw</code>，绘制地理要素功能；</li><li><code>keyboardpan</code> ，键盘方式平移地图；</li><li><code>keyboardzoom</code> ，键盘方式缩放地图；</li><li><code>select</code>，选择要素功能；</li><li><code>modify</code> ，更改要素；</li><li><code>mousewheelzoom</code> ，鼠标滚轮缩放功能；</li><li><code>pinchrotate</code>，手指旋转地图，针对触摸屏；</li><li><code>pinchzoom</code> ，手指进行缩放，针对触摸屏；</li><li><code>pointer</code> ，鼠标的用户自定义事件基类；</li><li><code>snap</code>，鼠标捕捉，当鼠标距离某个要素一定距离之内，自动吸附到要素。</li></ul><h3 id="defaults" tabindex="-1"><a class="header-anchor" href="#defaults" aria-hidden="true">#</a> defaults</h3><p>默认的交互功能，包含多个交互。规定了默认包含在地图中的功能，他们都是继承自 <code>ol.interaction</code> 类。 主要是最为常用的功能，如缩放、平移和旋转地图等。</p><ul><li><code>DragRotate</code>，鼠标拖拽旋转，一般配合一个键盘按键辅助。</li><li><code>DragZoom</code>，鼠标拖拽缩放，一般配合一个键盘按键辅助。</li><li><code>DoubleClickZoom</code>，鼠标或手指双击缩放地图。</li><li><code>PinchRotate</code>，两个手指旋转地图，针对触摸屏。</li><li><code>PinchZoom</code>，两个手指缩放地图，针对触摸屏。</li><li><code>DragPan</code>，鼠标或手指拖拽平移地图。</li><li><code>KeyboardZoom</code>，使用键盘 <code>+</code> 和 <code>-</code> 按键进行缩放。</li><li><code>KeyboardPan</code>，使用键盘方向键平移地图。</li><li><code>MouseWheelZoom</code>，鼠标滚轮缩放地图。</li></ul><h2 id="使用交互功能" tabindex="-1"><a class="header-anchor" href="#使用交互功能" aria-hidden="true">#</a> 使用交互功能</h2><ol><li>通过<code>map</code>构造参数<code>interactions</code>传入，不传值默认<code>defaults</code>中的交互。</li><li>需要在默认交互基础上继续添加交互，可以使用<code>ol.interaction.defaults().extend([new ol.control.Draw()])</code> 方法传入。</li><li>也可以利用<code>map</code>对象的<code>addInteraction()</code>方法在地图上添加<code>Interaction</code>对象。</li></ol><h3 id="draw-使用" tabindex="-1"><a class="header-anchor" href="#draw-使用" aria-hidden="true">#</a> Draw 使用</h3><ul><li>负责勾绘交互，支持绘制的图形类型包含 Point（点）、LineString（线）、Polygon（面）和Circle（圆）。</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>js复制代码   <span class="token keyword">var</span> source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>source<span class="token punctuation">.</span>Vector</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">var</span> draw <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>interaction<span class="token punctuation">.</span>Draw</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">source</span><span class="token operator">:</span> source<span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;Polygon&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>style<span class="token punctuation">.</span>Style</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>style<span class="token punctuation">.</span>Fill</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;rgba(255, 255, 255, 1)&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">stroke</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>style<span class="token punctuation">.</span>Stroke</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#ffcc33&#39;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">2</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>style<span class="token punctuation">.</span>Circle</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
          <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>style<span class="token punctuation">.</span>Fill</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#ffcc33&#39;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    map<span class="token punctuation">.</span><span class="token function">addInteraction</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span>
</code></pre></div><h3 id="dragrotateandzoom-使用" tabindex="-1"><a class="header-anchor" href="#dragrotateandzoom-使用" aria-hidden="true">#</a> DragRotateAndZoom 使用</h3><ul><li>shift + 鼠标拖拽进行缩放和旋转地图</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code> map<span class="token punctuation">.</span><span class="token function">addInteraction</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>interaction<span class="token punctuation">.</span>DragRotateAndZoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="pointer" tabindex="-1"><a class="header-anchor" href="#pointer" aria-hidden="true">#</a> pointer</h3><ul><li>监听鼠标的行为按下（Down）、移动（Move）和抬起（Up）事件。</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code> <span class="token keyword">var</span> pointer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>interaction<span class="token punctuation">.</span>Pointer</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token function-variable function">handleDownEvent</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;按下&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>type<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">handleDragEvent</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;拖拽移动&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>type<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token function-variable function">handleUpEvent</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;拖拽抬起&#39;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>type<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    map<span class="token punctuation">.</span><span class="token function">addInteraction</span><span class="token punctuation">(</span>pointer<span class="token punctuation">)</span>
</code></pre></div><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;map&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">layers</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>layer<span class="token punctuation">.</span>Tile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token comment">// 使用高度瓦片图</span>
      <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>source<span class="token punctuation">.</span>XYZ</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;https://webrd01.is.autonavi.com/appmaptile?lang=zh_cn&amp;size=1&amp;scale=1&amp;style=8&amp;x={x}&amp;y={y}&amp;z={z}&#39;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">view</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>View</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">center</span><span class="token operator">:</span> ol<span class="token punctuation">.</span>proj<span class="token punctuation">.</span><span class="token function">fromLonLat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">37.41</span><span class="token punctuation">,</span> <span class="token number">8.82</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">zoom</span><span class="token operator">:</span> <span class="token number">4</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><ol><li>通过<code>new ol.Map({ ... });</code>加载地图对象，通过<code>target</code>参数绑定元素节点。</li><li>通过<code>layers</code>参数定义地图中可用的图层列表。后面图层覆盖前面的图层。</li><li>通过<code>View</code>参数指定地图的中心、分辨率和旋转。</li></ol><ul><li><code>OpenLayers</code>开发可以简单的理解为，把整个地图看作一个容器 <code>Map</code>。把根据<code>Layer</code>规则生成的图层加入地图中。在这基础上使用 <code>View、Control、Interaction</code>控制地图。</li></ul><h2 id="control是什么" tabindex="-1"><a class="header-anchor" href="#control是什么" aria-hidden="true">#</a> control是什么</h2><ol><li><code>Controls</code>是用来控制地图的。如通过按钮控制地图大小，在地图map上添加修饰等。</li><li>在<code>Openlayers</code>中多数<code>Controls</code>直接可以在地图上添加，比如<code>Navigation（导航栏）</code>。第二类是需要放在<code>Div元素</code>中才能用。第三类需要放置在<code>panel（面板）</code>中的操作类似于网页<code>HTML</code>中<code>button</code>按钮，需要点击或绑定才能起作用。最后一类就是自定义类型的。</li></ol><p>scaleline 控件、zoom 控件、zoomslider 控件</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>map<span class="token punctuation">.</span><span class="token function">addControl</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>control<span class="token punctuation">.</span>ScaleLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">addControl</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>control<span class="token punctuation">.</span>Zoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">addControl</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>control<span class="token punctuation">.</span>ZoomSlider</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="overlay是什么" tabindex="-1"><a class="header-anchor" href="#overlay是什么" aria-hidden="true">#</a> Overlay是什么</h2><p>让HTML元素显示在地图上某个位置。他和控件很像都是在地图上添加可见元素，不同的是，它不是根据屏幕位置固定的，而是与地理坐标相关联，因此平移地图将移动 <code>Overlay</code>。 常用的大致有三类，<strong>弹窗</strong>、<strong>标注</strong>、<strong>文本信息</strong>。每个覆盖物都会生成对应的HTML元素，所以我们也可以使用<code>css</code>来修改去样式。</p><h2 id="overlay-常用属性" tabindex="-1"><a class="header-anchor" href="#overlay-常用属性" aria-hidden="true">#</a> overlay 常用属性</h2><ul><li><code>id</code>，覆盖物的唯一标识 ，便于 <code>getOverlayById</code> 方法取得相应的 <code>overlay</code>。</li><li><code>element</code>，要添加到覆盖物元素。</li><li><code>offset</code>，偏移量，像素为单位。<code>overlay</code> 相对于放置位置（<code>position</code>）的偏移量，默认值是 <code>[0, 0]</code>，正值分别向右和向下偏移。</li><li><code>position</code>，在地图所在的坐标系框架下，overlay 放置的位置。</li><li><code>positioning</code>，<code>overlay</code> 对于 <code>position</code> 的相对位置，可能的值是<code>&#39;bottom-left&#39;</code>，<code>&#39;bottom-center&#39;</code>，<code>&#39;bottom-right&#39;</code>， <code>&#39;center-left&#39;</code>，<code>&#39;center-center&#39;</code>，<code>&#39;center-right&#39;</code>，<code>&#39;top-left&#39;</code>， <code>&#39;top-center&#39;</code>，和<code>&#39;top-right&#39;</code>。</li><li><code>stopEvent</code>，是否应停止事件传播到地图视口。</li><li><code>autoPanAnimation</code>，用于将叠加层平移到视图中的动画选项。此动画仅在<code>autoPan</code>启用时使用。可以提供A<code>duration</code>和<code>easing</code>来自定义动画。如果<code>autoPan</code>作为对象提供，则弃用并忽略。</li><li><code>className</code>，CSS 类名。</li></ul><h2 id="overlay-常用事件" tabindex="-1"><a class="header-anchor" href="#overlay-常用事件" aria-hidden="true">#</a> overlay 常用事件</h2><ul><li><code>change</code>，当引用计数器增加时，触发；</li><li><code>change:element</code>，<code>overlay</code> 对应的 element 变化时触发；</li><li><code>change:map</code>，<code>overlay</code> 对应的 map 变化时触发；</li><li><code>change:offset</code>，<code>overlay</code> 对应的 offset 变化时触发；</li><li><code>change:position</code>，<code>overlay</code> 对应的 position 变化时触发；</li><li><code>change:positioning</code>，<code>overlay</code> 对应的 positioning 变化时触发；</li><li><code>propertychange</code>，<code>overlay</code> 对应的属性变化时触发； 绑定方式：</li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>js复制代码<span class="token keyword">var</span> overlay <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ol<span class="token punctuation">.</span>Overlay</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token comment">// 创建 overlay});</span>
<span class="token comment">// 事件 </span>
overlay<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&quot;change:element&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;获取变化&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="overlay-常用方法" tabindex="-1"><a class="header-anchor" href="#overlay-常用方法" aria-hidden="true">#</a> overlay 常用方法</h2><ul><li><code>getElement</code>，获取传入的元素节点。</li><li><code>getId</code>，获取 <code>overlay</code> 的 id。</li><li><code>getMap</code>，获取与 <code>overlay</code> 关联的 map对象。</li><li><code>getOffset</code>，获取 <code>offset</code> 属性。</li><li><code>getPosition</code>，获取 <code>position</code> 属性。</li><li><code>getPositioning</code>，获取 <code>positioning</code> 属性。</li><li><code>setElement</code>, 设置元素节点。</li><li><code>setMap</code>，设置map对象。</li><li><code>setOffset</code>，设置 <code>offset</code>。</li><li><code>setPosition</code>，设置 <code>position</code> 属性。</li><li><code>setPositioning</code>，设置 <code>positioning</code> 属性。</li></ul><h2 id="使用overlay" tabindex="-1"><a class="header-anchor" href="#使用overlay" aria-hidden="true">#</a> 使用overlay</h2><p>添加元素</p><ul><li>直接在<code>Overlay</code>中添加一个元素节点，文本、动画都可以通过它添加到地图上。</li></ul><div class="language-html" data-ext="html"><pre class="language-html"><code>   ...
   .tag {
      width: 30px;
      height: 30px;
      background-color: aquamarine;
      border-radius: 100%;
    }
    ...
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tag<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    ...
    var tag = new ol.Overlay({
      position: ol.proj.fromLonLat([120.41, 28.82]),
      positioning: &#39;center-center&#39;,
      element: document.getElementById(&#39;tag&#39;),
      stopEvent: false
    })
    map.addOverlay(tag)
    ...
</code></pre></div><h3 id="添加事件" tabindex="-1"><a class="header-anchor" href="#添加事件" aria-hidden="true">#</a> 添加事件</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code>   document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;tag&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      tag<span class="token punctuation">.</span><span class="token function">setPosition</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
    map<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;singleclick&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">evt</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      tag<span class="token punctuation">.</span><span class="token function">setPosition</span><span class="token punctuation">(</span>evt<span class="token punctuation">.</span>coordinate<span class="token punctuation">)</span> <span class="token comment">// 把 overlay 显示到指定的 x,y坐标</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><ul><li>通过给元素添加监听事件，修改坐标位置，让元素离开地图。然后监听地图单击事件，修改元素坐标位置，实现在点击位置加载元素。</li></ul><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h3><p>覆盖物的使用方式非常简单，通过它我们可以实现很多功能。如在地图上添加云层移动的gif图片，实现动态效果等。不过它的缺点也比较明显，一个覆盖物最少需要一个元素，当数据量大时，元素节点过多会导致页面加载卡顿。大数据量的绘制图还是使用图层最好。</p>`,43);function d(y,m){const s=t("ExternalLinkIcon");return p(),e("div",null,[u,n("p",null,[n("a",r,[c("api 文档"),l(s)])]),k])}const h=o(i,[["render",d],["__file","baseApi.html.vue"]]);export{h as default};
