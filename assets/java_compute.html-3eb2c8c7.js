import{_ as n,p as a,q as s,a1 as t}from"./framework-d81ad7e5.js";const p="/assets/ca-fa3aa3de.png",e={},c=t(`<h2 id="浮点数-计算" tabindex="-1"><a class="header-anchor" href="#浮点数-计算" aria-hidden="true">#</a> 浮点数 计算</h2><ul><li>浮点数在计算机中是如何运算的？写代码时有什么要注意的？会有哪些坑？ <br> 浮点数之间的等值判断，基本数据类型不能用==来比较，包装数据类型不能用 equals 来判断。</li></ul><blockquote><p>如果在业务代码中一旦涉及到诸如：订单金额、商品金额、交易值、货币运算等这种对精度要求很高的场景时，使用浮点数就一定要慎重了</p></blockquote><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> <span class="token number">1f</span> <span class="token operator">==</span> <span class="token number">0.9999999f</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 打印：false</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> <span class="token number">1f</span> <span class="token operator">==</span> <span class="token number">0.99999999f</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 打印：true  ?</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> <span class="token number">1f</span> <span class="token operator">==</span> <span class="token number">0.999999999999f</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 打印：true  ?</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> <span class="token number">5</span><span class="token operator">/</span><span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//结果为2</span>

<span class="token comment">//数据转换超预期</span>
<span class="token keyword">float</span> f <span class="token operator">=</span> <span class="token number">1.1f</span><span class="token punctuation">;</span>
<span class="token keyword">double</span> d <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span> f<span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 打印：1.1</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 打印：1.100000023841858 ?</span>

<span class="token comment">// 基本运算超预期</span>

<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> <span class="token number">0.2</span> <span class="token operator">+</span> <span class="token number">0.7</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre></div><p><img src="`+p+'" alt="alt"></p><h2 id="bigdecimal" tabindex="-1"><a class="header-anchor" href="#bigdecimal" aria-hidden="true">#</a> BigDecimal</h2><h3 id="构造器-描述" tabindex="-1"><a class="header-anchor" href="#构造器-描述" aria-hidden="true">#</a> 构造器 描述</h3><ul><li>BigDecimal(int) 创建一个具有参数所指定整数值的对象。</li><li>BigDecimal(double) 创建一个具有参数所指定双精度值的对象。</li><li>BigDecimal(long) 创建一个具有参数所指定长整数值的对象。</li><li>BigDecimal(String) 创建一个具有参数所指定以字符串表示的数值的对象。</li></ul><h3 id="方法-描述" tabindex="-1"><a class="header-anchor" href="#方法-描述" aria-hidden="true">#</a> 方法 描述</h3><ul><li>add(BigDecimal) BigDecimal对象中的值相加，然后返回这个对象。</li><li>subtract(BigDecimal) BigDecimal对象中的值相减，然后返回这个对象。</li><li>multiply(BigDecimal) BigDecimal对象中的值相乘，然后返回这个对象。</li><li>divide(BigDecimal) BigDecimal对象中的值相除，然后返回这个对象。</li><li>toString() 将BigDecimal对象的数值转换成字符串。</li><li>doubleValue() 将BigDecimal对象中的值以双精度数返回。</li><li>floatValue() 将BigDecimal对象中的值以单精度数返回。</li><li>longValue() 将BigDecimal对象中的值以长整数返回。</li><li>intValue() 将BigDecimal对象中的值以整数返回。</li></ul>',10),o=[c];function l(i,u){return a(),s("div",null,o)}const r=n(e,[["render",l],["__file","java_compute.html.vue"]]);export{r as default};
