import{_ as n,p as s,q as a,a1 as t}from"./framework-d81ad7e5.js";const p={},o=t(`<ul><li>2023/09/17</li></ul><ul><li>print( )函数、input( )函数</li></ul><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token comment"># 打印Hello, world</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, world&#39;</span><span class="token punctuation">)</span>
Hello<span class="token punctuation">,</span> world
 
<span class="token comment"># input()函数：接受一个标准输入数据，返回为string类型</span>
name <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入你的昵称：&quot;</span><span class="token punctuation">)</span>
</code></pre></div><ul><li>字符串：str( )、整型数：int( )、浮点数：float( )</li></ul><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token comment"># 类型转换</span>

<span class="token comment"># 此处int()的作用：把字符串变成了数值</span>
a <span class="token operator">=</span> <span class="token string">&quot;5&quot;</span>
b <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token comment"># 去掉了双引号</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
</code></pre></div><ul><li>type( )函数、isinstance( )函数 <ul><li>用以识别变量的类型</li></ul></li></ul><div class="language-python" data-ext="py"><pre class="language-python"><code>
  
<span class="token comment"># isinstance()函数</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, world&quot;</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 返回True</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">isinstance</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, world&quot;</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 返回False</span>
</code></pre></div><ul><li>字符串格式化输出</li></ul><table><thead><tr><th>符号</th><th>描述</th></tr></thead><tbody><tr><td>%c</td><td>格式化字符及其ASCII码</td></tr><tr><td>%d</td><td>格式化整数</td></tr><tr><td>%e</td><td>格式化浮点数，用科学计数法</td></tr><tr><td>%f</td><td>格式化浮点数字，可指定小数点后的精度</td></tr><tr><td>%g</td><td>格式化浮点数字，根据值的大小采用%e或%f</td></tr><tr><td>%o</td><td>格式化无符号八进制数</td></tr><tr><td>%s</td><td>格式化字符串</td></tr><tr><td>%u</td><td>格式化无符号整型</td></tr><tr><td>%x</td><td>格式化无符号十六进制数（小写字母）</td></tr><tr><td>%X</td><td>格式化无符号十六进制数（大写字母）</td></tr></tbody></table><div class="language-python" data-ext="py"><pre class="language-python"><code>

<span class="token comment"># 格式化输出字符串</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;我的名字是%s，我的国籍是%s。&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token string">&quot;aaaa&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;中国&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
我的名字是aaaa，我的国籍是中国。

wd <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span>
<span class="token comment">#  in not in  is not is</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;w&#39;</span> <span class="token keyword">in</span> wd<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;str&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> wd<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span> <span class="token keyword">is</span> <span class="token builtin">type</span><span class="token punctuation">(</span>wd<span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre></div><ul><li>end函数、sep函数</li></ul><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token comment"># end函数</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>     <span class="token comment"># end=&quot;&quot;   不换行，直接链接下一句</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;world&quot;</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">&quot;\\t&quot;</span><span class="token punctuation">)</span>   <span class="token comment"># end=&quot;\\t&quot; 中间空个Tab</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;next&quot;</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>    <span class="token comment"># end=&quot;\\n&quot; 换行</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">)</span>
helloworld	<span class="token builtin">next</span>
 
<span class="token comment"># sep函数</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;www&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;baidu&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;com&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;www&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;baidu&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;com&quot;</span><span class="token punctuation">,</span>sep<span class="token operator">=</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;www&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;baidu&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;com&quot;</span><span class="token punctuation">,</span>sep<span class="token operator">=</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="python-四则运算" tabindex="-1"><a class="header-anchor" href="#python-四则运算" aria-hidden="true">#</a> python 四则运算</h3><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token comment">#  四则运算</span>
<span class="token comment"># + - * /   //    **</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">//</span><span class="token number">3</span><span class="token punctuation">)</span>    <span class="token comment"># 3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">//</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># -4</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">//</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># -4</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token operator">//</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># 3</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="if-条件判断语句" tabindex="-1"><a class="header-anchor" href="#if-条件判断语句" aria-hidden="true">#</a> if 条件判断语句</h3><div class="language-python" data-ext="py"><pre class="language-python"><code>
</code></pre></div><h3 id="while循环语句、for循环语句" tabindex="-1"><a class="header-anchor" href="#while循环语句、for循环语句" aria-hidden="true">#</a> while循环语句、for循环语句</h3><div class="language-python" data-ext="py"><pre class="language-python"><code>https<span class="token punctuation">:</span><span class="token operator">//</span>www<span class="token punctuation">.</span>cnblogs<span class="token punctuation">.</span>com<span class="token operator">/</span>baicj<span class="token operator">/</span>p<span class="token operator">/</span><span class="token number">5075912</span><span class="token punctuation">.</span>html
https<span class="token punctuation">:</span><span class="token operator">//</span>blog<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>net<span class="token operator">/</span>u014344668<span class="token operator">/</span>article<span class="token operator">/</span>details<span class="token operator">/</span><span class="token number">80229132</span>
https<span class="token punctuation">:</span><span class="token operator">//</span>blog<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>net<span class="token operator">/</span>wangmx1993328<span class="token operator">/</span>article<span class="token operator">/</span>details<span class="token operator">/</span><span class="token number">88787495</span>
https<span class="token punctuation">:</span><span class="token operator">//</span>blog<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>net<span class="token operator">/</span>caozl1132?spm<span class="token operator">=</span><span class="token number">1019.2139</span><span class="token number">.3001</span><span class="token number">.5343</span>
</code></pre></div><h3 id="break语句、continue语句" tabindex="-1"><a class="header-anchor" href="#break语句、continue语句" aria-hidden="true">#</a> break语句、continue语句</h3><div class="language-python" data-ext="py"><pre class="language-python"><code>
</code></pre></div><h3 id="pip" tabindex="-1"><a class="header-anchor" href="#pip" aria-hidden="true">#</a> pip</h3><ul><li>list 列出当前已经安装的包。使用命令<code>pip list -o</code>则可查询可升级的包。 show 显示包所在目录及信息，格式为：<code>pip show &lt;包名&gt;</code>。 search 搜索包，格式为：<code>pip search &lt;搜索关键字&gt;</code></li><li>pip list</li><li>pip install -i</li><li><code>pip install -i https://pypi.tuna.tsinghua.edu.cn/simple some-package</code></li></ul>`,22),e=[o];function c(l,u){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","index.html.vue"]]);export{r as default};
