import{_ as n,p as s,q as a,a1 as t}from"./framework-d81ad7e5.js";const p={},o=t(`<h3 id="poi-3-6" tabindex="-1"><a class="header-anchor" href="#poi-3-6" aria-hidden="true">#</a> poi 3.6</h3><div class="language-java" data-ext="java"><pre class="language-java"><code>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">File</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileInputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileOutputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">IOException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">InputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">OutputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>math<span class="token punctuation">.</span></span><span class="token class-name">BigDecimal</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">HashMap</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token class-name">Entry</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">HttpServletResponse</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Set</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span></span><span class="token class-name">POIXMLDocument</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFDocument</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFParagraph</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFRun</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFTable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFTableCell</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token punctuation">.</span>xwpf<span class="token punctuation">.</span>usermodel<span class="token punctuation">.</span></span><span class="token class-name">XWPFTableRow</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 
 * <span class="token keyword">@author</span> User
 * <span class="token keyword">@see</span><span class="token punctuation">{</span>poi<span class="token punctuation">}</span>
 * <span class="token keyword">@base</span>  poi Version-3.7.0
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RenderDocx</span> <span class="token punctuation">{</span>

	 <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">XWPFDocument</span> <span class="token function">changWord</span><span class="token punctuation">(</span><span class="token class-name">String</span> inputUrl<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> textMap<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">;</span>
	 <span class="token class-name">XWPFDocument</span> document <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
     <span class="token keyword">try</span> <span class="token punctuation">{</span>
         <span class="token comment">//获取docx解析对象</span>
         document <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XWPFDocument</span><span class="token punctuation">(</span><span class="token class-name">POIXMLDocument</span><span class="token punctuation">.</span><span class="token function">openPackage</span><span class="token punctuation">(</span>inputUrl<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">//解析替换文本段落对象</span>
          <span class="token function">renderText</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> textMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
         <span class="token comment">//解析替换表格对象</span>
          <span class="token function">renderTable</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> textMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
     <span class="token keyword">return</span> document<span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">renderTable</span><span class="token punctuation">(</span><span class="token class-name">XWPFDocument</span> document<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> textMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		 <span class="token comment">//获取表格对象集合</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFTable</span><span class="token punctuation">&gt;</span></span> tables <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getTables</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
     
        	 <span class="token comment">//循环所有需要进行替换的文本，进行替换</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tables<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">XWPFTable</span> table <span class="token operator">=</span> tables<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">checkText</span><span class="token punctuation">(</span>table<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFTableRow</span><span class="token punctuation">&gt;</span></span> rows <span class="token operator">=</span> table<span class="token punctuation">.</span><span class="token function">getRows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//遍历表格,并替换模板</span>
                    <span class="token function">eachTable</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span>rows<span class="token punctuation">,</span> textMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
		
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">eachTable</span><span class="token punctuation">(</span><span class="token class-name">XWPFDocument</span> document<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFTableRow</span><span class="token punctuation">&gt;</span></span> rows<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> textMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		 <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFTableRow</span> row <span class="token operator">:</span> rows<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFTableCell</span><span class="token punctuation">&gt;</span></span> cells <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getTableCells</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFTableCell</span> cell <span class="token operator">:</span> cells<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	                <span class="token comment">//判断单元格是否需要替换</span>
	                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">checkText</span><span class="token punctuation">(</span>cell<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	                    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFParagraph</span><span class="token punctuation">&gt;</span></span> paragraphs <span class="token operator">=</span> cell<span class="token punctuation">.</span><span class="token function">getParagraphs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> paragraph <span class="token operator">:</span> paragraphs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	                        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFRun</span><span class="token punctuation">&gt;</span></span> runs <span class="token operator">=</span> paragraph<span class="token punctuation">.</span><span class="token function">getRuns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	                        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFRun</span> run <span class="token operator">:</span> runs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	                            <span class="token class-name">Object</span> ob <span class="token operator">=</span> <span class="token function">changeValue</span><span class="token punctuation">(</span>run<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> textMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
	                            <span class="token keyword">if</span> <span class="token punctuation">(</span>ob <span class="token keyword">instanceof</span> <span class="token class-name">String</span> <span class="token operator">||</span> ob <span class="token keyword">instanceof</span> <span class="token class-name">Long</span> <span class="token operator">||</span> ob <span class="token keyword">instanceof</span> <span class="token class-name">BigDecimal</span> <span class="token operator">||</span> ob <span class="token keyword">instanceof</span> <span class="token class-name">Double</span>  <span class="token operator">||</span> ob <span class="token keyword">instanceof</span> <span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	                                run<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>ob<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	                            <span class="token punctuation">}</span> 
	                        <span class="token punctuation">}</span>
	                    <span class="token punctuation">}</span>
	                <span class="token punctuation">}</span>
	            <span class="token punctuation">}</span>
	        <span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">renderText</span><span class="token punctuation">(</span><span class="token class-name">XWPFDocument</span> document<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> textMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		 <span class="token comment">//获取段落集合</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFParagraph</span><span class="token punctuation">&gt;</span></span> paragraphs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getParagraphs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFParagraph</span> paragraph <span class="token operator">:</span> paragraphs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//判断此段落时候需要进行替换</span>
            <span class="token class-name">String</span> text <span class="token operator">=</span> paragraph<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">checkText</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">XWPFRun</span><span class="token punctuation">&gt;</span></span> runs <span class="token operator">=</span> paragraph<span class="token punctuation">.</span><span class="token function">getRuns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">XWPFRun</span> run <span class="token operator">:</span> runs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token comment">//替换模板原来位置</span>
                	<span class="token keyword">if</span><span class="token punctuation">(</span>run<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;$&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span>  run<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;{&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> run<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                		<span class="token class-name">Object</span> ob <span class="token operator">=</span> <span class="token function">changeValue</span><span class="token punctuation">(</span>run<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> textMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>ob <span class="token keyword">instanceof</span> <span class="token class-name">String</span> <span class="token operator">||</span> ob <span class="token keyword">instanceof</span> <span class="token class-name">Long</span> <span class="token operator">||</span> ob <span class="token keyword">instanceof</span> <span class="token class-name">BigDecimal</span> <span class="token operator">||</span> ob <span class="token keyword">instanceof</span> <span class="token class-name">Double</span>  <span class="token operator">||</span> ob <span class="token keyword">instanceof</span> <span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                            run<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>ob<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                	<span class="token punctuation">}</span>
                    
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
	
 <span class="token doc-comment comment">/**
     * 匹配传入信息集合与模板
     * <span class="token keyword">@param</span> <span class="token parameter">value</span> 模板需要替换的区域
     * <span class="token keyword">@param</span> <span class="token parameter">textMap</span> 传入信息集合
     * <span class="token keyword">@return</span> 模板需要替换区域信息集合对应值
     */</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> <span class="token function">changeValue</span><span class="token punctuation">(</span><span class="token class-name">String</span> value<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> textMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Entry</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> textSets <span class="token operator">=</span> textMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> valu <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> textSet <span class="token operator">:</span> textSets<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">//匹配模板与替换值 格式\${key}</span>
            <span class="token class-name">String</span> key <span class="token operator">=</span> textSet<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                valu <span class="token operator">=</span> textSet<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> valu<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token doc-comment comment">/**
     * 判断文本中时候包含$
     * <span class="token keyword">@param</span> <span class="token parameter">text</span> 文本
     * <span class="token keyword">@return</span> 包含返回true,不包含返回false
     */</span>
	<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">checkText</span><span class="token punctuation">(</span><span class="token class-name">String</span> text<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	  
	    
	        <span class="token keyword">boolean</span> check  <span class="token operator">=</span>  <span class="token boolean">false</span><span class="token punctuation">;</span>
	        <span class="token keyword">if</span><span class="token punctuation">(</span>text<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;$&quot;</span><span class="token punctuation">)</span><span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	            check <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	        <span class="token punctuation">}</span>
	        <span class="token keyword">return</span> check<span class="token punctuation">;</span>
	     
	<span class="token punctuation">}</span>
	
	
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment">//		String path = request.getSession().getServletContext().getRealPath(&quot;/&quot;);</span>
<span class="token comment">//		String inputUrl = path + File.separator + &quot;template&quot; + File.separator + &quot;abcd.docx&quot;;</span>
<span class="token comment">//		String downloadUrl = path + File.separator + &quot;download&quot; + File.separator + &quot;abcd.docx&quot;;</span>
 
<span class="token comment">//		Map&lt;String, Object&gt; dmap = aaaService.queryData(id);</span>
<span class="token comment">//		CustomXWPFDocument doc = changWord(inputUrl, dmap  );</span>
<span class="token comment">//		FileOutputStream fopts = new FileOutputStream(downloadUrl);</span>
<span class="token comment">//		doc.write(fopts);</span>
<span class="token comment">//		fopts.close();</span>
<span class="token comment">//		downloadFile(downloadUrl, response, &quot;下载文件.docx&quot;);</span>
	<span class="token punctuation">}</span>
	
	<span class="token doc-comment comment">/**
	 * <span class="token keyword">@see</span> 配套删除
	 * <span class="token keyword">@param</span> <span class="token parameter">fileUrl</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">response</span>
	 * <span class="token keyword">@param</span> <span class="token parameter">name</span>
	 */</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">downloadFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> fileUrl<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">OutputStream</span> out <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token comment">// 得到输入流  </span>
			<span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>fileUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
			inputStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
			response<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/octet-stream; charset=utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">,</span>
					<span class="token string">&quot;attachment; filename=&quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;GBK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;ISO8859_1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// 获取响应报文输出流对象  </span>
			<span class="token comment">// 获取response对象的输出流</span>
			out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
			<span class="token keyword">int</span> len<span class="token punctuation">;</span>
			<span class="token comment">// 循环取出流中的数据</span>
			<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> inputStream<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buffer<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token comment">// 然后删除该文件</span>
			file<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
			<span class="token keyword">try</span> <span class="token punctuation">{</span>
				inputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				out<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre></div>`,2),c=[o];function e(l,u){return s(),a("div",null,c)}const i=n(p,[["render",e],["__file","poi6.html.vue"]]);export{i as default};
